"use strict";
/* eslint-disable @typescript-eslint/no-unused-vars */
Object.defineProperty(exports, "__esModule", { value: true });
exports.zodToGenerativeAIParameters = void 0;
const zod_to_json_schema_1 = require("zod-to-json-schema");
function removeAdditionalProperties(schema) {
    const updatedSchema = { ...schema };
    if (Object.hasOwn(updatedSchema, "additionalProperties")) {
        delete updatedSchema.additionalProperties;
    }
    if (updatedSchema.properties) {
        const keys = Object.keys(updatedSchema.properties);
        removeProperties(updatedSchema.properties, keys, 0);
    }
    return updatedSchema;
}
function removeProperties(properties, keys, index) {
    if (index >= keys.length || !properties) {
        return;
    }
    const key = keys[index];
    // eslint-disable-next-line no-param-reassign
    properties[key] = removeAdditionalProperties(properties[key]);
    removeProperties(properties, keys, index + 1);
}
function zodToGenerativeAIParameters(
// eslint-disable-next-line @typescript-eslint/no-explicit-any
zodObj) {
    // GenerativeAI doesn't accept either the $schema or additionalProperties
    // attributes, so we need to explicitly remove them.
    const jsonSchema = removeAdditionalProperties((0, zod_to_json_schema_1.zodToJsonSchema)(zodObj));
    const { $schema, ...rest } = jsonSchema;
    return rest;
}
exports.zodToGenerativeAIParameters = zodToGenerativeAIParameters;

{"version":3,"file":"router.js","sources":["../../../src/browser/router.ts"],"sourcesContent":["import type { Transaction, TransactionContext } from '@sentry/types';\nimport { addHistoryInstrumentationHandler, browserPerformanceTimeOrigin, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../common/debug-build';\nimport { WINDOW } from './types';\n\n/**\n * Default function implementing pageload and navigation transactions\n */\nexport function instrumentRoutingWithDefaults<T extends Transaction>(\n  customStartTransaction: (context: TransactionContext) => T | undefined,\n  startTransactionOnPageLoad: boolean = true,\n  startTransactionOnLocationChange: boolean = true,\n): void {\n  if (!WINDOW || !WINDOW.location) {\n    DEBUG_BUILD && logger.warn('Could not initialize routing instrumentation due to invalid location');\n    return;\n  }\n\n  let startingUrl: string | undefined = WINDOW.location.href;\n\n  let activeTransaction: T | undefined;\n  if (startTransactionOnPageLoad) {\n    activeTransaction = customStartTransaction({\n      name: WINDOW.location.pathname,\n      // pageload should always start at timeOrigin (and needs to be in s, not ms)\n      startTimestamp: browserPerformanceTimeOrigin ? browserPerformanceTimeOrigin / 1000 : undefined,\n      op: 'pageload',\n      origin: 'auto.pageload.browser',\n      metadata: { source: 'url' },\n    });\n  }\n\n  if (startTransactionOnLocationChange) {\n    addHistoryInstrumentationHandler(({ to, from }) => {\n      /**\n       * This early return is there to account for some cases where a navigation transaction starts right after\n       * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n       * create an uneccessary navigation transaction.\n       *\n       * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n       * only be caused in certain development environments where the usage of a hot module reloader is causing\n       * errors.\n       */\n      if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n        startingUrl = undefined;\n        return;\n      }\n\n      if (from !== to) {\n        startingUrl = undefined;\n        if (activeTransaction) {\n          DEBUG_BUILD && logger.log(`[Tracing] Finishing current transaction with op: ${activeTransaction.op}`);\n          // If there's an open transaction on the scope, we need to finish it before creating an new one.\n          activeTransaction.finish();\n        }\n        activeTransaction = customStartTransaction({\n          name: WINDOW.location.pathname,\n          op: 'navigation',\n          origin: 'auto.navigation.browser',\n          metadata: { source: 'url' },\n        });\n      }\n    });\n  }\n}\n"],"names":["WINDOW","DEBUG_BUILD","logger","browserPerformanceTimeOrigin","addHistoryInstrumentationHandler"],"mappings":";;;;;;AAMA;AACA;AACA;AACA,SAAA,6BAAA;AACA,EAAA,sBAAA;AACA,EAAA,0BAAA,GAAA,IAAA;AACA,EAAA,gCAAA,GAAA,IAAA;AACA,EAAA;AACA,EAAA,IAAA,CAAAA,YAAA,IAAA,CAAAA,YAAA,CAAA,QAAA,EAAA;AACA,IAAAC,sBAAA,IAAAC,YAAA,CAAA,IAAA,CAAA,sEAAA,CAAA,CAAA;AACA,IAAA,OAAA;AACA,GAAA;AACA;AACA,EAAA,IAAA,WAAA,GAAAF,YAAA,CAAA,QAAA,CAAA,IAAA,CAAA;AACA;AACA,EAAA,IAAA,iBAAA,CAAA;AACA,EAAA,IAAA,0BAAA,EAAA;AACA,IAAA,iBAAA,GAAA,sBAAA,CAAA;AACA,MAAA,IAAA,EAAAA,YAAA,CAAA,QAAA,CAAA,QAAA;AACA;AACA,MAAA,cAAA,EAAAG,kCAAA,GAAAA,kCAAA,GAAA,IAAA,GAAA,SAAA;AACA,MAAA,EAAA,EAAA,UAAA;AACA,MAAA,MAAA,EAAA,uBAAA;AACA,MAAA,QAAA,EAAA,EAAA,MAAA,EAAA,KAAA,EAAA;AACA,KAAA,CAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,IAAA,gCAAA,EAAA;AACA,IAAAC,sCAAA,CAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,KAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAA,IAAA,IAAA,KAAA,SAAA,IAAA,WAAA,IAAA,WAAA,CAAA,OAAA,CAAA,EAAA,CAAA,KAAA,CAAA,CAAA,EAAA;AACA,QAAA,WAAA,GAAA,SAAA,CAAA;AACA,QAAA,OAAA;AACA,OAAA;AACA;AACA,MAAA,IAAA,IAAA,KAAA,EAAA,EAAA;AACA,QAAA,WAAA,GAAA,SAAA,CAAA;AACA,QAAA,IAAA,iBAAA,EAAA;AACA,UAAAH,sBAAA,IAAAC,YAAA,CAAA,GAAA,CAAA,CAAA,iDAAA,EAAA,iBAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;AACA;AACA,UAAA,iBAAA,CAAA,MAAA,EAAA,CAAA;AACA,SAAA;AACA,QAAA,iBAAA,GAAA,sBAAA,CAAA;AACA,UAAA,IAAA,EAAAF,YAAA,CAAA,QAAA,CAAA,QAAA;AACA,UAAA,EAAA,EAAA,YAAA;AACA,UAAA,MAAA,EAAA,yBAAA;AACA,UAAA,QAAA,EAAA,EAAA,MAAA,EAAA,KAAA,EAAA;AACA,SAAA,CAAA,CAAA;AACA,OAAA;AACA,KAAA,CAAA,CAAA;AACA,GAAA;AACA;;;;"}
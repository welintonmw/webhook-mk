"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StrapiTokenApi = void 0;
class StrapiTokenApi {
    constructor() {
        this.name = 'strapiTokenApi';
        this.displayName = 'Strapi API Token';
        this.documentationUrl = 'strapi';
        this.properties = [
            {
                displayName: 'API Token',
                name: 'apiToken',
                type: 'string',
                typeOptions: { password: true },
                default: '',
            },
            {
                displayName: 'URL',
                name: 'url',
                type: 'string',
                default: '',
                placeholder: 'https://api.example.com',
            },
            {
                displayName: 'API Version',
                name: 'apiVersion',
                default: 'v3',
                type: 'options',
                description: 'The version of api to be used',
                options: [
                    {
                        name: 'Version 4',
                        value: 'v4',
                        description: 'API version supported by Strapi 4',
                    },
                    {
                        name: 'Version 3',
                        value: 'v3',
                        description: 'API version supported by Strapi 3',
                    },
                ],
            },
        ];
        this.authenticate = {
            type: 'generic',
            properties: {
                headers: {
                    Authorization: '=Bearer {{$credentials.apiToken}}',
                },
            },
        };
        this.test = {
            request: {
                baseURL: '={{$credentials.url}}',
                url: '={{$credentials.apiVersion === "v3" ? "/users/count" : "/api/users/count"}}',
                ignoreHttpStatusErrors: true,
            },
            rules: [
                {
                    type: 'responseSuccessBody',
                    properties: {
                        key: 'error.name',
                        value: 'UnauthorizedError',
                        message: 'Invalid API token',
                    },
                },
            ],
        };
    }
}
exports.StrapiTokenApi = StrapiTokenApi;
//# sourceMappingURL=StrapiTokenApi.credentials.js.map
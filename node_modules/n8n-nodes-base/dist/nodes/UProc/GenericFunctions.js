"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.uprocApiRequest = void 0;
const n8n_workflow_1 = require("n8n-workflow");
async function uprocApiRequest(method, body = {}, qs = {}, uri, option = {}) {
    const credentials = await this.getCredentials('uprocApi');
    if (credentials === undefined) {
        throw new n8n_workflow_1.NodeOperationError(this.getNode(), 'No credentials got returned!');
    }
    const token = Buffer.from(`${credentials.email}:${credentials.apiKey}`).toString('base64');
    const options = {
        headers: {
            Authorization: `Basic ${token}`,
            'User-agent': 'n8n',
        },
        method,
        qs,
        body,
        uri: uri || `https://api.uproc.io/api/v2/process`,
        json: true,
    };
    try {
        return await this.helpers.request(options);
    }
    catch (error) {
        throw new n8n_workflow_1.NodeApiError(this.getNode(), error);
    }
}
exports.uprocApiRequest = uprocApiRequest;
//# sourceMappingURL=GenericFunctions.js.map
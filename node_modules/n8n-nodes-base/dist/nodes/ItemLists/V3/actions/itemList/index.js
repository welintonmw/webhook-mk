"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.description = exports.summarize = exports.splitOutItems = exports.sort = exports.removeDuplicates = exports.limit = exports.concatenateItems = void 0;
const concatenateItems = __importStar(require("./concatenateItems.operation"));
exports.concatenateItems = concatenateItems;
const limit = __importStar(require("./limit.operation"));
exports.limit = limit;
const removeDuplicates = __importStar(require("./removeDuplicates.operation"));
exports.removeDuplicates = removeDuplicates;
const sort = __importStar(require("./sort.operation"));
exports.sort = sort;
const splitOutItems = __importStar(require("./splitOutItems.operation"));
exports.splitOutItems = splitOutItems;
const summarize = __importStar(require("./summarize.operation"));
exports.summarize = summarize;
exports.description = [
    {
        displayName: 'Operation',
        name: 'operation',
        type: 'options',
        noDataExpression: true,
        displayOptions: {
            show: {
                resource: ['itemList'],
            },
        },
        options: [
            {
                name: 'Concatenate Items',
                value: 'concatenateItems',
                description: 'Combine fields into a list in a single new item',
                action: 'Concatenate Items',
            },
            {
                name: 'Limit',
                value: 'limit',
                description: 'Remove items if there are too many',
                action: 'Limit',
            },
            {
                name: 'Remove Duplicates',
                value: 'removeDuplicates',
                description: 'Remove extra items that are similar',
                action: 'Remove Duplicates',
            },
            {
                name: 'Sort',
                value: 'sort',
                description: 'Change the item order',
                action: 'Sort',
            },
            {
                name: 'Split Out Items',
                value: 'splitOutItems',
                description: "Turn a list or values of object's properties inside item(s) into separate items",
                action: 'Split Out Items',
            },
            {
                name: 'Summarize',
                value: 'summarize',
                description: 'Aggregate items together (pivot table)',
                action: 'Summarize',
            },
        ],
        default: 'splitOutItems',
    },
    ...concatenateItems.description,
    ...limit.description,
    ...removeDuplicates.description,
    ...sort.description,
    ...splitOutItems.description,
    ...summarize.description,
];
//# sourceMappingURL=index.js.map
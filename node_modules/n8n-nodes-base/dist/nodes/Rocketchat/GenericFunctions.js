"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateJSON = exports.rocketchatApiRequest = void 0;
const n8n_workflow_1 = require("n8n-workflow");
async function rocketchatApiRequest(resource, method, operation, body = {}, headers) {
    const credentials = await this.getCredentials('rocketchatApi');
    if (credentials === undefined) {
        throw new n8n_workflow_1.NodeOperationError(this.getNode(), 'No credentials got returned!');
    }
    const headerWithAuthentication = Object.assign({}, headers, {
        'X-Auth-Token': credentials.authKey,
        'X-User-Id': credentials.userId,
    });
    const options = {
        headers: headerWithAuthentication,
        method,
        body,
        uri: `${credentials.domain}/api/v1${resource}.${operation}`,
        json: true,
    };
    if (Object.keys(options.body).length === 0) {
        delete options.body;
    }
    try {
        return await this.helpers.request(options);
    }
    catch (error) {
        throw new n8n_workflow_1.NodeApiError(this.getNode(), error);
    }
}
exports.rocketchatApiRequest = rocketchatApiRequest;
function validateJSON(json) {
    let result;
    try {
        result = JSON.parse(json);
    }
    catch (exception) {
        result = [];
    }
    return result;
}
exports.validateJSON = validateJSON;
//# sourceMappingURL=GenericFunctions.js.map
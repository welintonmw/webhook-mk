"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.execute = exports.description = void 0;
const transport_1 = require("../../transport");
const utils_1 = require("../../helpers/utils");
const descriptions_1 = require("../../descriptions");
const utilities_1 = require("../../../../utils/utilities");
const properties = [
    descriptions_1.caseRLC,
    {
        displayName: 'Fields',
        name: 'taskFields',
        type: 'resourceMapper',
        default: {
            mappingMode: 'defineBelow',
            value: null,
        },
        noDataExpression: true,
        required: true,
        typeOptions: {
            resourceMapper: {
                resourceMapperMethod: 'getTaskFields',
                mode: 'add',
                valuesLabel: 'Fields',
            },
        },
    },
];
const displayOptions = {
    show: {
        resource: ['task'],
        operation: ['create'],
    },
};
exports.description = (0, utilities_1.updateDisplayOptions)(displayOptions, properties);
async function execute(i, item) {
    let responseData = [];
    let body = {};
    const dataMode = this.getNodeParameter('taskFields.mappingMode', i);
    const caseId = this.getNodeParameter('caseId', i, '', { extractValue: true });
    if (dataMode === 'autoMapInputData') {
        const schema = this.getNodeParameter('taskFields.schema', i);
        body = (0, utils_1.prepareInputItem)(item.json, schema, i);
    }
    if (dataMode === 'defineBelow') {
        const taskFields = this.getNodeParameter('taskFields.value', i, []);
        body = taskFields;
    }
    body = (0, utils_1.fixFieldType)(body);
    responseData = await transport_1.theHiveApiRequest.call(this, 'POST', `/v1/case/${caseId}/task`, body);
    const executionData = this.helpers.constructExecutionMetaData((0, utilities_1.wrapData)(responseData), {
        itemData: { item: i },
    });
    return executionData;
}
exports.execute = execute;
//# sourceMappingURL=create.operation.js.map
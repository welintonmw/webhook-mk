import { IExecuteFunctions, IHookFunctions, ILoadOptionsFunctions, IWebhookFunctions } from 'n8n-core';
import { IDataObject, INodePropertyOptions } from 'n8n-workflow';
import { Address, Filter, ProductAttribute, Search } from './Types';
export declare function magentoApiRequest(this: IWebhookFunctions | IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions, method: string, resource: string, body?: any, qs?: IDataObject, uri?: string, headers?: IDataObject, option?: IDataObject): Promise<any>;
export declare function magentoApiRequestAllItems(this: IHookFunctions | ILoadOptionsFunctions | IExecuteFunctions, propertyName: string, method: string, resource: string, body?: any, query?: IDataObject): Promise<any>;
export declare function getAddressesUi(): {
    displayName: string;
    name: string;
    placeholder: string;
    type: string;
    typeOptions: {
        multipleValues: boolean;
    };
    default: {};
    options: {
        displayName: string;
        name: string;
        values: ({
            displayName: string;
            name: string;
            type: string;
            required: boolean;
            default: string;
            typeOptions?: undefined;
            descrition?: undefined;
        } | {
            displayName: string;
            name: string;
            type: string;
            default: string;
            required?: undefined;
            typeOptions?: undefined;
            descrition?: undefined;
        } | {
            displayName: string;
            name: string;
            type: string;
            typeOptions: {
                loadOptionsMethod: string;
            };
            required: boolean;
            default: string;
            descrition?: undefined;
        } | {
            displayName: string;
            name: string;
            type: string;
            default: boolean;
            descrition: string;
            required?: undefined;
            typeOptions?: undefined;
        })[];
    }[];
};
export declare function adjustAddresses(addresses: [{
    street: string;
    [key: string]: string;
}]): Address[];
export declare function getSearchFilters(resource: string, filterableAttributeFunction: string, sortableAttributeFunction: string): ({
    displayName: string;
    name: string;
    type: string;
    options: {
        name: string;
        value: string;
    }[];
    displayOptions: {
        show: {
            resource: string[];
            operation: string[];
            filterType?: undefined;
        };
    };
    default: string;
    typeOptions?: undefined;
    placeholder?: undefined;
    description?: undefined;
} | {
    displayName: string;
    name: string;
    type: string;
    options: {
        name: string;
        value: string;
    }[];
    displayOptions: {
        show: {
            resource: string[];
            operation: string[];
            filterType: string[];
        };
    };
    default: string;
    typeOptions?: undefined;
    placeholder?: undefined;
    description?: undefined;
} | {
    displayName: string;
    name: string;
    type: string;
    typeOptions: {
        multipleValues: boolean;
        alwaysOpenEditWindow?: undefined;
    };
    displayOptions: {
        show: {
            resource: string[];
            operation: string[];
            filterType: string[];
        };
    };
    default: string;
    placeholder: string;
    options: {
        displayName: string;
        name: string;
        values: ({
            displayName: string;
            name: string;
            type: string;
            options: ({
                name: string;
                value: string;
                description?: undefined;
            } | {
                name: string;
                value: string;
                description: string;
            })[];
            default: string;
        } | {
            displayName: string;
            name: string;
            type: string;
            typeOptions: {
                loadOptionsMethod: string;
            };
            default: string;
            displayOptions?: undefined;
        } | {
            displayName: string;
            name: string;
            type: string;
            displayOptions: {
                hide: {
                    condition_type: string[];
                };
            };
            default: string;
            typeOptions?: undefined;
        })[];
    }[];
    description?: undefined;
} | {
    displayName: string;
    name: string;
    type: string;
    displayOptions: {
        show: {
            resource: string[];
            operation: string[];
            filterType: string[];
        };
    };
    default: string;
    options?: undefined;
    typeOptions?: undefined;
    placeholder?: undefined;
    description?: undefined;
} | {
    displayName: string;
    name: string;
    type: string;
    typeOptions: {
        alwaysOpenEditWindow: boolean;
        multipleValues?: undefined;
    };
    displayOptions: {
        show: {
            resource: string[];
            operation: string[];
            filterType: string[];
        };
    };
    default: string;
    description: string;
    options?: undefined;
    placeholder?: undefined;
} | {
    displayName: string;
    name: string;
    type: string;
    placeholder: string;
    default: {};
    displayOptions: {
        show: {
            resource: string[];
            operation: string[];
            filterType?: undefined;
        };
    };
    options: {
        displayName: string;
        name: string;
        type: string;
        placeholder: string;
        typeOptions: {
            multipleValues: boolean;
        };
        default: never[];
        options: {
            displayName: string;
            name: string;
            values: ({
                displayName: string;
                name: string;
                type: string;
                options: {
                    name: string;
                    value: string;
                }[];
                default: string;
                description: string;
                typeOptions?: undefined;
            } | {
                displayName: string;
                name: string;
                type: string;
                typeOptions: {
                    loadOptionsMethod: string;
                };
                default: string;
                description: string;
                options?: undefined;
            })[];
        }[];
    }[];
    typeOptions?: undefined;
    description?: undefined;
})[];
export declare function getFilterQuery(data: {
    conditions?: Filter[];
    matchType: string;
    sort: [{
        direction: string;
        field: string;
    }];
}): Search;
export declare function validateJSON(json: string | undefined): any;
export declare function getCustomerOptionalFields(): ({
    displayName: string;
    name: string;
    placeholder: string;
    type: string;
    typeOptions: {
        multipleValues: boolean;
    };
    default: {};
    options: {
        displayName: string;
        name: string;
        values: ({
            displayName: string;
            name: string;
            type: string;
            required: boolean;
            default: string;
            typeOptions?: undefined;
            descrition?: undefined;
        } | {
            displayName: string;
            name: string;
            type: string;
            default: string;
            required?: undefined;
            typeOptions?: undefined;
            descrition?: undefined;
        } | {
            displayName: string;
            name: string;
            type: string;
            typeOptions: {
                loadOptionsMethod: string;
            };
            required: boolean;
            default: string;
            descrition?: undefined;
        } | {
            displayName: string;
            name: string;
            type: string;
            default: boolean;
            descrition: string;
            required?: undefined;
            typeOptions?: undefined;
        })[];
    }[];
} | {
    displayName: string;
    name: string;
    type: string;
    default: string;
    typeOptions?: undefined;
    placeholder?: undefined;
    options?: undefined;
    displayOptions?: undefined;
} | {
    displayName: string;
    name: string;
    type: string;
    typeOptions: {
        multipleValues: boolean;
        loadOptionsMethod?: undefined;
    };
    default: string;
    placeholder: string;
    options: {
        displayName: string;
        name: string;
        values: ({
            displayName: string;
            name: string;
            type: string;
            typeOptions: {
                loadOptionsMethod: string;
            };
            default: string;
        } | {
            displayName: string;
            name: string;
            type: string;
            default: string;
            typeOptions?: undefined;
        })[];
    }[];
    displayOptions?: undefined;
} | {
    displayName: string;
    name: string;
    type: string;
    options: {
        name: string;
        value: number;
    }[];
    default: string;
    typeOptions?: undefined;
    placeholder?: undefined;
    displayOptions?: undefined;
} | {
    displayName: string;
    name: string;
    type: string;
    typeOptions: {
        loadOptionsMethod: string;
        multipleValues?: undefined;
    };
    default: string;
    placeholder?: undefined;
    options?: undefined;
    displayOptions?: undefined;
} | {
    displayName: string;
    name: string;
    type: string;
    default: boolean;
    typeOptions?: undefined;
    placeholder?: undefined;
    options?: undefined;
    displayOptions?: undefined;
} | {
    displayName: string;
    name: string;
    type: string;
    displayOptions: {
        show: {
            '/operation': string[];
        };
    };
    typeOptions: {
        loadOptionsMethod: string;
        multipleValues?: undefined;
    };
    default: string;
    placeholder?: undefined;
    options?: undefined;
})[];
export declare function getProductOptionalFields(): ({
    displayName: string;
    name: string;
    type: string;
    displayOptions: {
        show: {
            '/operation': string[];
        };
    };
    typeOptions: {
        loadOptionsMethod: string;
    };
    default: string;
    options?: undefined;
} | {
    displayName: string;
    name: string;
    type: string;
    displayOptions: {
        show: {
            '/operation': string[];
        };
    };
    default: string;
    typeOptions?: undefined;
    options?: undefined;
} | {
    displayName: string;
    name: string;
    type: string;
    displayOptions: {
        show: {
            '/operation': string[];
        };
    };
    default: number;
    typeOptions?: undefined;
    options?: undefined;
} | {
    displayName: string;
    name: string;
    type: string;
    options: {
        name: string;
        value: number;
    }[];
    default: number;
    displayOptions?: undefined;
    typeOptions?: undefined;
} | {
    displayName: string;
    name: string;
    type: string;
    typeOptions: {
        loadOptionsMethod: string;
    };
    default: string;
    displayOptions?: undefined;
    options?: undefined;
} | {
    displayName: string;
    name: string;
    type: string;
    default: number;
    displayOptions?: undefined;
    typeOptions?: undefined;
    options?: undefined;
})[];
export declare function getOrderFields(): string[];
export declare const sort: (a: {
    name: string;
}, b: {
    name: string;
}) => 1 | -1 | 0;
export declare function getProductAttributes(this: ILoadOptionsFunctions, filter?: (attribute: ProductAttribute) => any, extraValue?: {
    name: string;
    value: string;
}): Promise<INodePropertyOptions[]>;

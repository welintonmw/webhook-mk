"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.descriptions = exports.update = exports.remove = exports.read = exports.delete = exports.create = exports.clear = exports.appendOrUpdate = exports.append = void 0;
const constants_1 = require("../../../../constants");
const append = __importStar(require("./append.operation"));
exports.append = append;
const appendOrUpdate = __importStar(require("./appendOrUpdate.operation"));
exports.appendOrUpdate = appendOrUpdate;
const clear = __importStar(require("./clear.operation"));
exports.clear = clear;
const create = __importStar(require("./create.operation"));
exports.create = create;
const del = __importStar(require("./delete.operation"));
exports.delete = del;
const read = __importStar(require("./read.operation"));
exports.read = read;
const remove = __importStar(require("./remove.operation"));
exports.remove = remove;
const update = __importStar(require("./update.operation"));
exports.update = update;
exports.descriptions = [
    {
        displayName: 'Operation',
        name: 'operation',
        type: 'options',
        noDataExpression: true,
        displayOptions: {
            show: {
                resource: ['sheet'],
            },
        },
        options: [
            {
                name: 'Append or Update Row',
                value: 'appendOrUpdate',
                description: 'Append a new row or update an existing one (upsert)',
                action: 'Append or update row in sheet',
            },
            {
                name: 'Append Row',
                value: 'append',
                description: 'Create a new row in a sheet',
                action: 'Append row in sheet',
            },
            {
                name: 'Clear',
                value: 'clear',
                description: 'Delete all the contents or a part of a sheet',
                action: 'Clear sheet',
            },
            {
                name: 'Create',
                value: 'create',
                description: 'Create a new sheet',
                action: 'Create sheet',
            },
            {
                name: 'Delete',
                value: 'remove',
                description: 'Permanently delete a sheet',
                action: 'Delete sheet',
            },
            {
                name: 'Delete Rows or Columns',
                value: 'delete',
                description: 'Delete columns or rows from a sheet',
                action: 'Delete rows or columns from sheet',
            },
            {
                name: 'Get Row(s)',
                value: 'read',
                description: 'Retrieve one or more rows from a sheet',
                action: 'Get row(s) in sheet',
            },
            {
                name: 'Update Row',
                value: 'update',
                description: 'Update an existing row in a sheet',
                action: 'Update row in sheet',
            },
        ],
        default: 'read',
    },
    {
        displayName: 'Document',
        name: 'documentId',
        type: 'resourceLocator',
        default: { mode: 'list', value: '' },
        required: true,
        modes: [
            {
                displayName: 'From List',
                name: 'list',
                type: 'list',
                typeOptions: {
                    searchListMethod: 'spreadSheetsSearch',
                    searchable: true,
                },
            },
            {
                displayName: 'By URL',
                name: 'url',
                type: 'string',
                extractValue: {
                    type: 'regex',
                    regex: constants_1.GOOGLE_DRIVE_FILE_URL_REGEX,
                },
                validation: [
                    {
                        type: 'regex',
                        properties: {
                            regex: constants_1.GOOGLE_DRIVE_FILE_URL_REGEX,
                            errorMessage: 'Not a valid Google Drive File URL',
                        },
                    },
                ],
            },
            {
                displayName: 'By ID',
                name: 'id',
                type: 'string',
                validation: [
                    {
                        type: 'regex',
                        properties: {
                            regex: '[a-zA-Z0-9\\-_]{2,}',
                            errorMessage: 'Not a valid Google Drive File ID',
                        },
                    },
                ],
                url: '=https://docs.google.com/spreadsheets/d/{{$value}}/edit',
            },
        ],
        displayOptions: {
            show: {
                resource: ['sheet'],
            },
        },
    },
    {
        displayName: 'Sheet',
        name: 'sheetName',
        type: 'resourceLocator',
        default: { mode: 'list', value: '' },
        required: true,
        typeOptions: {
            loadOptionsDependsOn: ['documentId.value'],
        },
        modes: [
            {
                displayName: 'From List',
                name: 'list',
                type: 'list',
                typeOptions: {
                    searchListMethod: 'sheetsSearch',
                    searchable: false,
                },
            },
            {
                displayName: 'By URL',
                name: 'url',
                type: 'string',
                extractValue: {
                    type: 'regex',
                    regex: 'https:\\/\\/docs\\.google\\.com/spreadsheets\\/d\\/[0-9a-zA-Z\\-_]+\\/edit\\#gid=([0-9]+)',
                },
                validation: [
                    {
                        type: 'regex',
                        properties: {
                            regex: 'https:\\/\\/docs\\.google\\.com/spreadsheets\\/d\\/[0-9a-zA-Z\\-_]+\\/edit\\#gid=([0-9]+)',
                            errorMessage: 'Not a valid Sheet URL',
                        },
                    },
                ],
            },
            {
                displayName: 'By ID',
                name: 'id',
                type: 'string',
                validation: [
                    {
                        type: 'regex',
                        properties: {
                            regex: '((gid=)?[0-9]{1,})',
                            errorMessage: 'Not a valid Sheet ID',
                        },
                    },
                ],
            },
            {
                displayName: 'By Name',
                name: 'name',
                type: 'string',
                placeholder: 'Sheet1',
            },
        ],
        displayOptions: {
            show: {
                resource: ['sheet'],
                operation: ['append', 'appendOrUpdate', 'clear', 'delete', 'read', 'remove', 'update'],
            },
        },
    },
    ...append.description,
    ...clear.description,
    ...create.description,
    ...del.description,
    ...read.description,
    ...update.description,
    ...appendOrUpdate.description,
];
//# sourceMappingURL=Sheet.resource.js.map
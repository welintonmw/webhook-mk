"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.execute = exports.description = exports.properties = void 0;
const utils_1 = require("../../helpers/utils");
const transport_1 = require("../../transport");
const descriptions_1 = require("../../descriptions");
const utilities_1 = require("../../../../../../utils/utilities");
exports.properties = [
    descriptions_1.contactRLC,
    {
        displayName: 'Output',
        name: 'output',
        type: 'options',
        default: 'simple',
        options: [
            {
                name: 'Simplified',
                value: 'simple',
            },
            {
                name: 'Raw',
                value: 'raw',
            },
            {
                name: 'Select Included Fields',
                value: 'fields',
            },
        ],
    },
    {
        displayName: 'Fields',
        name: 'fields',
        type: 'multiOptions',
        description: 'The fields to add to the output',
        displayOptions: {
            show: {
                output: ['fields'],
            },
        },
        options: utils_1.contactFields,
        default: [],
    },
];
const displayOptions = {
    show: {
        resource: ['contact'],
        operation: ['get'],
    },
};
exports.description = (0, utilities_1.updateDisplayOptions)(displayOptions, exports.properties);
async function execute(index) {
    const qs = {};
    const contactId = this.getNodeParameter('contactId', index, undefined, {
        extractValue: true,
    });
    const output = this.getNodeParameter('output', index);
    if (output === 'fields') {
        const fields = this.getNodeParameter('fields', index);
        qs.$select = fields.join(',');
    }
    if (output === 'simple') {
        qs.$select = 'id,displayName,emailAddresses,businessPhones,mobilePhone';
    }
    const responseData = await transport_1.microsoftApiRequest.call(this, 'GET', `/contacts/${contactId}`, undefined, qs);
    const executionData = this.helpers.constructExecutionMetaData(this.helpers.returnJsonArray(responseData), { itemData: { item: index } });
    return executionData;
}
exports.execute = execute;
//# sourceMappingURL=get.operation.js.map
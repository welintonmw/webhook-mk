import type { ITriggerFunctions, IDataObject, ILoadOptionsFunctions, INodeListSearchResult } from 'n8n-workflow';
import pgPromise from 'pg-promise';
import type pg from 'pg-promise/typescript/pg-subset';
export declare function prepareNames(id: string, mode: string, additionalFields: IDataObject): {
    functionName: string;
    triggerName: string;
    channelName: string;
};
export declare function pgTriggerFunction(this: ITriggerFunctions, db: pgPromise.IDatabase<{}, pg.IClient>, additionalFields: IDataObject, functionName: string, triggerName: string, channelName: string): Promise<void>;
export declare function initDB(this: ITriggerFunctions | ILoadOptionsFunctions): Promise<{
    db: pgPromise.IDatabase<{}, pg.IClient>;
    pgp: pgPromise.IMain<{}, pg.IClient>;
}>;
export declare function searchSchema(this: ILoadOptionsFunctions): Promise<INodeListSearchResult>;
export declare function searchTables(this: ILoadOptionsFunctions): Promise<INodeListSearchResult>;

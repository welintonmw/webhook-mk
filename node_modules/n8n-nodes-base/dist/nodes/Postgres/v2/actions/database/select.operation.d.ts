import type { IExecuteFunctions, INodeExecutionData, INodeProperties } from 'n8n-workflow';
import type { PgpDatabase, PostgresNodeOptions, QueriesRunner } from '../../helpers/interfaces';
export declare const description: {
    displayOptions: import("n8n-workflow").IDisplayOptions;
    displayName: string;
    name: string;
    type: import("n8n-workflow").NodePropertyTypes;
    typeOptions?: import("n8n-workflow").INodePropertyTypeOptions | undefined;
    default: import("n8n-workflow").NodeParameterValueType;
    description?: string | undefined;
    hint?: string | undefined;
    options?: (INodeProperties | import("n8n-workflow").INodePropertyOptions | import("n8n-workflow").INodePropertyCollection)[] | undefined;
    placeholder?: string | undefined;
    isNodeSetting?: boolean | undefined;
    noDataExpression?: boolean | undefined;
    required?: boolean | undefined;
    routing?: import("n8n-workflow").INodePropertyRouting | undefined;
    credentialTypes?: ("extends:oAuth2Api" | "extends:oAuth1Api" | "has:authenticate" | "has:genericAuth")[] | undefined;
    extractValue?: import("n8n-workflow").INodePropertyValueExtractorRegex | undefined;
    modes?: import("n8n-workflow").INodePropertyMode[] | undefined;
    requiresDataPath?: "single" | "multiple" | undefined;
    doNotInherit?: boolean | undefined;
    validateType?: keyof import("n8n-workflow").FieldTypeMap | undefined;
    ignoreValidationDuringExecution?: boolean | undefined;
}[];
export declare function execute(this: IExecuteFunctions, runQueries: QueriesRunner, items: INodeExecutionData[], nodeOptions: PostgresNodeOptions, _db?: PgpDatabase): Promise<INodeExecutionData[]>;

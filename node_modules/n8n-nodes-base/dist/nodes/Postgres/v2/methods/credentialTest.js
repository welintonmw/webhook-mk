"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.postgresConnectionTest = void 0;
const ssh2_1 = require("ssh2");
const transport_1 = require("../transport");
async function postgresConnectionTest(credential) {
    const credentials = credential.data;
    let sshClientCreated = new ssh2_1.Client();
    let pgpClientCreated;
    try {
        const { db, pgp, sshClient } = await (0, transport_1.configurePostgres)(credentials, {}, sshClientCreated);
        sshClientCreated = sshClient;
        pgpClientCreated = pgp;
        await db.connect();
    }
    catch (error) {
        let message = error.message;
        if (error.message.includes('ECONNREFUSED')) {
            message = 'Connection refused';
        }
        if (error.message.includes('ENOTFOUND')) {
            message = 'Host not found, please check your host name';
        }
        if (error.message.includes('ETIMEDOUT')) {
            message = 'Connection timed out';
        }
        return {
            status: 'Error',
            message,
        };
    }
    finally {
        if (sshClientCreated) {
            sshClientCreated.end();
        }
        if (pgpClientCreated) {
            pgpClientCreated.end();
        }
    }
    return {
        status: 'OK',
        message: 'Connection successful!',
    };
}
exports.postgresConnectionTest = postgresConnectionTest;
//# sourceMappingURL=credentialTest.js.map
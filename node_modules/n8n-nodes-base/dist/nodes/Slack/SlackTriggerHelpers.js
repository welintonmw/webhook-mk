"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.downloadFile = exports.getChannelInfo = exports.getUserInfo = void 0;
const n8n_workflow_1 = require("n8n-workflow");
const GenericFunctions_1 = require("./V2/GenericFunctions");
async function getUserInfo(userId) {
    const user = await GenericFunctions_1.slackApiRequest.call(this, 'GET', '/users.info', {}, {
        user: userId,
    });
    return user.user.name;
}
exports.getUserInfo = getUserInfo;
async function getChannelInfo(channelId) {
    const channel = await GenericFunctions_1.slackApiRequest.call(this, 'GET', '/conversations.info', {}, {
        channel: channelId,
    });
    return channel.channel.name;
}
exports.getChannelInfo = getChannelInfo;
async function downloadFile(url) {
    let options = {
        method: 'GET',
        url,
    };
    const requestOptions = {
        encoding: 'arraybuffer',
        returnFullResponse: true,
        json: false,
        useStream: true,
    };
    options = Object.assign({}, options, requestOptions);
    const response = await this.helpers.requestWithAuthentication.call(this, 'slackApi', options);
    if (response.ok === false) {
        if (response.error === 'paid_teams_only') {
            throw new n8n_workflow_1.NodeOperationError(this.getNode(), `Your current Slack plan does not include the resource '${this.getNodeParameter('resource', 0)}'`, {
                description: 'Hint: Upgrade to a Slack plan that includes the functionality you want to use.',
                level: 'warning',
            });
        }
        else if (response.error === 'missing_scope') {
            throw new n8n_workflow_1.NodeOperationError(this.getNode(), 'Your Slack credential is missing required Oauth Scopes', {
                description: `Add the following scope(s) to your Slack App: ${response.needed}`,
                level: 'warning',
            });
        }
        throw new n8n_workflow_1.NodeOperationError(this.getNode(), 'Slack error response: ' + JSON.stringify(response.error));
    }
    return response;
}
exports.downloadFile = downloadFile;
//# sourceMappingURL=SlackTriggerHelpers.js.map
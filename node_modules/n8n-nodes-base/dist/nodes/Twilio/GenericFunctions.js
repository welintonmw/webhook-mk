"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.twilioApiRequest = void 0;
const n8n_workflow_1 = require("n8n-workflow");
async function twilioApiRequest(method, endpoint, body, query) {
    const credentials = await this.getCredentials('twilioApi');
    if (credentials === undefined) {
        throw new n8n_workflow_1.NodeOperationError(this.getNode(), 'No credentials got returned!');
    }
    if (query === undefined) {
        query = {};
    }
    const options = {
        method,
        form: body,
        qs: query,
        uri: `https://api.twilio.com/2010-04-01/Accounts/${credentials.accountSid}${endpoint}`,
        json: true,
    };
    if (credentials.authType === 'apiKey') {
        options.auth = {
            user: credentials.apiKeySid,
            password: credentials.apiKeySecret,
        };
    }
    else if (credentials.authType === 'authToken') {
        options.auth = {
            user: credentials.accountSid,
            pass: credentials.authToken,
        };
    }
    try {
        return await this.helpers.request(options);
    }
    catch (error) {
        throw new n8n_workflow_1.NodeApiError(this.getNode(), error);
    }
}
exports.twilioApiRequest = twilioApiRequest;
//# sourceMappingURL=GenericFunctions.js.map
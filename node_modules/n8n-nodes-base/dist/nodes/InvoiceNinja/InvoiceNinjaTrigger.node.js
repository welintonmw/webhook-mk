"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InvoiceNinjaTrigger = void 0;
const GenericFunctions_1 = require("./GenericFunctions");
class InvoiceNinjaTrigger {
    constructor() {
        this.description = {
            displayName: 'Invoice Ninja Trigger',
            name: 'invoiceNinjaTrigger',
            icon: 'file:invoiceNinja.svg',
            group: ['trigger'],
            version: 1,
            description: 'Starts the workflow when Invoice Ninja events occur',
            defaults: {
                name: 'Invoice Ninja Trigger',
                color: '#000000',
            },
            inputs: [],
            outputs: ['main'],
            credentials: [
                {
                    name: 'invoiceNinjaApi',
                    required: true,
                },
            ],
            webhooks: [
                {
                    name: 'default',
                    httpMethod: 'POST',
                    responseMode: 'onReceived',
                    path: 'webhook',
                },
            ],
            properties: [
                {
                    displayName: 'Event',
                    name: 'event',
                    type: 'options',
                    options: [
                        {
                            name: 'Client Created',
                            value: 'create_client',
                        },
                        {
                            name: 'Invoice Created',
                            value: 'create_invoice',
                        },
                        {
                            name: 'Payment Created',
                            value: 'create_payment',
                        },
                        {
                            name: 'Quote Created',
                            value: 'create_quote',
                        },
                        {
                            name: 'Vendor Created',
                            value: 'create_vendor',
                        },
                    ],
                    default: '',
                    required: true,
                },
            ],
        };
        this.webhookMethods = {
            default: {
                async checkExists() {
                    return false;
                },
                async create() {
                    const webhookUrl = this.getNodeWebhookUrl('default');
                    const event = this.getNodeParameter('event');
                    const endpoint = '/hooks';
                    const body = {
                        target_url: webhookUrl,
                        event,
                    };
                    const responseData = await GenericFunctions_1.invoiceNinjaApiRequest.call(this, 'POST', endpoint, body);
                    if (responseData.id === undefined) {
                        return false;
                    }
                    const webhookData = this.getWorkflowStaticData('node');
                    webhookData.webhookId = responseData.id;
                    return true;
                },
                async delete() {
                    const webhookData = this.getWorkflowStaticData('node');
                    if (webhookData.webhookId !== undefined) {
                        const endpoint = `/hooks/${webhookData.webhookId}`;
                        try {
                            await GenericFunctions_1.invoiceNinjaApiRequest.call(this, 'DELETE', endpoint);
                        }
                        catch (error) {
                            return false;
                        }
                        delete webhookData.webhookId;
                    }
                    return true;
                },
            },
        };
    }
    async webhook() {
        const bodyData = this.getBodyData();
        return {
            workflowData: [
                this.helpers.returnJsonArray(bodyData),
            ],
        };
    }
}
exports.InvoiceNinjaTrigger = InvoiceNinjaTrigger;
//# sourceMappingURL=InvoiceNinjaTrigger.node.js.map
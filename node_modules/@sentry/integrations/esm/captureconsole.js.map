{"version":3,"file":"captureconsole.js","sources":["../../../src/captureconsole.ts"],"sourcesContent":["import type { EventProcessor, Hub, Integration } from '@sentry/types';\nimport {\n  CONSOLE_LEVELS,\n  GLOBAL_OBJ,\n  addConsoleInstrumentationHandler,\n  addExceptionMechanism,\n  safeJoin,\n  severityLevelFromString,\n} from '@sentry/utils';\n\n/** Send Console API calls as Sentry Events */\nexport class CaptureConsole implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'CaptureConsole';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _levels: readonly string[];\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { levels?: string[] } = {}) {\n    this.name = CaptureConsole.id;\n    this._levels = options.levels || CONSOLE_LEVELS;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    if (!('console' in GLOBAL_OBJ)) {\n      return;\n    }\n\n    const levels = this._levels;\n\n    addConsoleInstrumentationHandler(({ args, level }) => {\n      if (!levels.includes(level)) {\n        return;\n      }\n\n      const hub = getCurrentHub();\n\n      if (!hub.getIntegration(CaptureConsole)) {\n        return;\n      }\n\n      consoleHandler(hub, args, level);\n    });\n  }\n}\n\nfunction consoleHandler(hub: Hub, args: unknown[], level: string): void {\n  hub.withScope(scope => {\n    scope.setLevel(severityLevelFromString(level));\n    scope.setExtra('arguments', args);\n    scope.addEventProcessor(event => {\n      event.logger = 'console';\n\n      addExceptionMechanism(event, {\n        handled: false,\n        type: 'console',\n      });\n\n      return event;\n    });\n\n    let message = safeJoin(args, ' ');\n    const error = args.find(arg => arg instanceof Error);\n    if (level === 'assert') {\n      if (args[0] === false) {\n        message = `Assertion failed: ${safeJoin(args.slice(1), ' ') || 'console.assert'}`;\n        scope.setExtra('arguments', args.slice(1));\n        hub.captureMessage(message);\n      }\n    } else if (level === 'error' && error) {\n      hub.captureException(error);\n    } else {\n      hub.captureMessage(message);\n    }\n  });\n}\n"],"names":[],"mappings":"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"}
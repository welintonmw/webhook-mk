{"version":3,"file":"transaction.js","sources":["../../../src/transaction.ts"],"sourcesContent":["import type { Event, Integration, StackFrame } from '@sentry/types';\n\n/** Add node transaction to the event */\nexport class Transaction implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Transaction';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string;\n\n  public constructor() {\n    this.name = Transaction.id;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_addGlobalEventProcessor: unknown, _getCurrentHub: unknown): void {\n    // noop\n  }\n\n  /** @inheritDoc */\n  public processEvent(event: Event): Event {\n    return this.process(event);\n  }\n\n  /**\n   * TODO (v8): Make this private/internal\n   */\n  public process(event: Event): Event {\n    const frames = _getFramesFromEvent(event);\n\n    // use for loop so we don't have to reverse whole frames array\n    for (let i = frames.length - 1; i >= 0; i--) {\n      const frame = frames[i];\n\n      if (frame.in_app === true) {\n        event.transaction = _getTransaction(frame);\n        break;\n      }\n    }\n\n    return event;\n  }\n}\n\nfunction _getFramesFromEvent(event: Event): StackFrame[] {\n  const exception = event.exception && event.exception.values && event.exception.values[0];\n  return (exception && exception.stacktrace && exception.stacktrace.frames) || [];\n}\n\nfunction _getTransaction(frame: StackFrame): string {\n  return frame.module || frame.function ? `${frame.module || '?'}/${frame.function || '?'}` : '<unknown>';\n}\n"],"names":[],"mappings":";;AAEA;AACA,MAAA,WAAA,EAAA;AACA;AACA;AACA;AACA,GAAA,OAAA,YAAA,GAAA,CAAA,IAAA,CAAA,EAAA,GAAA,cAAA,CAAA;AACA;AACA;AACA;AACA;;AAGA,GAAA,WAAA,GAAA;AACA,IAAA,IAAA,CAAA,IAAA,GAAA,WAAA,CAAA,EAAA,CAAA;AACA,GAAA;AACA;AACA;AACA;AACA;AACA,GAAA,SAAA,CAAA,wBAAA,EAAA,cAAA,EAAA;AACA;AACA,GAAA;AACA;AACA;AACA,GAAA,YAAA,CAAA,KAAA,EAAA;AACA,IAAA,OAAA,IAAA,CAAA,OAAA,CAAA,KAAA,CAAA,CAAA;AACA,GAAA;AACA;AACA;AACA;AACA;AACA,GAAA,OAAA,CAAA,KAAA,EAAA;AACA,IAAA,MAAA,MAAA,GAAA,mBAAA,CAAA,KAAA,CAAA,CAAA;AACA;AACA;AACA,IAAA,KAAA,IAAA,CAAA,GAAA,MAAA,CAAA,MAAA,GAAA,CAAA,EAAA,CAAA,IAAA,CAAA,EAAA,CAAA,EAAA,EAAA;AACA,MAAA,MAAA,KAAA,GAAA,MAAA,CAAA,CAAA,CAAA,CAAA;AACA;AACA,MAAA,IAAA,KAAA,CAAA,MAAA,KAAA,IAAA,EAAA;AACA,QAAA,KAAA,CAAA,WAAA,GAAA,eAAA,CAAA,KAAA,CAAA,CAAA;AACA,QAAA,MAAA;AACA,OAAA;AACA,KAAA;AACA;AACA,IAAA,OAAA,KAAA,CAAA;AACA,GAAA;AACA,CAAA,CAAA,WAAA,CAAA,YAAA,EAAA,CAAA;AACA;AACA,SAAA,mBAAA,CAAA,KAAA,EAAA;AACA,EAAA,MAAA,SAAA,GAAA,KAAA,CAAA,SAAA,IAAA,KAAA,CAAA,SAAA,CAAA,MAAA,IAAA,KAAA,CAAA,SAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;AACA,EAAA,OAAA,CAAA,SAAA,IAAA,SAAA,CAAA,UAAA,IAAA,SAAA,CAAA,UAAA,CAAA,MAAA,KAAA,EAAA,CAAA;AACA,CAAA;AACA;AACA,SAAA,eAAA,CAAA,KAAA,EAAA;AACA,EAAA,OAAA,KAAA,CAAA,MAAA,IAAA,KAAA,CAAA,QAAA,GAAA,CAAA,EAAA,KAAA,CAAA,MAAA,IAAA,GAAA,CAAA,CAAA,EAAA,KAAA,CAAA,QAAA,IAAA,GAAA,CAAA,CAAA,GAAA,WAAA,CAAA;AACA;;;;"}
Object.defineProperty(exports, '__esModule', { value: true });

/** Add node transaction to the event */
class Transaction  {
  /**
   * @inheritDoc
   */
   static __initStatic() {this.id = 'Transaction';}

  /**
   * @inheritDoc
   */

   constructor() {
    this.name = Transaction.id;
  }

  /**
   * @inheritDoc
   */
   setupOnce(_addGlobalEventProcessor, _getCurrentHub) {
    // noop
  }

  /** @inheritDoc */
   processEvent(event) {
    return this.process(event);
  }

  /**
   * TODO (v8): Make this private/internal
   */
   process(event) {
    const frames = _getFramesFromEvent(event);

    // use for loop so we don't have to reverse whole frames array
    for (let i = frames.length - 1; i >= 0; i--) {
      const frame = frames[i];

      if (frame.in_app === true) {
        event.transaction = _getTransaction(frame);
        break;
      }
    }

    return event;
  }
} Transaction.__initStatic();

function _getFramesFromEvent(event) {
  const exception = event.exception && event.exception.values && event.exception.values[0];
  return (exception && exception.stacktrace && exception.stacktrace.frames) || [];
}

function _getTransaction(frame) {
  return frame.module || frame.function ? `${frame.module || '?'}/${frame.function || '?'}` : '<unknown>';
}

exports.Transaction = Transaction;
//# sourceMappingURL=transaction.js.map

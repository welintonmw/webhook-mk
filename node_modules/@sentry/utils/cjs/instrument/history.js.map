{"version":3,"file":"history.js","sources":["../../../src/instrument/history.ts"],"sourcesContent":["// TODO(v8): Move everything in this file into the browser package. Nothing here is generic and we run risk of leaking browser types into non-browser packages.\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataHistory } from '@sentry/types';\n\nimport { fill } from '../object';\nimport { supportsHistory } from '../supports';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\n\nlet lastHref: string | undefined;\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addHistoryInstrumentationHandler(handler: (data: HandlerDataHistory) => void): void {\n  const type = 'history';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentHistory);\n}\n\nfunction instrumentHistory(): void {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = WINDOW.onpopstate;\n  WINDOW.onpopstate = function (this: WindowEventHandlers, ...args: any[]): any {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    const handlerData: HandlerDataHistory = { from, to };\n    triggerHandlers('history', handlerData);\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n    return function (this: History, ...args: any[]): void {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        const handlerData: HandlerDataHistory = { from, to };\n        triggerHandlers('history', handlerData);\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n"],"names":["GLOBAL_OBJ","addHandler","maybeInstrument","supportsHistory","triggerHandlers","fill"],"mappings":";;;;;;;;;AAWA,MAAA,MAAA,GAAAA,oBAAA,EAAA;AACA;AACA,IAAA,QAAA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,gCAAA,CAAA,OAAA,EAAA;AACA,EAAA,MAAA,IAAA,GAAA,SAAA,CAAA;AACA,EAAAC,oBAAA,CAAA,IAAA,EAAA,OAAA,CAAA,CAAA;AACA,EAAAC,yBAAA,CAAA,IAAA,EAAA,iBAAA,CAAA,CAAA;AACA,CAAA;AACA;AACA,SAAA,iBAAA,GAAA;AACA,EAAA,IAAA,CAAAC,+BAAA,EAAA,EAAA;AACA,IAAA,OAAA;AACA,GAAA;AACA;AACA,EAAA,MAAA,aAAA,GAAA,MAAA,CAAA,UAAA,CAAA;AACA,EAAA,MAAA,CAAA,UAAA,GAAA,WAAA,GAAA,IAAA,EAAA;AACA,IAAA,MAAA,EAAA,GAAA,MAAA,CAAA,QAAA,CAAA,IAAA,CAAA;AACA;AACA,IAAA,MAAA,IAAA,GAAA,QAAA,CAAA;AACA,IAAA,QAAA,GAAA,EAAA,CAAA;AACA,IAAA,MAAA,WAAA,GAAA,EAAA,IAAA,EAAA,EAAA,EAAA,CAAA;AACA,IAAAC,yBAAA,CAAA,SAAA,EAAA,WAAA,CAAA,CAAA;AACA,IAAA,IAAA,aAAA,EAAA;AACA;AACA;AACA;AACA,MAAA,IAAA;AACA,QAAA,OAAA,aAAA,CAAA,KAAA,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;AACA,OAAA,CAAA,OAAA,GAAA,EAAA;AACA;AACA,OAAA;AACA,KAAA;AACA,GAAA,CAAA;AACA;AACA,EAAA,SAAA,0BAAA,CAAA,uBAAA,EAAA;AACA,IAAA,OAAA,WAAA,GAAA,IAAA,EAAA;AACA,MAAA,MAAA,GAAA,GAAA,IAAA,CAAA,MAAA,GAAA,CAAA,GAAA,IAAA,CAAA,CAAA,CAAA,GAAA,SAAA,CAAA;AACA,MAAA,IAAA,GAAA,EAAA;AACA;AACA,QAAA,MAAA,IAAA,GAAA,QAAA,CAAA;AACA,QAAA,MAAA,EAAA,GAAA,MAAA,CAAA,GAAA,CAAA,CAAA;AACA;AACA,QAAA,QAAA,GAAA,EAAA,CAAA;AACA,QAAA,MAAA,WAAA,GAAA,EAAA,IAAA,EAAA,EAAA,EAAA,CAAA;AACA,QAAAA,yBAAA,CAAA,SAAA,EAAA,WAAA,CAAA,CAAA;AACA,OAAA;AACA,MAAA,OAAA,uBAAA,CAAA,KAAA,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;AACA,KAAA,CAAA;AACA,GAAA;AACA;AACA,EAAAC,WAAA,CAAA,MAAA,CAAA,OAAA,EAAA,WAAA,EAAA,0BAAA,CAAA,CAAA;AACA,EAAAA,WAAA,CAAA,MAAA,CAAA,OAAA,EAAA,cAAA,EAAA,0BAAA,CAAA,CAAA;AACA;;;;"}
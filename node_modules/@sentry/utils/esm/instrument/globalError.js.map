{"version":3,"file":"globalError.js","sources":["../../../src/instrument/globalError.ts"],"sourcesContent":["import type { HandlerDataError } from '@sentry/types';\n\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nlet _oldOnErrorHandler: (typeof GLOBAL_OBJ)['onerror'] | null = null;\n\n/**\n * Add an instrumentation handler for when an error is captured by the global error handler.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addGlobalErrorInstrumentationHandler(handler: (data: HandlerDataError) => void): void {\n  const type = 'error';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentError);\n}\n\nfunction instrumentError(): void {\n  _oldOnErrorHandler = GLOBAL_OBJ.onerror;\n\n  GLOBAL_OBJ.onerror = function (\n    msg: string | Event,\n    url?: string,\n    line?: number,\n    column?: number,\n    error?: Error,\n  ): boolean {\n    const handlerData: HandlerDataError = {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    };\n    triggerHandlers('error', handlerData);\n\n    if (_oldOnErrorHandler && !_oldOnErrorHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n"],"names":[],"mappings":";;;AAKA,IAAA,kBAAA,GAAA,IAAA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,oCAAA,CAAA,OAAA,EAAA;AACA,EAAA,MAAA,IAAA,GAAA,OAAA,CAAA;AACA,EAAA,UAAA,CAAA,IAAA,EAAA,OAAA,CAAA,CAAA;AACA,EAAA,eAAA,CAAA,IAAA,EAAA,eAAA,CAAA,CAAA;AACA,CAAA;AACA;AACA,SAAA,eAAA,GAAA;AACA,EAAA,kBAAA,GAAA,UAAA,CAAA,OAAA,CAAA;AACA;AACA,EAAA,UAAA,CAAA,OAAA,GAAA;AACA,IAAA,GAAA;AACA,IAAA,GAAA;AACA,IAAA,IAAA;AACA,IAAA,MAAA;AACA,IAAA,KAAA;AACA,IAAA;AACA,IAAA,MAAA,WAAA,GAAA;AACA,MAAA,MAAA;AACA,MAAA,KAAA;AACA,MAAA,IAAA;AACA,MAAA,GAAA;AACA,MAAA,GAAA;AACA,KAAA,CAAA;AACA,IAAA,eAAA,CAAA,OAAA,EAAA,WAAA,CAAA,CAAA;AACA;AACA,IAAA,IAAA,kBAAA,IAAA,CAAA,kBAAA,CAAA,iBAAA,EAAA;AACA;AACA,MAAA,OAAA,kBAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,CAAA;AACA,KAAA;AACA;AACA,IAAA,OAAA,KAAA,CAAA;AACA,GAAA,CAAA;AACA;AACA,EAAA,UAAA,CAAA,OAAA,CAAA,uBAAA,GAAA,IAAA,CAAA;AACA;;;;"}
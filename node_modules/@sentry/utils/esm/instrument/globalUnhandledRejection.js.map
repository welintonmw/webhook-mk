{"version":3,"file":"globalUnhandledRejection.js","sources":["../../../src/instrument/globalUnhandledRejection.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type { HandlerDataUnhandledRejection } from '@sentry/types';\n\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nlet _oldOnUnhandledRejectionHandler: (typeof GLOBAL_OBJ)['onunhandledrejection'] | null = null;\n\n/**\n * Add an instrumentation handler for when an unhandled promise rejection is captured.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addGlobalUnhandledRejectionInstrumentationHandler(\n  handler: (data: HandlerDataUnhandledRejection) => void,\n): void {\n  const type = 'unhandledrejection';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentUnhandledRejection);\n}\n\nfunction instrumentUnhandledRejection(): void {\n  _oldOnUnhandledRejectionHandler = GLOBAL_OBJ.onunhandledrejection;\n\n  GLOBAL_OBJ.onunhandledrejection = function (e: any): boolean {\n    const handlerData: HandlerDataUnhandledRejection = e;\n    triggerHandlers('unhandledrejection', handlerData);\n\n    if (_oldOnUnhandledRejectionHandler && !_oldOnUnhandledRejectionHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  GLOBAL_OBJ.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n"],"names":[],"mappings":";;;AAOA,IAAA,+BAAA,GAAA,IAAA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,iDAAA;AACA,EAAA,OAAA;AACA,EAAA;AACA,EAAA,MAAA,IAAA,GAAA,oBAAA,CAAA;AACA,EAAA,UAAA,CAAA,IAAA,EAAA,OAAA,CAAA,CAAA;AACA,EAAA,eAAA,CAAA,IAAA,EAAA,4BAAA,CAAA,CAAA;AACA,CAAA;AACA;AACA,SAAA,4BAAA,GAAA;AACA,EAAA,+BAAA,GAAA,UAAA,CAAA,oBAAA,CAAA;AACA;AACA,EAAA,UAAA,CAAA,oBAAA,GAAA,UAAA,CAAA,EAAA;AACA,IAAA,MAAA,WAAA,GAAA,CAAA,CAAA;AACA,IAAA,eAAA,CAAA,oBAAA,EAAA,WAAA,CAAA,CAAA;AACA;AACA,IAAA,IAAA,+BAAA,IAAA,CAAA,+BAAA,CAAA,iBAAA,EAAA;AACA;AACA,MAAA,OAAA,+BAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,CAAA;AACA,KAAA;AACA;AACA,IAAA,OAAA,IAAA,CAAA;AACA,GAAA,CAAA;AACA;AACA,EAAA,UAAA,CAAA,oBAAA,CAAA,uBAAA,GAAA,IAAA,CAAA;AACA;;;;"}
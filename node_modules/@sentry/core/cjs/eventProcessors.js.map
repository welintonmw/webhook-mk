{"version":3,"file":"eventProcessors.js","sources":["../../src/eventProcessors.ts"],"sourcesContent":["import type { Event, EventHint, EventProcessor } from '@sentry/types';\nimport { SyncPromise, getGlobalSingleton, isThenable, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\n\n/**\n * Returns the global event processors.\n * @deprecated Global event processors will be removed in v8.\n */\nexport function getGlobalEventProcessors(): EventProcessor[] {\n  return getGlobalSingleton<EventProcessor[]>('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @deprecated Use `addEventProcessor` instead. Global event processors will be removed in v8.\n */\nexport function addGlobalEventProcessor(callback: EventProcessor): void {\n  // eslint-disable-next-line deprecation/deprecation\n  getGlobalEventProcessors().push(callback);\n}\n\n/**\n * Process an array of event processors, returning the processed event (or `null` if the event was dropped).\n */\nexport function notifyEventProcessors(\n  processors: EventProcessor[],\n  event: Event | null,\n  hint: EventHint,\n  index: number = 0,\n): PromiseLike<Event | null> {\n  return new SyncPromise<Event | null>((resolve, reject) => {\n    const processor = processors[index];\n    if (event === null || typeof processor !== 'function') {\n      resolve(event);\n    } else {\n      const result = processor({ ...event }, hint) as Event | null;\n\n      DEBUG_BUILD && processor.id && result === null && logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n      if (isThenable(result)) {\n        void result\n          .then(final => notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n          .then(null, reject);\n      } else {\n        void notifyEventProcessors(processors, result, hint, index + 1)\n          .then(resolve)\n          .then(null, reject);\n      }\n    }\n  });\n}\n"],"names":["getGlobalSingleton","SyncPromise","DEBUG_BUILD","logger","isThenable"],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA,SAAA,wBAAA,GAAA;AACA,EAAA,OAAAA,wBAAA,CAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,uBAAA,CAAA,QAAA,EAAA;AACA;AACA,EAAA,wBAAA,EAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA,SAAA,qBAAA;AACA,EAAA,UAAA;AACA,EAAA,KAAA;AACA,EAAA,IAAA;AACA,EAAA,KAAA,GAAA,CAAA;AACA,EAAA;AACA,EAAA,OAAA,IAAAC,iBAAA,CAAA,CAAA,OAAA,EAAA,MAAA,KAAA;AACA,IAAA,MAAA,SAAA,GAAA,UAAA,CAAA,KAAA,CAAA,CAAA;AACA,IAAA,IAAA,KAAA,KAAA,IAAA,IAAA,OAAA,SAAA,KAAA,UAAA,EAAA;AACA,MAAA,OAAA,CAAA,KAAA,CAAA,CAAA;AACA,KAAA,MAAA;AACA,MAAA,MAAA,MAAA,GAAA,SAAA,CAAA,EAAA,GAAA,KAAA,EAAA,EAAA,IAAA,CAAA,EAAA;AACA;AACA,MAAAC,sBAAA,IAAA,SAAA,CAAA,EAAA,IAAA,MAAA,KAAA,IAAA,IAAAC,YAAA,CAAA,GAAA,CAAA,CAAA,iBAAA,EAAA,SAAA,CAAA,EAAA,CAAA,eAAA,CAAA,CAAA,CAAA;AACA;AACA,MAAA,IAAAC,gBAAA,CAAA,MAAA,CAAA,EAAA;AACA,QAAA,KAAA,MAAA;AACA,WAAA,IAAA,CAAA,KAAA,IAAA,qBAAA,CAAA,UAAA,EAAA,KAAA,EAAA,IAAA,EAAA,KAAA,GAAA,CAAA,CAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA;AACA,WAAA,IAAA,CAAA,IAAA,EAAA,MAAA,CAAA,CAAA;AACA,OAAA,MAAA;AACA,QAAA,KAAA,qBAAA,CAAA,UAAA,EAAA,MAAA,EAAA,IAAA,EAAA,KAAA,GAAA,CAAA,CAAA;AACA,WAAA,IAAA,CAAA,OAAA,CAAA;AACA,WAAA,IAAA,CAAA,IAAA,EAAA,MAAA,CAAA,CAAA;AACA,OAAA;AACA,KAAA;AACA,GAAA,CAAA,CAAA;AACA;;;;;;"}
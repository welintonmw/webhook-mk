import type { ExpressionAnalysis } from './ExpressionBuilder';
export type { TmplDifference } from './Analysis';
export type ReturnValue = string | null | (() => unknown);
export declare class Tournament {
    errorHandler: (error: Error) => void;
    private _dataNodeName;
    private _codeCache;
    constructor(errorHandler?: (error: Error) => void, _dataNodeName?: string);
    getExpressionCode(expr: string): [string, ExpressionAnalysis];
    tmplDiff(expr: string): import("./Analysis").TmplDifference;
    private getFunction;
    execute(expr: string, data: unknown): ReturnValue;
}

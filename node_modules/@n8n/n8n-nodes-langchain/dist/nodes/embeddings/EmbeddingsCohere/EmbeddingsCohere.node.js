"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmbeddingsCohere = void 0;
const cohere_1 = require("@langchain/cohere");
const logWrapper_1 = require("../../../utils/logWrapper");
const sharedFields_1 = require("../../../utils/sharedFields");
class EmbeddingsCohere {
    constructor() {
        this.description = {
            displayName: 'Embeddings Cohere',
            name: 'embeddingsCohere',
            icon: 'file:cohere.svg',
            group: ['transform'],
            version: 1,
            description: 'Use Cohere Embeddings',
            defaults: {
                name: 'Embeddings Cohere',
            },
            requestDefaults: {
                ignoreHttpStatusErrors: true,
                baseURL: '={{ $credentials.host }}',
            },
            credentials: [
                {
                    name: 'cohereApi',
                    required: true,
                },
            ],
            codex: {
                categories: ['AI'],
                subcategories: {
                    AI: ['Embeddings'],
                },
                resources: {
                    primaryDocumentation: [
                        {
                            url: 'https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.embeddingscohere/',
                        },
                    ],
                },
            },
            inputs: [],
            outputs: ["ai_embedding"],
            outputNames: ['Embeddings'],
            properties: [
                (0, sharedFields_1.getConnectionHintNoticeField)(["ai_vectorStore"]),
                {
                    displayName: 'Each model is using different dimensional density for embeddings. Please make sure to use the same dimensionality for your vector store. The default model is using 768-dimensional embeddings.',
                    name: 'notice',
                    type: 'notice',
                    default: '',
                },
                {
                    displayName: 'Model',
                    name: 'modelName',
                    type: 'options',
                    description: 'The model which will generate the embeddings. <a href="https://docs.cohere.com/docs/models">Learn more</a>.',
                    default: 'embed-english-v2.0',
                    options: [
                        {
                            name: 'Embed-English-v2.0(4096 Dimensions)',
                            value: 'embed-english-v2.0',
                        },
                        {
                            name: 'Embed-English-Light-v2.0(1024 Dimensions)',
                            value: 'embed-english-light-v2.0',
                        },
                        {
                            name: 'Embed-Multilingual-v2.0(768 Dimensions)',
                            value: 'embed-multilingual-v2.0',
                        },
                    ],
                },
            ],
        };
    }
    async supplyData(itemIndex) {
        this.logger.verbose('Supply data for embeddings Cohere');
        const modelName = this.getNodeParameter('modelName', itemIndex, 'embed-english-v2.0');
        const credentials = await this.getCredentials('cohereApi');
        const embeddings = new cohere_1.CohereEmbeddings({
            apiKey: credentials.apiKey,
            model: modelName,
        });
        return {
            response: (0, logWrapper_1.logWrapper)(embeddings, this),
        };
    }
}
exports.EmbeddingsCohere = EmbeddingsCohere;
//# sourceMappingURL=EmbeddingsCohere.node.js.map
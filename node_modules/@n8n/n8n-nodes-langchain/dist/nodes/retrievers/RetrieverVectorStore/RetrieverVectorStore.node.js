"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RetrieverVectorStore = void 0;
const logWrapper_1 = require("../../../utils/logWrapper");
class RetrieverVectorStore {
    constructor() {
        this.description = {
            displayName: 'Vector Store Retriever',
            name: 'retrieverVectorStore',
            icon: 'fa:box-open',
            group: ['transform'],
            version: 1,
            description: 'Use a Vector Store as Retriever',
            defaults: {
                name: 'Vector Store Retriever',
            },
            codex: {
                categories: ['AI'],
                subcategories: {
                    AI: ['Retrievers'],
                },
                resources: {
                    primaryDocumentation: [
                        {
                            url: 'https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.retrievervectorstore/',
                        },
                    ],
                },
            },
            inputs: [
                {
                    displayName: 'Vector Store',
                    maxConnections: 1,
                    type: "ai_vectorStore",
                    required: true,
                },
            ],
            outputs: ["ai_retriever"],
            outputNames: ['Retriever'],
            properties: [
                {
                    displayName: 'Limit',
                    name: 'topK',
                    type: 'number',
                    default: 4,
                    description: 'The maximum number of results to return',
                },
            ],
        };
    }
    async supplyData(itemIndex) {
        this.logger.verbose('Supplying data for Vector Store Retriever');
        const topK = this.getNodeParameter('topK', itemIndex, 4);
        const vectorStore = (await this.getInputConnectionData("ai_vectorStore", itemIndex));
        const retriever = vectorStore.asRetriever(topK);
        return {
            response: (0, logWrapper_1.logWrapper)(retriever, this),
        };
    }
}
exports.RetrieverVectorStore = RetrieverVectorStore;
//# sourceMappingURL=RetrieverVectorStore.node.js.map
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.reActAgentAgentProperties = void 0;
const prompt_1 = require("./prompt");
exports.reActAgentAgentProperties = [
    {
        displayName: 'Text',
        name: 'text',
        type: 'string',
        required: true,
        displayOptions: {
            show: {
                agent: ['reActAgent'],
                '@version': [1],
            },
        },
        default: '={{ $json.input }}',
    },
    {
        displayName: 'Text',
        name: 'text',
        type: 'string',
        required: true,
        displayOptions: {
            show: {
                agent: ['reActAgent'],
                '@version': [1.1],
            },
        },
        default: '={{ $json.chat_input }}',
    },
    {
        displayName: 'Text',
        name: 'text',
        type: 'string',
        required: true,
        displayOptions: {
            show: {
                agent: ['reActAgent'],
                '@version': [1.2],
            },
        },
        default: '={{ $json.chatInput }}',
    },
    {
        displayName: 'Options',
        name: 'options',
        type: 'collection',
        displayOptions: {
            show: {
                agent: ['reActAgent'],
            },
        },
        default: {},
        placeholder: 'Add Option',
        options: [
            {
                displayName: 'Human Message Template',
                name: 'humanMessageTemplate',
                type: 'string',
                default: prompt_1.HUMAN_MESSAGE_TEMPLATE,
                description: 'String to use directly as the human message template',
                typeOptions: {
                    rows: 6,
                },
            },
            {
                displayName: 'Prefix Message',
                name: 'prefix',
                type: 'string',
                default: prompt_1.PREFIX,
                description: 'String to put before the list of tools',
                typeOptions: {
                    rows: 6,
                },
            },
            {
                displayName: 'Suffix Message for Chat Model',
                name: 'suffixChat',
                type: 'string',
                default: prompt_1.SUFFIX_CHAT,
                description: 'String to put after the list of tools that will be used if chat model is used',
                typeOptions: {
                    rows: 6,
                },
            },
            {
                displayName: 'Suffix Message for Regular Model',
                name: 'suffix',
                type: 'string',
                default: prompt_1.SUFFIX,
                description: 'String to put after the list of tools that will be used if regular model is used',
                typeOptions: {
                    rows: 6,
                },
            },
            {
                displayName: 'Return Intermediate Steps',
                name: 'returnIntermediateSteps',
                type: 'boolean',
                default: false,
                description: 'Whether or not the output should include intermediate steps the agent took',
            },
        ],
    },
];
//# sourceMappingURL=description.js.map
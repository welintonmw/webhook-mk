"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateAuth = void 0;
const basic_auth_1 = __importDefault(require("basic-auth"));
const error_1 = require("./error");
async function validateAuth(context) {
    const authentication = context.getNodeParameter('authentication');
    const req = context.getRequestObject();
    const headers = context.getHeaderData();
    if (authentication === 'none') {
        return;
    }
    else if (authentication === 'basicAuth') {
        let expectedAuth;
        try {
            expectedAuth = await context.getCredentials('httpBasicAuth');
        }
        catch { }
        if (expectedAuth === undefined || !expectedAuth.user || !expectedAuth.password) {
            throw new error_1.ChatTriggerAuthorizationError(500, 'No authentication data defined on node!');
        }
        const providedAuth = (0, basic_auth_1.default)(req);
        if (!providedAuth)
            throw new error_1.ChatTriggerAuthorizationError(401);
        if (providedAuth.name !== expectedAuth.user || providedAuth.pass !== expectedAuth.password) {
            throw new error_1.ChatTriggerAuthorizationError(403);
        }
    }
    else if (authentication === 'n8nUserAuth') {
        const webhookName = context.getWebhookName();
        function getCookie(name) {
            var _a;
            const value = `; ${headers.cookie}`;
            const parts = value.split(`; ${name}=`);
            if (parts.length === 2) {
                return (_a = parts.pop()) === null || _a === void 0 ? void 0 : _a.split(';').shift();
            }
            return '';
        }
        const authCookie = getCookie('n8n-auth');
        if (!authCookie && webhookName !== 'setup') {
            throw new error_1.ChatTriggerAuthorizationError(500, 'User not authenticated!');
        }
    }
    return;
}
exports.validateAuth = validateAuth;
//# sourceMappingURL=GenericFunctions.js.map
import { type IExecuteFunctions, type INodeType, type INodeTypeDescription, type SupplyData } from 'n8n-workflow';
import { z } from 'zod';
import { StructuredOutputParser } from 'langchain/output_parsers';
import type { JavaScriptSandbox } from 'n8n-nodes-base/dist/nodes/Code/JavaScriptSandbox';
export declare class N8nStructuredOutputParser<T extends z.ZodTypeAny> extends StructuredOutputParser<T> {
    parse(text: string): Promise<z.infer<T>>;
    static fromZedJsonSchema(sandboxedSchema: JavaScriptSandbox, nodeVersion: number): Promise<StructuredOutputParser<z.ZodType<object, z.ZodTypeDef, object>>>;
}
export declare class OutputParserStructured implements INodeType {
    description: INodeTypeDescription;
    supplyData(this: IExecuteFunctions, itemIndex: number): Promise<SupplyData>;
}

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MemoryVectorStoreManager = void 0;
const memory_1 = require("langchain/vectorstores/memory");
class MemoryVectorStoreManager {
    constructor(embeddings) {
        this.vectorStoreBuffer = new Map();
        this.embeddings = embeddings;
    }
    static getInstance(embeddings) {
        if (!MemoryVectorStoreManager.instance) {
            MemoryVectorStoreManager.instance = new MemoryVectorStoreManager(embeddings);
        }
        return MemoryVectorStoreManager.instance;
    }
    async getVectorStore(memoryKey) {
        let vectorStoreInstance = this.vectorStoreBuffer.get(memoryKey);
        if (!vectorStoreInstance) {
            vectorStoreInstance = await memory_1.MemoryVectorStore.fromExistingIndex(this.embeddings);
            this.vectorStoreBuffer.set(memoryKey, vectorStoreInstance);
        }
        return vectorStoreInstance;
    }
    async addDocuments(memoryKey, documents, clearStore) {
        if (clearStore) {
            this.vectorStoreBuffer.delete(memoryKey);
        }
        const vectorStoreInstance = await this.getVectorStore(memoryKey);
        await vectorStoreInstance.addDocuments(documents);
    }
}
exports.MemoryVectorStoreManager = MemoryVectorStoreManager;
MemoryVectorStoreManager.instance = null;
//# sourceMappingURL=MemoryVectorStoreManager.js.map
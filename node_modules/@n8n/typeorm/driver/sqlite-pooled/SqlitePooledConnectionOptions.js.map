{"version":3,"sources":["../../src/driver/sqlite-pooled/SqlitePooledConnectionOptions.ts"],"names":[],"mappings":"","file":"SqlitePooledConnectionOptions.js","sourcesContent":["import { AbstractSqliteConnectionOptions } from \"../sqlite-abstract/AbstractSqliteConnectionOptions\"\n\n/**\n * Sqlite-specific connection options.\n */\nexport interface SqlitePooledConnectionOptions\n    extends AbstractSqliteConnectionOptions {\n    /**\n     * Database type.\n     */\n    readonly type: \"sqlite-pooled\"\n\n    /**\n     * In your SQLite application when you perform parallel writes its common to face SQLITE_BUSY error.\n     * This error indicates that SQLite failed to write to the database file since someone else already writes into it.\n     * Since SQLite cannot handle parallel saves this error cannot be avoided.\n     *\n     * To simplify life's of those who have this error this particular option sets a timeout within which ORM will try\n     * to perform requested write operation again and again until it receives SQLITE_BUSY error.\n     *\n     * Enabling WAL can improve your app performance and face less SQLITE_BUSY issues.\n     * Time in milliseconds.\n     */\n    readonly busyErrorRetry?: number\n\n    /**\n     * Specifies the open file flags. By default its undefined.\n     * @see https://www.sqlite.org/c3ref/c_open_autoproxy.html\n     * @see https://github.com/TryGhost/node-sqlite3/blob/master/test/open_close.test.js\n     */\n    readonly flags?: number\n\n    /**\n     * Query or change the setting of the busy timeout.\n     * Time in milliseconds.\n     *\n     * @see https://www.sqlite.org/pragma.html#pragma_busy_timeout\n     */\n    readonly busyTimeout?: number\n\n    /**\n     * Maximum number of clients in the pool. When left undefined (=default),\n     * the driver will NOT use a pool but instead just create a single\n     * connection and single query runner that will be shared across all\n     * usages (i.e. no blocking).\n     */\n    readonly poolSize?: number\n\n    /**\n     * How many milliseconds to wait for acquiring a connection from a pool.\n     */\n    readonly acquireTimeout: number\n\n    /**\n     * How many milliseconds to wait when closing a connection.\n     */\n    readonly destroyTimeout: number\n}\n"],"sourceRoot":"../.."}
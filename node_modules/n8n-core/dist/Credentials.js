"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Credentials = void 0;
const typedi_1 = require("typedi");
const n8n_workflow_1 = require("n8n-workflow");
const Cipher_1 = require("./Cipher");
class Credentials extends n8n_workflow_1.ICredentials {
    constructor() {
        super(...arguments);
        this.cipher = typedi_1.Container.get(Cipher_1.Cipher);
    }
    setData(data) {
        this.data = this.cipher.encrypt(data);
    }
    getData() {
        if (this.data === undefined) {
            throw new n8n_workflow_1.ApplicationError('No data is set so nothing can be returned.');
        }
        try {
            const decryptedData = this.cipher.decrypt(this.data);
            return (0, n8n_workflow_1.jsonParse)(decryptedData);
        }
        catch (e) {
            throw new n8n_workflow_1.ApplicationError('Credentials could not be decrypted. The likely reason is that a different "encryptionKey" was used to encrypt the data.');
        }
    }
    getDataToSave() {
        if (this.data === undefined) {
            throw new n8n_workflow_1.ApplicationError('No credentials were set to save.');
        }
        return {
            id: this.id,
            name: this.name,
            type: this.type,
            data: this.data,
        };
    }
}
exports.Credentials = Credentials;
//# sourceMappingURL=Credentials.js.map
/// <reference types="node" />
/// <reference types="node/http" />
/// <reference types="n8n-workflow" />
import type { Server } from 'http';
import express from 'express';
import { N8nInstanceType } from './Interfaces';
import { ExternalHooks } from './ExternalHooks';
import { Logger } from './Logger';
export declare abstract class AbstractServer {
    protected logger: Logger;
    protected server: Server;
    readonly app: express.Application;
    protected externalHooks: ExternalHooks;
    protected protocol: "http" | "https";
    protected sslKey: string;
    protected sslCert: string;
    protected restEndpoint: string;
    protected endpointForm: string;
    protected endpointFormTest: string;
    protected endpointFormWaiting: string;
    protected endpointWebhook: string;
    protected endpointWebhookTest: string;
    protected endpointWebhookWaiting: string;
    protected webhooksEnabled: boolean;
    protected testWebhooksEnabled: boolean;
    readonly uniqueInstanceId: string;
    constructor(instanceType?: N8nInstanceType);
    configure(): Promise<void>;
    private setupErrorHandlers;
    private setupCommonMiddlewares;
    private setupDevMiddlewares;
    protected setupPushServer(): void;
    private setupHealthCheck;
    init(): Promise<void>;
    start(): Promise<void>;
    onShutdown(): Promise<void>;
}

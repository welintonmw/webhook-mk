import type express from 'express';
import { NodeTypes } from './NodeTypes';
import type { IExecutionResponse, IResponseCallbackData, IWebhookManager, WaitingWebhookRequest } from './Interfaces';
import { ExecutionRepository } from './databases/repositories/execution.repository';
import { Logger } from './Logger';
export declare class WaitingWebhooks implements IWebhookManager {
    protected readonly logger: Logger;
    private readonly nodeTypes;
    private readonly executionRepository;
    protected includeForms: boolean;
    constructor(logger: Logger, nodeTypes: NodeTypes, executionRepository: ExecutionRepository);
    protected logReceivedWebhook(method: string, executionId: string): void;
    protected disableNode(execution: IExecutionResponse, _method?: string): void;
    executeWebhook(req: WaitingWebhookRequest, res: express.Response): Promise<IResponseCallbackData>;
}

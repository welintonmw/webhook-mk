import type { INode, Workflow } from 'n8n-workflow';
import { License } from '../License';
import { OwnershipService } from '../services/ownership.service';
import { SharedCredentialsRepository } from '../databases/repositories/sharedCredentials.repository';
import { ProjectService } from '../services/project.service';
export declare class PermissionChecker {
    private readonly sharedCredentialsRepository;
    private readonly ownershipService;
    private readonly license;
    private readonly projectService;
    constructor(sharedCredentialsRepository: SharedCredentialsRepository, ownershipService: OwnershipService, license: License, projectService: ProjectService);
    check(workflowId: string, nodes: INode[]): Promise<void>;
    checkSubworkflowExecutePolicy(subworkflow: Workflow, parentWorkflowId: string, node?: INode): Promise<void>;
    private mapCredIdsToNodes;
}

import type { SourceControlledFile } from './types/sourceControlledFile';
import type { KeyPairType } from './types/keyPairType';
export declare function stringContainsExpression(testString: string): boolean;
export declare function getWorkflowExportPath(workflowId: string, workflowExportFolder: string): string;
export declare function getCredentialExportPath(credentialId: string, credentialExportFolder: string): string;
export declare function getVariablesPath(gitFolder: string): string;
export declare function getTagsPath(gitFolder: string): string;
export declare function sourceControlFoldersExistCheck(folders: string[], createIfNotExists?: boolean): boolean;
export declare function isSourceControlLicensed(): boolean;
export declare function generateSshKeyPair(keyType: KeyPairType): Promise<{
    privateKey: string;
    publicKey: string;
}>;
export declare function getRepoType(repoUrl: string): 'github' | 'gitlab' | 'other';
export declare function getTrackingInformationFromPullResult(result: SourceControlledFile[]): {
    cred_conflicts: number;
    workflow_conflicts: number;
    workflow_updates: number;
};
export declare function getTrackingInformationFromPrePushResult(result: SourceControlledFile[]): {
    workflows_eligible: number;
    workflows_eligible_with_conflicts: number;
    creds_eligible: number;
    creds_eligible_with_conflicts: number;
    variables_eligible: number;
};
export declare function getTrackingInformationFromPostPushResult(result: SourceControlledFile[]): {
    workflows_eligible: number;
    workflows_pushed: number;
    creds_pushed: number;
    variables_pushed: number;
};

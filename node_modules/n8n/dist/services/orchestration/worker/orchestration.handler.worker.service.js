"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OrchestrationHandlerWorkerService = void 0;
const typedi_1 = require("typedi");
const orchestration_handler_base_service_1 = require("../../orchestration.handler.base.service");
const handleCommandMessageWorker_1 = require("./handleCommandMessageWorker");
let OrchestrationHandlerWorkerService = class OrchestrationHandlerWorkerService extends orchestration_handler_base_service_1.OrchestrationHandlerService {
    async initSubscriber(options) {
        this.redisSubscriber = await this.redisService.getPubSubSubscriber();
        await this.redisSubscriber.subscribeToCommandChannel();
        this.redisSubscriber.addMessageHandler('WorkerCommandReceivedHandler', (0, handleCommandMessageWorker_1.getWorkerCommandReceivedHandler)(options));
    }
};
exports.OrchestrationHandlerWorkerService = OrchestrationHandlerWorkerService;
exports.OrchestrationHandlerWorkerService = OrchestrationHandlerWorkerService = __decorate([
    (0, typedi_1.Service)()
], OrchestrationHandlerWorkerService);
//# sourceMappingURL=orchestration.handler.worker.service.js.map
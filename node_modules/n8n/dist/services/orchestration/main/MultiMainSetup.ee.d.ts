/// <reference types="node" />
import { EventEmitter } from 'node:events';
import { Logger } from '../../../Logger';
import { RedisServicePubSubPublisher } from '../../../services/redis/RedisServicePubSubPublisher';
import { RedisClientService } from '../../../services/redis/redis-client.service';
export declare class MultiMainSetup extends EventEmitter {
    private readonly logger;
    private readonly redisPublisher;
    private readonly redisClientService;
    constructor(logger: Logger, redisPublisher: RedisServicePubSubPublisher, redisClientService: RedisClientService);
    get instanceId(): string;
    private leaderKey;
    private readonly leaderKeyTtl;
    private leaderCheckInterval;
    init(): Promise<void>;
    shutdown(): Promise<void>;
    private checkLeader;
    private tryBecomeLeader;
    fetchLeaderKey(): Promise<string | null | undefined>;
}

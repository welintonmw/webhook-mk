import { RedisService } from './redis.service';
import type { RedisServicePubSubSubscriber } from './redis/RedisServicePubSubSubscriber';
import type { WorkerCommandReceivedHandlerOptions } from './orchestration/worker/types';
export declare abstract class OrchestrationHandlerService {
    protected initialized: boolean;
    redisSubscriber: RedisServicePubSubSubscriber;
    readonly redisService: RedisService;
    constructor();
    init(): Promise<void>;
    initWithOptions(options: WorkerCommandReceivedHandlerOptions): Promise<void>;
    shutdown(): Promise<void>;
    protected abstract initSubscriber(options?: WorkerCommandReceivedHandlerOptions): Promise<void>;
}

/// <reference types="node" />
import type express from 'express';
import { type Counter } from 'prom-client';
import EventEmitter from 'events';
import { CacheService } from '../services/cache/cache.service';
import { type EventMessageTypes } from '../eventbus';
import { MessageEventBus } from '../eventbus/MessageEventBus/MessageEventBus';
import { Logger } from '../Logger';
export declare class MetricsService extends EventEmitter {
    private readonly logger;
    private readonly cacheService;
    private readonly eventBus;
    constructor(logger: Logger, cacheService: CacheService, eventBus: MessageEventBus);
    counters: Record<string, Counter<string> | null>;
    configureMetrics(app: express.Application): Promise<void>;
    private setupN8nVersionMetric;
    private setupDefaultMetrics;
    private setupApiMetrics;
    mountMetricsEndpoint(app: express.Application): void;
    private setupCacheMetrics;
    private getCounterForEvent;
    private setupMessageEventBusMetrics;
    getLabelsForEvent(event: EventMessageTypes): Record<string, string>;
    getLabelValueForNode(nodeType: string): string;
    getLabelValueForCredential(credentialType: string): string;
}

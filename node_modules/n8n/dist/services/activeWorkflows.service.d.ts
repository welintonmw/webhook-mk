import type { User } from '../databases/entities/User';
import { SharedWorkflowRepository } from '../databases/repositories/sharedWorkflow.repository';
import { WorkflowRepository } from '../databases/repositories/workflow.repository';
import { ActivationErrorsService } from '../ActivationErrors.service';
import { Logger } from '../Logger';
export declare class ActiveWorkflowsService {
    private readonly logger;
    private readonly workflowRepository;
    private readonly sharedWorkflowRepository;
    private readonly activationErrorsService;
    constructor(logger: Logger, workflowRepository: WorkflowRepository, sharedWorkflowRepository: SharedWorkflowRepository, activationErrorsService: ActivationErrorsService);
    getAllActiveIdsInStorage(): Promise<string[]>;
    getAllActiveIdsFor(user: User): Promise<string[]>;
    getActivationError(workflowId: string, user: User): Promise<string | null>;
}

import type { BaseMessageLike } from '@langchain/core/messages';
import { AIProviderOpenAI } from '../services/ai/providers/openai';
import type { BaseChatModelCallOptions } from '@langchain/core/language_models/chat_models';
import { Pinecone } from '@pinecone-database/pinecone';
export declare class AIService {
    private providerType;
    provider: AIProviderOpenAI;
    pinecone: Pinecone;
    private jsonOutputParser;
    constructor();
    prompt(messages: BaseMessageLike[], options?: BaseChatModelCallOptions): Promise<string>;
    validateCurl(result: {
        curl: string;
    }): {
        curl: string;
    };
    generateCurl(serviceName: string, serviceRequest: string): Promise<{
        curl: string;
    }>;
    generateCurlGeneric(serviceName: string, serviceRequest: string): Promise<{
        curl: string;
    }>;
    checkRequirements(): void;
}

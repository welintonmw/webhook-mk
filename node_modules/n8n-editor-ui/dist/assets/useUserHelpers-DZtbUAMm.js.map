{"version":3,"file":"useUserHelpers-DZtbUAMm.js","sources":["../../src/composables/useUserHelpers.ts"],"sourcesContent":["import type { RouteLocation, RouteLocationNormalizedLoaded, Router } from 'vue-router';\nimport { hasPermission } from '@/utils/rbac/permissions';\nimport type { PermissionTypeOptions } from '@/types/rbac';\n\nexport function useUserHelpers(router: Router, route: RouteLocationNormalizedLoaded) {\n\tconst canUserAccessRouteByName = (name: string) => {\n\t\tconst resolvedRoute = router.resolve({ name });\n\n\t\treturn canUserAccessRoute(resolvedRoute);\n\t};\n\n\tconst canUserAccessCurrentRoute = () => {\n\t\treturn canUserAccessRoute(route);\n\t};\n\n\tconst canUserAccessRoute = (route: RouteLocation) => {\n\t\tconst middleware = route.meta?.middleware;\n\t\tconst middlewareOptions = route.meta?.middlewareOptions;\n\n\t\tif (!middleware) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn hasPermission(middleware, middlewareOptions as PermissionTypeOptions | undefined);\n\t};\n\n\treturn {\n\t\tcanUserAccessRouteByName,\n\t\tcanUserAccessCurrentRoute,\n\t\tcanUserAccessRoute,\n\t};\n}\n"],"names":["useUserHelpers","router","route","canUserAccessRouteByName","name","resolvedRoute","canUserAccessRoute","canUserAccessCurrentRoute","middleware","middlewareOptions","hasPermission"],"mappings":"wCAIgB,SAAAA,EAAeC,EAAgBC,EAAsC,CAC9E,MAAAC,EAA4BC,GAAiB,CAClD,MAAMC,EAAgBJ,EAAO,QAAQ,CAAE,KAAAG,CAAM,CAAA,EAE7C,OAAOE,EAAmBD,CAAa,CAAA,EAGlCE,EAA4B,IAC1BD,EAAmBJ,CAAK,EAG1BI,EAAsBJ,GAAyB,SAC9C,MAAAM,GAAaN,EAAAA,EAAM,OAANA,YAAAA,EAAY,WACzBO,GAAoBP,EAAAA,EAAM,OAANA,YAAAA,EAAY,kBAEtC,OAAKM,EAIEE,EAAcF,EAAYC,CAAsD,EAH/E,EAG+E,EAGjF,MAAA,CACN,yBAAAN,EACA,0BAAAI,EACA,mBAAAD,CAAA,CAEF"}
{"version":3,"file":"useWorkflowActivate-npf1npdP.js","sources":["../../src/composables/useWorkflowActivate.ts"],"sourcesContent":["import { useStorage } from '@/composables/useStorage';\n\nimport {\n\tLOCAL_STORAGE_ACTIVATION_FLAG,\n\tPLACEHOLDER_EMPTY_WORKFLOW_ID,\n\tWORKFLOW_ACTIVE_MODAL_KEY,\n} from '@/constants';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { useExternalHooks } from '@/composables/useExternalHooks';\nimport { useRouter } from 'vue-router';\nimport { useWorkflowHelpers } from '@/composables/useWorkflowHelpers';\nimport { useTelemetry } from '@/composables/useTelemetry';\nimport { useToast } from '@/composables/useToast';\nimport { useI18n } from '@/composables/useI18n';\nimport { ref } from 'vue';\nimport { useNpsSurveyStore } from '@/stores/npsSurvey.store';\n\nexport function useWorkflowActivate() {\n\tconst updatingWorkflowActivation = ref(false);\n\n\tconst router = useRouter();\n\tconst workflowHelpers = useWorkflowHelpers({ router });\n\tconst workflowsStore = useWorkflowsStore();\n\tconst uiStore = useUIStore();\n\tconst telemetry = useTelemetry();\n\tconst toast = useToast();\n\tconst i18n = useI18n();\n\tconst npsSurveyStore = useNpsSurveyStore();\n\n\t//methods\n\n\tconst updateWorkflowActivation = async (\n\t\tworkflowId: string | undefined,\n\t\tnewActiveState: boolean,\n\t\ttelemetrySource?: string,\n\t) => {\n\t\tupdatingWorkflowActivation.value = true;\n\t\tconst nodesIssuesExist = workflowsStore.nodesIssuesExist;\n\n\t\tlet currWorkflowId: string | undefined = workflowId;\n\t\tif (!currWorkflowId || currWorkflowId === PLACEHOLDER_EMPTY_WORKFLOW_ID) {\n\t\t\tconst saved = await workflowHelpers.saveCurrentWorkflow();\n\t\t\tif (!saved) {\n\t\t\t\tupdatingWorkflowActivation.value = false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcurrWorkflowId = workflowsStore.workflowId;\n\t\t}\n\t\tconst isCurrentWorkflow = currWorkflowId === workflowsStore.workflowId;\n\n\t\tconst activeWorkflows = workflowsStore.activeWorkflows;\n\t\tconst isWorkflowActive = activeWorkflows.includes(currWorkflowId);\n\n\t\tconst telemetryPayload = {\n\t\t\tworkflow_id: currWorkflowId,\n\t\t\tis_active: newActiveState,\n\t\t\tprevious_status: isWorkflowActive,\n\t\t\tndv_input: telemetrySource === 'ndv',\n\t\t};\n\t\ttelemetry.track('User set workflow active status', telemetryPayload);\n\t\tvoid useExternalHooks().run('workflowActivate.updateWorkflowActivation', telemetryPayload);\n\n\t\ttry {\n\t\t\tif (isWorkflowActive && newActiveState) {\n\t\t\t\ttoast.showMessage({\n\t\t\t\t\ttitle: i18n.baseText('workflowActivator.workflowIsActive'),\n\t\t\t\t\ttype: 'success',\n\t\t\t\t});\n\t\t\t\tupdatingWorkflowActivation.value = false;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (isCurrentWorkflow && nodesIssuesExist && newActiveState) {\n\t\t\t\ttoast.showMessage({\n\t\t\t\t\ttitle: i18n.baseText(\n\t\t\t\t\t\t'workflowActivator.showMessage.activeChangedNodesIssuesExistTrue.title',\n\t\t\t\t\t),\n\t\t\t\t\tmessage: i18n.baseText(\n\t\t\t\t\t\t'workflowActivator.showMessage.activeChangedNodesIssuesExistTrue.message',\n\t\t\t\t\t),\n\t\t\t\t\ttype: 'error',\n\t\t\t\t});\n\n\t\t\t\tupdatingWorkflowActivation.value = false;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait workflowHelpers.updateWorkflow(\n\t\t\t\t{ workflowId: currWorkflowId, active: newActiveState },\n\t\t\t\t!uiStore.stateIsDirty,\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tconst newStateName = newActiveState ? 'activated' : 'deactivated';\n\t\t\ttoast.showError(\n\t\t\t\terror,\n\t\t\t\ti18n.baseText('workflowActivator.showError.title', {\n\t\t\t\t\tinterpolate: { newStateName },\n\t\t\t\t}) + ':',\n\t\t\t);\n\t\t\tupdatingWorkflowActivation.value = false;\n\t\t\treturn;\n\t\t}\n\n\t\tconst activationEventName = isCurrentWorkflow\n\t\t\t? 'workflow.activeChangeCurrent'\n\t\t\t: 'workflow.activeChange';\n\t\tvoid useExternalHooks().run(activationEventName, {\n\t\t\tworkflowId: currWorkflowId,\n\t\t\tactive: newActiveState,\n\t\t});\n\n\t\tupdatingWorkflowActivation.value = false;\n\n\t\tif (isCurrentWorkflow) {\n\t\t\tif (newActiveState && useStorage(LOCAL_STORAGE_ACTIVATION_FLAG).value !== 'true') {\n\t\t\t\tuiStore.openModal(WORKFLOW_ACTIVE_MODAL_KEY);\n\t\t\t} else {\n\t\t\t\tawait npsSurveyStore.fetchPromptsData();\n\t\t\t}\n\t\t}\n\t};\n\n\tconst activateCurrentWorkflow = async (telemetrySource?: string) => {\n\t\tconst workflowId = workflowsStore.workflowId;\n\t\treturn await updateWorkflowActivation(workflowId, true, telemetrySource);\n\t};\n\n\treturn {\n\t\tactivateCurrentWorkflow,\n\t\tupdateWorkflowActivation,\n\t\tupdatingWorkflowActivation,\n\t};\n}\n"],"names":["useWorkflowActivate","updatingWorkflowActivation","ref","router","useRouter","workflowHelpers","useWorkflowHelpers","workflowsStore","useWorkflowsStore","uiStore","useUIStore","telemetry","useTelemetry","toast","useToast","i18n","useI18n","npsSurveyStore","useNpsSurveyStore","updateWorkflowActivation","workflowId","newActiveState","telemetrySource","nodesIssuesExist","currWorkflowId","PLACEHOLDER_EMPTY_WORKFLOW_ID","isCurrentWorkflow","isWorkflowActive","telemetryPayload","useExternalHooks","error","newStateName","activationEventName","useStorage","LOCAL_STORAGE_ACTIVATION_FLAG","WORKFLOW_ACTIVE_MODAL_KEY"],"mappings":"yKAkBO,SAASA,GAAsB,CAC/B,MAAAC,EAA6BC,EAAI,EAAK,EAEtCC,EAASC,IACTC,EAAkBC,EAAmB,CAAE,OAAAH,CAAQ,CAAA,EAC/CI,EAAiBC,IACjBC,EAAUC,IACVC,EAAYC,IACZC,EAAQC,IACRC,EAAOC,IACPC,EAAiBC,IAIjBC,EAA2B,MAChCC,EACAC,EACAC,IACI,CACJrB,EAA2B,MAAQ,GACnC,MAAMsB,EAAmBhB,EAAe,iBAExC,IAAIiB,EAAqCJ,EACrC,GAAA,CAACI,GAAkBA,IAAmBC,EAA+B,CAExE,GAAI,CADU,MAAMpB,EAAgB,sBACxB,CACXJ,EAA2B,MAAQ,GACnC,MACD,CACAuB,EAAiBjB,EAAe,UACjC,CACM,MAAAmB,EAAoBF,IAAmBjB,EAAe,WAGtDoB,EADkBpB,EAAe,gBACE,SAASiB,CAAc,EAE1DI,EAAmB,CACxB,YAAaJ,EACb,UAAWH,EACX,gBAAiBM,EACjB,UAAWL,IAAoB,KAAA,EAEtBX,EAAA,MAAM,kCAAmCiB,CAAgB,EAC9DC,EAAiB,EAAE,IAAI,4CAA6CD,CAAgB,EAErF,GAAA,CACH,GAAID,GAAoBN,EAAgB,CACvCR,EAAM,YAAY,CACjB,MAAOE,EAAK,SAAS,oCAAoC,EACzD,KAAM,SAAA,CACN,EACDd,EAA2B,MAAQ,GAEnC,MACD,CAEI,GAAAyB,GAAqBH,GAAoBF,EAAgB,CAC5DR,EAAM,YAAY,CACjB,MAAOE,EAAK,SACX,uEACD,EACA,QAASA,EAAK,SACb,yEACD,EACA,KAAM,OAAA,CACN,EAEDd,EAA2B,MAAQ,GACnC,MACD,CAEA,MAAMI,EAAgB,eACrB,CAAE,WAAYmB,EAAgB,OAAQH,CAAe,EACrD,CAACZ,EAAQ,YAAA,QAEFqB,EAAO,CACT,MAAAC,EAAeV,EAAiB,YAAc,cAC9CR,EAAA,UACLiB,EACAf,EAAK,SAAS,oCAAqC,CAClD,YAAa,CAAE,aAAAgB,CAAa,CAC5B,CAAA,EAAI,GAAA,EAEN9B,EAA2B,MAAQ,GACnC,MACD,CAEM,MAAA+B,EAAsBN,EACzB,+BACA,wBACEG,EAAA,EAAmB,IAAIG,EAAqB,CAChD,WAAYR,EACZ,OAAQH,CAAA,CACR,EAEDpB,EAA2B,MAAQ,GAE/ByB,IACCL,GAAkBY,EAAWC,CAA6B,EAAE,QAAU,OACzEzB,EAAQ,UAAU0B,CAAyB,EAE3C,MAAMlB,EAAe,mBAEvB,EAQM,MAAA,CACN,wBAN+B,MAAOK,GAA6B,CACnE,MAAMF,EAAab,EAAe,WAClC,OAAO,MAAMY,EAAyBC,EAAY,GAAME,CAAe,CAAA,EAKvE,yBAAAH,EACA,2BAAAlB,CAAA,CAEF"}
{"version":3,"file":"permissions-BxxteU-C.js","sources":["../../../../@n8n/permissions/src/combineScopes.ts","../../../../@n8n/permissions/src/hasScope.ts"],"sourcesContent":["import type { Scope, ScopeLevels, GlobalScopes, MaskLevels } from './types';\n\nexport function combineScopes(userScopes: GlobalScopes, masks?: MaskLevels): Set<Scope>;\nexport function combineScopes(userScopes: ScopeLevels, masks?: MaskLevels): Set<Scope>;\nexport function combineScopes(\n\tuserScopes: GlobalScopes | ScopeLevels,\n\tmasks?: MaskLevels,\n): Set<Scope> {\n\tconst maskedScopes: GlobalScopes | ScopeLevels = Object.fromEntries(\n\t\tObject.entries(userScopes).map((e) => [e[0], [...e[1]]]),\n\t) as GlobalScopes | ScopeLevels;\n\n\tif (masks?.sharing) {\n\t\tif ('project' in maskedScopes) {\n\t\t\tmaskedScopes.project = maskedScopes.project.filter((v) => masks.sharing.includes(v));\n\t\t}\n\t\tif ('resource' in maskedScopes) {\n\t\t\tmaskedScopes.resource = maskedScopes.resource.filter((v) => masks.sharing.includes(v));\n\t\t}\n\t}\n\n\treturn new Set(Object.values(maskedScopes).flat());\n}\n","import { combineScopes } from './combineScopes';\nimport type { Scope, ScopeLevels, GlobalScopes, ScopeOptions, MaskLevels } from './types';\n\nexport function hasScope(\n\tscope: Scope | Scope[],\n\tuserScopes: GlobalScopes,\n\tmasks?: MaskLevels,\n\toptions?: ScopeOptions,\n): boolean;\nexport function hasScope(\n\tscope: Scope | Scope[],\n\tuserScopes: ScopeLevels,\n\tmasks?: MaskLevels,\n\toptions?: ScopeOptions,\n): boolean;\nexport function hasScope(\n\tscope: Scope | Scope[],\n\tuserScopes: GlobalScopes | ScopeLevels,\n\tmasks?: MaskLevels,\n\toptions: ScopeOptions = { mode: 'oneOf' },\n): boolean {\n\tif (!Array.isArray(scope)) {\n\t\tscope = [scope];\n\t}\n\n\tconst userScopeSet = combineScopes(userScopes, masks);\n\n\tif (options.mode === 'allOf') {\n\t\treturn !!scope.length && scope.every((s) => userScopeSet.has(s));\n\t}\n\n\treturn scope.some((s) => userScopeSet.has(s));\n}\n"],"names":["combineScopes","userScopes","masks","maskedScopes","e","hasScope","scope","options","userScopeSet","s"],"mappings":"AAIgB,SAAAA,EACfC,EACAC,EACa,CACb,MAAMC,EAA2C,OAAO,YACvD,OAAO,QAAQF,CAAU,EAAE,IAAKG,GAAM,CAACA,EAAE,CAAC,EAAG,CAAC,GAAGA,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA,EAYxD,OAAO,IAAI,IAAI,OAAO,OAAOD,CAAY,EAAE,MAAM,CAClD,CCPgB,SAAAE,EACfC,EACAL,EACAC,EACAK,EAAwB,CAAE,KAAM,SACtB,CACL,MAAM,QAAQD,CAAK,IACvBA,EAAQ,CAACA,CAAK,GAGT,MAAAE,EAAeR,EAAcC,CAAiB,EAEhD,OAAAM,EAAQ,OAAS,QACb,CAAC,CAACD,EAAM,QAAUA,EAAM,MAAOG,GAAMD,EAAa,IAAIC,CAAC,CAAC,EAGzDH,EAAM,KAAMG,GAAMD,EAAa,IAAIC,CAAC,CAAC,CAC7C"}
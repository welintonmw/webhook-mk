function o(e,n){const s=Object.fromEntries(Object.entries(e).map(t=>[t[0],[...t[1]]]));return new Set(Object.values(s).flat())}function m(e,n,s,t={mode:"oneOf"}){Array.isArray(e)||(e=[e]);const a=o(n);return t.mode==="allOf"?!!e.length&&e.every(r=>a.has(r)):e.some(r=>a.has(r))}export{m as h};
//# sourceMappingURL=permissions-BxxteU-C.js.map

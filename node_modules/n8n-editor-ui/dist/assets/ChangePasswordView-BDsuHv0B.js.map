{"version":3,"file":"ChangePasswordView-BDsuHv0B.js","sources":["../../src/views/ChangePasswordView.vue"],"sourcesContent":["<template>\n\t<AuthView\n\t\tv-if=\"config\"\n\t\t:form=\"config\"\n\t\t:form-loading=\"loading\"\n\t\t@submit=\"onSubmit\"\n\t\t@update=\"onInput\"\n\t/>\n</template>\n\n<script lang=\"ts\">\nimport AuthView from '@/views/AuthView.vue';\nimport { useToast } from '@/composables/useToast';\n\nimport { defineComponent } from 'vue';\nimport type { IFormBoxConfig } from '@/Interface';\nimport { MFA_AUTHENTICATION_TOKEN_INPUT_MAX_LENGTH, VIEWS } from '@/constants';\nimport { mapStores } from 'pinia';\nimport { useUsersStore } from '@/stores/users.store';\n\nexport default defineComponent({\n\tname: 'ChangePasswordView',\n\tcomponents: {\n\t\tAuthView,\n\t},\n\tsetup() {\n\t\treturn {\n\t\t\t...useToast(),\n\t\t};\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tpassword: '',\n\t\t\tloading: false,\n\t\t\tconfig: null as null | IFormBoxConfig,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useUsersStore),\n\t},\n\tasync mounted() {\n\t\tconst form: IFormBoxConfig = {\n\t\t\ttitle: this.$locale.baseText('auth.changePassword'),\n\t\t\tbuttonText: this.$locale.baseText('auth.changePassword'),\n\t\t\tredirectText: this.$locale.baseText('auth.signin'),\n\t\t\tredirectLink: '/signin',\n\t\t\tinputs: [\n\t\t\t\t{\n\t\t\t\t\tname: 'password',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tlabel: this.$locale.baseText('auth.newPassword'),\n\t\t\t\t\t\ttype: 'password',\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tvalidationRules: [{ name: 'DEFAULT_PASSWORD_RULES' }],\n\t\t\t\t\t\tinfoText: this.$locale.baseText('auth.defaultPasswordRequirements'),\n\t\t\t\t\t\tautocomplete: 'new-password',\n\t\t\t\t\t\tcapitalize: true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'password2',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tlabel: this.$locale.baseText('auth.changePassword.reenterNewPassword'),\n\t\t\t\t\t\ttype: 'password',\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tvalidators: {\n\t\t\t\t\t\t\tTWO_PASSWORDS_MATCH: {\n\t\t\t\t\t\t\t\tvalidate: this.passwordsMatch,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tvalidationRules: [{ name: 'TWO_PASSWORDS_MATCH' }],\n\t\t\t\t\t\tautocomplete: 'new-password',\n\t\t\t\t\t\tcapitalize: true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\tconst token = this.getResetToken();\n\t\tconst mfaEnabled = this.getMfaEnabled();\n\n\t\tif (mfaEnabled) {\n\t\t\tform.inputs.push({\n\t\t\t\tname: 'mfaToken',\n\t\t\t\tinitialValue: '',\n\t\t\t\tproperties: {\n\t\t\t\t\trequired: true,\n\t\t\t\t\tlabel: this.$locale.baseText('mfa.code.input.label'),\n\t\t\t\t\tplaceholder: this.$locale.baseText('mfa.code.input.placeholder'),\n\t\t\t\t\tmaxlength: MFA_AUTHENTICATION_TOKEN_INPUT_MAX_LENGTH,\n\t\t\t\t\tcapitalize: true,\n\t\t\t\t\tvalidateOnBlur: true,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tthis.config = form;\n\n\t\ttry {\n\t\t\tif (!token) {\n\t\t\t\tthrow new Error(this.$locale.baseText('auth.changePassword.missingTokenError'));\n\t\t\t}\n\n\t\t\tawait this.usersStore.validatePasswordToken({ token });\n\t\t} catch (e) {\n\t\t\tthis.showError(e, this.$locale.baseText('auth.changePassword.tokenValidationError'));\n\t\t\tvoid this.$router.replace({ name: VIEWS.SIGNIN });\n\t\t}\n\t},\n\tmethods: {\n\t\tpasswordsMatch(value: string | number | boolean | null | undefined) {\n\t\t\tif (typeof value !== 'string') {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (value !== this.password) {\n\t\t\t\treturn {\n\t\t\t\t\tmessageKey: 'auth.changePassword.passwordsMustMatchError',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\t\tonInput(e: { name: string; value: string }) {\n\t\t\tif (e.name === 'password') {\n\t\t\t\tthis.password = e.value;\n\t\t\t}\n\t\t},\n\t\tgetResetToken() {\n\t\t\treturn !this.$route.query.token || typeof this.$route.query.token !== 'string'\n\t\t\t\t? null\n\t\t\t\t: this.$route.query.token;\n\t\t},\n\t\tgetMfaEnabled() {\n\t\t\tif (!this.$route.query.mfaEnabled) return null;\n\t\t\treturn this.$route.query.mfaEnabled === 'true' ? true : false;\n\t\t},\n\t\tasync onSubmit(values: { mfaToken: string }) {\n\t\t\ttry {\n\t\t\t\tthis.loading = true;\n\t\t\t\tconst token = this.getResetToken();\n\n\t\t\t\tif (token) {\n\t\t\t\t\tconst changePasswordParameters = {\n\t\t\t\t\t\ttoken,\n\t\t\t\t\t\tpassword: this.password,\n\t\t\t\t\t\t...(values.mfaToken && { mfaToken: values.mfaToken }),\n\t\t\t\t\t};\n\n\t\t\t\t\tawait this.usersStore.changePassword(changePasswordParameters);\n\n\t\t\t\t\tthis.showMessage({\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\ttitle: this.$locale.baseText('auth.changePassword.passwordUpdated'),\n\t\t\t\t\t\tmessage: this.$locale.baseText('auth.changePassword.passwordUpdatedMessage'),\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.$router.push({ name: VIEWS.SIGNIN });\n\t\t\t\t} else {\n\t\t\t\t\tthis.showError(\n\t\t\t\t\t\tnew Error(this.$locale.baseText('auth.validation.missingParameters')),\n\t\t\t\t\t\tthis.$locale.baseText('auth.changePassword.error'),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.showError(error, this.$locale.baseText('auth.changePassword.error'));\n\t\t\t}\n\t\t\tthis.loading = false;\n\t\t},\n\t},\n});\n</script>\n"],"names":["_sfc_main","defineComponent","AuthView","useToast","mapStores","useUsersStore","form","token","MFA_AUTHENTICATION_TOKEN_INPUT_MAX_LENGTH","e","VIEWS","value","values","changePasswordParameters","error","_component_AuthView","_resolveComponent","_ctx","_openBlock","_createBlock","onSubmit","onInput","_createCommentVNode"],"mappings":"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"}
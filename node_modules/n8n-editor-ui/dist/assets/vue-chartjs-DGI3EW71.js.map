{"version":3,"file":"vue-chartjs-DGI3EW71.js","sources":["../../../../node_modules/.pnpm/vue-chartjs@5.2.0_chart.js@4.4.0_vue@3.4.21_typescript@5.4.2_/node_modules/vue-chartjs/dist/index.js"],"sourcesContent":["import { version, isProxy, toRaw, defineComponent, ref, shallowRef, onMounted, onBeforeUnmount, watch, h } from 'vue';\nimport { Chart as Chart$1, BarController, DoughnutController, LineController, PieController, PolarAreaController, RadarController, BubbleController, ScatterController } from 'chart.js';\n\nconst CommonProps = {\n    data: {\n        type: Object,\n        required: true\n    },\n    options: {\n        type: Object,\n        default: ()=>({})\n    },\n    plugins: {\n        type: Array,\n        default: ()=>[]\n    },\n    datasetIdKey: {\n        type: String,\n        default: \"label\"\n    },\n    updateMode: {\n        type: String,\n        default: undefined\n    }\n};\nconst Props = {\n    type: {\n        type: String,\n        required: true\n    },\n    ...CommonProps\n};\n\nconst compatProps = version[0] === \"2\" ? (internals, props)=>Object.assign(internals, {\n        attrs: props\n    }) : (internals, props)=>Object.assign(internals, props);\nfunction toRawIfProxy(obj) {\n    return isProxy(obj) ? toRaw(obj) : obj;\n}\nfunction cloneProxy(obj) {\n    let src = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : obj;\n    return isProxy(src) ? new Proxy(obj, {}) : obj;\n}\nfunction setOptions(chart, nextOptions) {\n    const options = chart.options;\n    if (options && nextOptions) {\n        Object.assign(options, nextOptions);\n    }\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets, datasetIdKey) {\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]);\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data, datasetIdKey) {\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"dataset\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"nearest\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"index\", {\n        intersect: true\n    }, false);\n}\n\nconst Chart = defineComponent({\n    props: Props,\n    setup (props, param) {\n        let { expose  } = param;\n        const canvasRef = ref(null);\n        const chartRef = shallowRef(null);\n        expose({\n            chart: chartRef\n        });\n        const renderChart = ()=>{\n            if (!canvasRef.value) return;\n            const { type , data , options , plugins , datasetIdKey  } = props;\n            const clonedData = cloneData(data, datasetIdKey);\n            const proxiedData = cloneProxy(clonedData, data);\n            chartRef.value = new Chart$1(canvasRef.value, {\n                type,\n                data: proxiedData,\n                options: {\n                    ...options\n                },\n                plugins\n            });\n        };\n        const destroyChart = ()=>{\n            const chart = toRaw(chartRef.value);\n            if (chart) {\n                chart.destroy();\n                chartRef.value = null;\n            }\n        };\n        const update = (chart)=>{\n            chart.update(props.updateMode);\n        };\n        onMounted(renderChart);\n        onBeforeUnmount(destroyChart);\n        watch([\n            ()=>props.options,\n            ()=>props.data\n        ], (param, param1)=>{\n            let [nextOptionsProxy, nextDataProxy] = param, [prevOptionsProxy, prevDataProxy] = param1;\n            const chart = toRaw(chartRef.value);\n            if (!chart) {\n                return;\n            }\n            let shouldUpdate = false;\n            if (nextOptionsProxy) {\n                const nextOptions = toRawIfProxy(nextOptionsProxy);\n                const prevOptions = toRawIfProxy(prevOptionsProxy);\n                if (nextOptions && nextOptions !== prevOptions) {\n                    setOptions(chart, nextOptions);\n                    shouldUpdate = true;\n                }\n            }\n            if (nextDataProxy) {\n                const nextLabels = toRawIfProxy(nextDataProxy.labels);\n                const prevLabels = toRawIfProxy(prevDataProxy.labels);\n                const nextDatasets = toRawIfProxy(nextDataProxy.datasets);\n                const prevDatasets = toRawIfProxy(prevDataProxy.datasets);\n                if (nextLabels !== prevLabels) {\n                    setLabels(chart.config.data, nextLabels);\n                    shouldUpdate = true;\n                }\n                if (nextDatasets && nextDatasets !== prevDatasets) {\n                    setDatasets(chart.config.data, nextDatasets, props.datasetIdKey);\n                    shouldUpdate = true;\n                }\n            }\n            if (shouldUpdate) {\n                update(chart);\n            }\n        }, {\n            deep: true\n        });\n        return ()=>{\n            return h(\"canvas\", {\n                ref: canvasRef\n            });\n        };\n    }\n});\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return defineComponent({\n        props: CommonProps,\n        setup (props, param) {\n            let { expose  } = param;\n            const ref = shallowRef(null);\n            const reforwardRef = (chartRef)=>{\n                ref.value = chartRef?.chart;\n            };\n            expose({\n                chart: ref\n            });\n            return ()=>{\n                return h(Chart, compatProps({\n                    ref: reforwardRef\n                }, {\n                    type,\n                    ...props\n                }));\n            };\n        }\n    });\n}\nconst Bar = /* #__PURE__ */ createTypedChart(\"bar\", BarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart(\"doughnut\", DoughnutController);\nconst Line = /* #__PURE__ */ createTypedChart(\"line\", LineController);\nconst Pie = /* #__PURE__ */ createTypedChart(\"pie\", PieController);\nconst PolarArea = /* #__PURE__ */ createTypedChart(\"polarArea\", PolarAreaController);\nconst Radar = /* #__PURE__ */ createTypedChart(\"radar\", RadarController);\nconst Bubble = /* #__PURE__ */ createTypedChart(\"bubble\", BubbleController);\nconst Scatter = /* #__PURE__ */ createTypedChart(\"scatter\", ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, createTypedChart, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n"],"names":["CommonProps","Props","toRawIfProxy","obj","isProxy","toRaw","cloneProxy","src","setOptions","chart","nextOptions","options","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","dataset","cloneData","data","nextData","Chart","defineComponent","props","param","expose","canvasRef","ref","chartRef","shallowRef","renderChart","type","plugins","clonedData","proxiedData","Chart$1","destroyChart","update","onMounted","onBeforeUnmount","watch","param1","nextOptionsProxy","nextDataProxy","prevOptionsProxy","prevDataProxy","shouldUpdate","prevOptions","prevLabels","prevDatasets","h"],"mappings":"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","x_google_ignoreList":[0]}
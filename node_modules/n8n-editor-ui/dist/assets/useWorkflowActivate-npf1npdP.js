import{q as T,j as _,e as g,u as h,p as m,P as y,a3 as k,X as x,du as O,dv as L,G as M,x as N}from"./index-1OxaEeO3.js";import{r as D,aH as H}from"./vendor-Dv5OeN6t.js";function F(){const s=D(!1),d=H(),u=T({router:d}),t=_(),w=g(),W=M(),a=h(),r=N(),p=m(),n=async(l,o,I)=>{s.value=!0;const E=t.nodesIssuesExist;let e=l;if(!e||e===y){if(!await u.saveCurrentWorkflow()){s.value=!1;return}e=t.workflowId}const i=e===t.workflowId,c=t.activeWorkflows.includes(e),f={workflow_id:e,is_active:o,previous_status:c,ndv_input:I==="ndv"};W.track("User set workflow active status",f),k().run("workflowActivate.updateWorkflowActivation",f);try{if(c&&o){a.showMessage({title:r.baseText("workflowActivator.workflowIsActive"),type:"success"}),s.value=!1;return}if(i&&E&&o){a.showMessage({title:r.baseText("workflowActivator.showMessage.activeChangedNodesIssuesExistTrue.title"),message:r.baseText("workflowActivator.showMessage.activeChangedNodesIssuesExistTrue.message"),type:"error"}),s.value=!1;return}await u.updateWorkflow({workflowId:e,active:o},!w.stateIsDirty)}catch(v){const C=o?"activated":"deactivated";a.showError(v,r.baseText("workflowActivator.showError.title",{interpolate:{newStateName:C}})+":"),s.value=!1;return}const A=i?"workflow.activeChangeCurrent":"workflow.activeChange";k().run(A,{workflowId:e,active:o}),s.value=!1,i&&(o&&x(O).value!=="true"?w.openModal(L):await p.fetchPromptsData())};return{activateCurrentWorkflow:async l=>{const o=t.workflowId;return await n(o,!0,l)},updateWorkflowActivation:n,updatingWorkflowActivation:s}}export{F as u};
//# sourceMappingURL=useWorkflowActivate-npf1npdP.js.map

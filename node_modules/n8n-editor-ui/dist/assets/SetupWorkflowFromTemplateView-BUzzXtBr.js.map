{"version":3,"file":"SetupWorkflowFromTemplateView-BUzzXtBr.js","sources":["../../src/views/SetupWorkflowFromTemplateView/setupTemplate.store.ts","../../src/views/SetupWorkflowFromTemplateView/SetupWorkflowFromTemplateView.vue"],"sourcesContent":["import { defineStore } from 'pinia';\nimport { computed, ref } from 'vue';\nimport type { Router } from 'vue-router';\nimport { useCredentialsStore } from '@/stores/credentials.store';\nimport { useNodeTypesStore } from '@/stores/nodeTypes.store';\nimport { useRootStore } from '@/stores/root.store';\nimport { useTemplatesStore } from '@/stores/templates.store';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport type { INodeTypeDescription } from 'n8n-workflow';\nimport type { INodeUi } from '@/Interface';\nimport { VIEWS } from '@/constants';\nimport { createWorkflowFromTemplate } from '@/utils/templates/templateActions';\nimport { useExternalHooks } from '@/composables/useExternalHooks';\nimport { useTelemetry } from '@/composables/useTelemetry';\nimport { useCredentialSetupState } from '@/views/SetupWorkflowFromTemplateView/useCredentialSetupState';\nimport { tryToParseNumber } from '@/utils/typesUtils';\n\nexport type NodeAndType = {\n\tnode: INodeUi;\n\tnodeType: INodeTypeDescription;\n};\n\nexport type RequiredCredentials = {\n\tnode: INodeUi;\n\tcredentialName: string;\n\tcredentialType: string;\n};\n\nexport type AppCredentialCount = {\n\tappName: string;\n\tcount: number;\n};\n\n/**\n * Store for managing the state of the SetupWorkflowFromTemplateView\n */\nexport const useSetupTemplateStore = defineStore('setupTemplate', () => {\n\t//#region State\n\n\tconst templateId = ref<string>('');\n\tconst isLoading = ref(true);\n\tconst isSaving = ref(false);\n\n\t//#endregion State\n\n\tconst templatesStore = useTemplatesStore();\n\tconst nodeTypesStore = useNodeTypesStore();\n\tconst credentialsStore = useCredentialsStore();\n\tconst rootStore = useRootStore();\n\tconst workflowsStore = useWorkflowsStore();\n\n\t//#region Getters\n\n\tconst template = computed(() => {\n\t\treturn templateId.value ? templatesStore.getFullTemplateById(templateId.value) : null;\n\t});\n\n\tconst templateNodes = computed(() => {\n\t\treturn template.value?.workflow.nodes ?? [];\n\t});\n\n\tconst {\n\t\tappCredentials,\n\t\tcredentialOverrides,\n\t\tcredentialUsages,\n\t\tcredentialsByKey,\n\t\tnodesRequiringCredentialsSorted,\n\t\tnumFilledCredentials,\n\t\tselectedCredentialIdByKey,\n\t\tsetSelectedCredentialId,\n\t\tunsetSelectedCredential,\n\t} = useCredentialSetupState(templateNodes);\n\n\t//#endregion Getters\n\n\t//#region Actions\n\n\tconst setTemplateId = (id: string) => {\n\t\ttemplateId.value = id;\n\t};\n\n\tconst ignoredAutoFillCredentialTypes = new Set([\n\t\t'httpBasicAuth',\n\t\t'httpCustomAuth',\n\t\t'httpDigestAuth',\n\t\t'httpHeaderAuth',\n\t\t'oAuth1Api',\n\t\t'oAuth2Api',\n\t\t'httpQueryAuth',\n\t]);\n\n\t/**\n\t * Selects initial credentials for the template. Credentials\n\t * need to be loaded before this.\n\t */\n\tconst setInitialCredentialSelection = () => {\n\t\tfor (const credUsage of credentialUsages.value) {\n\t\t\tif (ignoredAutoFillCredentialTypes.has(credUsage.credentialType)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst availableCreds = credentialsStore.getCredentialsByType(credUsage.credentialType);\n\n\t\t\tif (availableCreds.length === 1) {\n\t\t\t\tselectedCredentialIdByKey.value[credUsage.key] = availableCreds[0].id;\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Loads the template if it hasn't been loaded yet.\n\t */\n\tconst loadTemplateIfNeeded = async () => {\n\t\tif (!!template.value || !templateId.value) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait templatesStore.fetchTemplateById(templateId.value);\n\n\t\tsetInitialCredentialSelection();\n\t};\n\n\t/**\n\t * Initializes the store for a specific template.\n\t */\n\tconst init = async () => {\n\t\tisLoading.value = true;\n\t\ttry {\n\t\t\tselectedCredentialIdByKey.value = {};\n\n\t\t\tawait Promise.all([\n\t\t\t\tcredentialsStore.fetchAllCredentials(),\n\t\t\t\tcredentialsStore.fetchCredentialTypes(false),\n\t\t\t\tnodeTypesStore.loadNodeTypesIfNotLoaded(),\n\t\t\t\tloadTemplateIfNeeded(),\n\t\t\t]);\n\n\t\t\tsetInitialCredentialSelection();\n\t\t} finally {\n\t\t\tisLoading.value = false;\n\t\t}\n\t};\n\n\t/**\n\t * Skips the setup and goes directly to the workflow view.\n\t */\n\tconst skipSetup = async ({ router }: { router: Router }) => {\n\t\tconst externalHooks = useExternalHooks();\n\t\tconst telemetry = useTelemetry();\n\n\t\tawait externalHooks.run('templatesWorkflowView.openWorkflow', {\n\t\t\tsource: 'workflow',\n\t\t\ttemplate_id: templateId.value,\n\t\t\twf_template_repo_session_id: templatesStore.currentSessionId,\n\t\t});\n\n\t\ttelemetry.track('User closed cred setup', {\n\t\t\tcompleted: false,\n\t\t\tcreds_filled: 0,\n\t\t\tcreds_needed: credentialUsages.value.length,\n\t\t\tworkflow_id: null,\n\t\t});\n\n\t\t// Replace the URL so back button doesn't come back to this setup view\n\t\tawait router.replace({\n\t\t\tname: VIEWS.TEMPLATE_IMPORT,\n\t\t\tparams: { id: templateId.value },\n\t\t});\n\t};\n\n\t/**\n\t * Creates a workflow from the template and navigates to the workflow view.\n\t */\n\tconst createWorkflow = async (opts: { router: Router }) => {\n\t\tconst { router } = opts;\n\t\tconst telemetry = useTelemetry();\n\n\t\tif (!template.value) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tisSaving.value = true;\n\n\t\t\tconst createdWorkflow = await createWorkflowFromTemplate({\n\t\t\t\ttemplate: template.value,\n\t\t\t\tcredentialOverrides: credentialOverrides.value,\n\t\t\t\trootStore,\n\t\t\t\tworkflowsStore,\n\t\t\t\tnodeTypeProvider: nodeTypesStore,\n\t\t\t});\n\n\t\t\ttelemetry.track('User closed cred setup', {\n\t\t\t\tcompleted: true,\n\t\t\t\tcreds_filled: numFilledCredentials.value,\n\t\t\t\tcreds_needed: credentialUsages.value.length,\n\t\t\t\tworkflow_id: createdWorkflow.id,\n\t\t\t});\n\n\t\t\ttelemetry.track(\n\t\t\t\t'User inserted workflow template',\n\t\t\t\t{\n\t\t\t\t\tsource: 'workflow',\n\t\t\t\t\ttemplate_id: tryToParseNumber(templateId.value),\n\t\t\t\t\twf_template_repo_session_id: templatesStore.currentSessionId,\n\t\t\t\t},\n\t\t\t\t{ withPostHog: true },\n\t\t\t);\n\n\t\t\ttelemetry.track('User saved new workflow from template', {\n\t\t\t\ttemplate_id: tryToParseNumber(templateId.value),\n\t\t\t\tworkflow_id: createdWorkflow.id,\n\t\t\t\twf_template_repo_session_id: templatesStore.currentSessionId,\n\t\t\t});\n\n\t\t\t// Replace the URL so back button doesn't come back to this setup view\n\t\t\tawait router.replace({\n\t\t\t\tname: VIEWS.WORKFLOW,\n\t\t\t\tparams: { name: createdWorkflow.id },\n\t\t\t});\n\t\t} finally {\n\t\t\tisSaving.value = false;\n\t\t}\n\t};\n\n\t//#endregion Actions\n\n\treturn {\n\t\tcredentialsByKey,\n\t\tisLoading,\n\t\tisSaving,\n\t\tappCredentials,\n\t\tnodesRequiringCredentialsSorted,\n\t\ttemplate,\n\t\tcredentialUsages,\n\t\tselectedCredentialIdByKey,\n\t\tcredentialOverrides,\n\t\tnumFilledCredentials,\n\t\tcreateWorkflow,\n\t\tskipSetup,\n\t\tinit,\n\t\tloadTemplateIfNeeded,\n\t\tsetInitialCredentialSelection,\n\t\tsetTemplateId,\n\t\tsetSelectedCredentialId,\n\t\tunsetSelectedCredential,\n\t};\n});\n","<script setup lang=\"ts\">\nimport { computed, onBeforeMount, onMounted, watch } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { useSetupTemplateStore } from './setupTemplate.store';\nimport N8nHeading from 'n8n-design-system/components/N8nHeading';\nimport N8nLink from 'n8n-design-system/components/N8nLink';\nimport AppsRequiringCredsNotice from './AppsRequiringCredsNotice.vue';\nimport SetupTemplateFormStep from './SetupTemplateFormStep.vue';\nimport TemplatesView from '../TemplatesView.vue';\nimport { TEMPLATE_CREDENTIAL_SETUP_EXPERIMENT, VIEWS } from '@/constants';\nimport { useI18n } from '@/composables/useI18n';\nimport { usePostHog } from '@/stores/posthog.store';\n\n// Store\nconst setupTemplateStore = useSetupTemplateStore();\nconst i18n = useI18n();\nconst posthogStore = usePostHog();\n\n// Router\nconst route = useRoute();\nconst router = useRouter();\n\n//#region Computed\n\nconst templateId = computed(() =>\n\tArray.isArray(route.params.id) ? route.params.id[0] : route.params.id,\n);\nconst title = computed(() => setupTemplateStore.template?.name ?? 'unknown');\nconst isReady = computed(() => !setupTemplateStore.isLoading);\n\nconst skipSetupUrl = computed(() => {\n\tconst resolvedRoute = router.resolve({\n\t\tname: VIEWS.TEMPLATE_IMPORT,\n\t\tparams: { id: templateId.value },\n\t});\n\treturn resolvedRoute.fullPath;\n});\n\n//#endregion Computed\n\n//#region Watchers\n\nwatch(templateId, async (newTemplateId) => {\n\tsetupTemplateStore.setTemplateId(newTemplateId);\n\tawait setupTemplateStore.loadTemplateIfNeeded();\n});\n\n//#endregion Watchers\n\n//#region Methods\n\nconst onSkipSetup = async (event: MouseEvent) => {\n\tevent.preventDefault();\n\n\tawait setupTemplateStore.skipSetup({\n\t\trouter,\n\t});\n};\n\nconst skipIfTemplateHasNoCreds = async () => {\n\tconst isTemplateLoaded = !!setupTemplateStore.template;\n\tif (!isTemplateLoaded) {\n\t\treturn false;\n\t}\n\n\tif (setupTemplateStore.credentialUsages.length === 0) {\n\t\tawait setupTemplateStore.skipSetup({\n\t\t\trouter,\n\t\t});\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n//#endregion Methods\n\n//#region Lifecycle hooks\n\nsetupTemplateStore.setTemplateId(templateId.value);\n\nonBeforeMount(async () => {\n\tif (!posthogStore.isFeatureEnabled(TEMPLATE_CREDENTIAL_SETUP_EXPERIMENT)) {\n\t\tvoid router.replace({\n\t\t\tname: VIEWS.TEMPLATE_IMPORT,\n\t\t\tparams: { id: templateId.value },\n\t\t});\n\t}\n});\n\nonMounted(async () => {\n\tawait setupTemplateStore.init();\n\tawait skipIfTemplateHasNoCreds();\n});\n\n//#endregion Lifecycle hooks\n</script>\n\n<template>\n\t<TemplatesView :go-back-enabled=\"true\">\n\t\t<template #header>\n\t\t\t<N8nHeading v-if=\"isReady\" tag=\"h1\" size=\"2xlarge\"\n\t\t\t\t>{{ i18n.baseText('templateSetup.title', { interpolate: { name: title } }) }}\n\t\t\t</N8nHeading>\n\t\t\t<n8n-loading v-else variant=\"h1\" />\n\t\t</template>\n\n\t\t<template #content>\n\t\t\t<div :class=\"$style.grid\">\n\t\t\t\t<div :class=\"$style.notice\" data-test-id=\"info-callout\">\n\t\t\t\t\t<AppsRequiringCredsNotice\n\t\t\t\t\t\tv-if=\"isReady\"\n\t\t\t\t\t\t:app-credentials=\"setupTemplateStore.appCredentials\"\n\t\t\t\t\t/>\n\t\t\t\t\t<n8n-loading v-else variant=\"p\" />\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<ol v-if=\"isReady\" :class=\"$style.appCredentialsContainer\">\n\t\t\t\t\t\t<SetupTemplateFormStep\n\t\t\t\t\t\t\tv-for=\"(credentials, index) in setupTemplateStore.credentialUsages\"\n\t\t\t\t\t\t\t:key=\"credentials.key\"\n\t\t\t\t\t\t\t:class=\"$style.appCredential\"\n\t\t\t\t\t\t\t:order=\"index + 1\"\n\t\t\t\t\t\t\t:credentials=\"credentials\"\n\t\t\t\t\t\t\t:selected-credential-id=\"\n\t\t\t\t\t\t\t\tsetupTemplateStore.selectedCredentialIdByKey[credentials.key]\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\t@credential-selected=\"\n\t\t\t\t\t\t\t\tsetupTemplateStore.setSelectedCredentialId(\n\t\t\t\t\t\t\t\t\t$event.credentialUsageKey,\n\t\t\t\t\t\t\t\t\t$event.credentialId,\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\t@credential-deselected=\"\n\t\t\t\t\t\t\t\tsetupTemplateStore.unsetSelectedCredential($event.credentialUsageKey)\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ol>\n\t\t\t\t\t<div v-else :class=\"$style.appCredentialsContainer\">\n\t\t\t\t\t\t<n8n-loading :class=\"$style.appCredential\" variant=\"p\" :rows=\"3\" />\n\t\t\t\t\t\t<n8n-loading :class=\"$style.appCredential\" variant=\"p\" :rows=\"3\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div :class=\"$style.actions\">\n\t\t\t\t\t<N8nLink :href=\"skipSetupUrl\" :new-window=\"false\" @click=\"onSkipSetup($event)\">{{\n\t\t\t\t\t\ti18n.baseText('templateSetup.skip')\n\t\t\t\t\t}}</N8nLink>\n\n\t\t\t\t\t<n8n-tooltip\n\t\t\t\t\t\tv-if=\"isReady\"\n\t\t\t\t\t\t:content=\"i18n.baseText('templateSetup.continue.button.fillRemaining')\"\n\t\t\t\t\t\t:disabled=\"setupTemplateStore.numFilledCredentials > 0\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<n8n-button\n\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t:label=\"i18n.baseText('templateSetup.continue.button')\"\n\t\t\t\t\t\t\t:disabled=\"\n\t\t\t\t\t\t\t\tsetupTemplateStore.isSaving || setupTemplateStore.numFilledCredentials === 0\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\tdata-test-id=\"continue-button\"\n\t\t\t\t\t\t\t@click=\"setupTemplateStore.createWorkflow({ router })\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</n8n-tooltip>\n\t\t\t\t\t<div v-else>\n\t\t\t\t\t\t<n8n-loading variant=\"button\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</template>\n\t</TemplatesView>\n</template>\n\n<style lang=\"scss\" module>\n.grid {\n\tmargin: 0 auto;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\tmax-width: 768px;\n}\n\n.notice {\n\tmargin-bottom: var(--spacing-2xl);\n}\n\n.appCredentialsContainer {\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: var(--spacing-2xl);\n}\n\n.appCredential:not(:last-of-type) {\n\tpadding-bottom: var(--spacing-2xl);\n\tborder-bottom: 1px solid var(--color-foreground-light);\n}\n\n.actions {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tmargin-top: var(--spacing-3xl);\n\tmargin-bottom: var(--spacing-3xl);\n}\n</style>\n"],"names":["useSetupTemplateStore","defineStore","templateId","ref","isLoading","isSaving","templatesStore","useTemplatesStore","nodeTypesStore","useNodeTypesStore","credentialsStore","useCredentialsStore","rootStore","useRootStore","workflowsStore","useWorkflowsStore","template","computed","templateNodes","_a","appCredentials","credentialOverrides","credentialUsages","credentialsByKey","nodesRequiringCredentialsSorted","numFilledCredentials","selectedCredentialIdByKey","setSelectedCredentialId","unsetSelectedCredential","useCredentialSetupState","setTemplateId","id","ignoredAutoFillCredentialTypes","setInitialCredentialSelection","credUsage","availableCreds","loadTemplateIfNeeded","opts","router","telemetry","useTelemetry","createdWorkflow","createWorkflowFromTemplate","tryToParseNumber","VIEWS","externalHooks","useExternalHooks","setupTemplateStore","i18n","useI18n","posthogStore","usePostHog","route","useRoute","useRouter","title","isReady","skipSetupUrl","watch","newTemplateId","onSkipSetup","event","skipIfTemplateHasNoCreds","onBeforeMount","TEMPLATE_CREDENTIAL_SETUP_EXPERIMENT","onMounted"],"mappings":"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"}
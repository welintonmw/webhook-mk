{"version":3,"file":"RunDataJsonActions-BQBpmtOi.js","sources":["../../src/components/RunDataJsonActions.vue"],"sourcesContent":["<template>\n\t<div :class=\"$style.actionsGroup\">\n\t\t<n8n-icon-button\n\t\t\tv-if=\"noSelection\"\n\t\t\t:title=\"i18n.baseText('runData.copyToClipboard')\"\n\t\t\ticon=\"copy\"\n\t\t\ttype=\"tertiary\"\n\t\t\t:circle=\"false\"\n\t\t\t@click=\"handleCopyClick({ command: 'value' })\"\n\t\t/>\n\t\t<el-dropdown v-else trigger=\"click\" @command=\"handleCopyClick\">\n\t\t\t<span class=\"el-dropdown-link\">\n\t\t\t\t<n8n-icon-button\n\t\t\t\t\t:title=\"i18n.baseText('runData.copyToClipboard')\"\n\t\t\t\t\ticon=\"copy\"\n\t\t\t\t\ttype=\"tertiary\"\n\t\t\t\t\t:circle=\"false\"\n\t\t\t\t/>\n\t\t\t</span>\n\t\t\t<template #dropdown>\n\t\t\t\t<el-dropdown-menu>\n\t\t\t\t\t<el-dropdown-item :command=\"{ command: 'value' }\">\n\t\t\t\t\t\t{{ i18n.baseText('runData.copyValue') }}\n\t\t\t\t\t</el-dropdown-item>\n\t\t\t\t\t<el-dropdown-item :command=\"{ command: 'itemPath' }\" divided>\n\t\t\t\t\t\t{{ i18n.baseText('runData.copyItemPath') }}\n\t\t\t\t\t</el-dropdown-item>\n\t\t\t\t\t<el-dropdown-item :command=\"{ command: 'parameterPath' }\">\n\t\t\t\t\t\t{{ i18n.baseText('runData.copyParameterPath') }}\n\t\t\t\t\t</el-dropdown-item>\n\t\t\t\t</el-dropdown-menu>\n\t\t\t</template>\n\t\t</el-dropdown>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport type { PropType } from 'vue';\nimport { mapStores, storeToRefs } from 'pinia';\nimport jp from 'jsonpath';\nimport type { INodeUi } from '@/Interface';\nimport type { IDataObject } from 'n8n-workflow';\nimport { clearJsonKey, convertPath } from '@/utils/typesUtils';\nimport { executionDataToJson } from '@/utils/nodeTypesUtils';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { useNDVStore } from '@/stores/ndv.store';\nimport { useNodeHelpers } from '@/composables/useNodeHelpers';\nimport { useToast } from '@/composables/useToast';\nimport { useI18n } from '@/composables/useI18n';\nimport { nonExistingJsonPath } from '@/constants';\nimport { useClipboard } from '@/composables/useClipboard';\nimport { useNodeTypesStore } from '@/stores/nodeTypes.store';\nimport { useSourceControlStore } from '@/stores/sourceControl.store';\nimport { usePinnedData } from '@/composables/usePinnedData';\n\ntype JsonPathData = {\n\tpath: string;\n\tstartPath: string;\n};\n\nexport default defineComponent({\n\tname: 'RunDataJsonActions',\n\tprops: {\n\t\tnode: {\n\t\t\ttype: Object as PropType<INodeUi>,\n\t\t\trequired: true,\n\t\t},\n\t\tpaneType: {\n\t\t\ttype: String,\n\t\t},\n\t\tpushRef: {\n\t\t\ttype: String,\n\t\t},\n\t\tcurrentOutputIndex: {\n\t\t\ttype: Number,\n\t\t},\n\t\trunIndex: {\n\t\t\ttype: Number,\n\t\t},\n\t\tdisplayMode: {\n\t\t\ttype: String,\n\t\t},\n\t\tdistanceFromActive: {\n\t\t\ttype: Number,\n\t\t},\n\t\tselectedJsonPath: {\n\t\t\ttype: String,\n\t\t\tdefault: nonExistingJsonPath,\n\t\t},\n\t\tjsonData: {\n\t\t\ttype: Array as PropType<IDataObject[]>,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tsetup() {\n\t\tconst ndvStore = useNDVStore();\n\t\tconst i18n = useI18n();\n\t\tconst nodeHelpers = useNodeHelpers();\n\t\tconst clipboard = useClipboard();\n\t\tconst { activeNode } = storeToRefs(ndvStore);\n\t\tconst pinnedData = usePinnedData(activeNode);\n\n\t\treturn {\n\t\t\ti18n,\n\t\t\tnodeHelpers,\n\t\t\tclipboard,\n\t\t\tpinnedData,\n\t\t\t...useToast(),\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useNodeTypesStore, useNDVStore, useWorkflowsStore, useSourceControlStore),\n\t\tisReadOnlyRoute() {\n\t\t\treturn this.$route?.meta?.readOnlyCanvas === true;\n\t\t},\n\t\tactiveNode(): INodeUi | null {\n\t\t\treturn this.ndvStore.activeNode;\n\t\t},\n\t\tnoSelection() {\n\t\t\treturn this.selectedJsonPath === nonExistingJsonPath;\n\t\t},\n\t\tnormalisedJsonPath(): string {\n\t\t\treturn this.noSelection ? '[\"\"]' : this.selectedJsonPath;\n\t\t},\n\t},\n\tmethods: {\n\t\tgetJsonValue(): string {\n\t\t\tlet selectedValue = jp.query(this.jsonData, `$${this.normalisedJsonPath}`)[0];\n\t\t\tif (this.noSelection) {\n\t\t\t\tconst inExecutionsFrame =\n\t\t\t\t\twindow !== window.parent && window.parent.location.pathname.includes('/executions');\n\n\t\t\t\tif (this.pinnedData.hasData.value && !inExecutionsFrame) {\n\t\t\t\t\tselectedValue = clearJsonKey(this.pinnedData.data.value as object);\n\t\t\t\t} else {\n\t\t\t\t\tselectedValue = executionDataToJson(\n\t\t\t\t\t\tthis.nodeHelpers.getNodeInputData(this.node, this.runIndex, this.currentOutputIndex),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet value = '';\n\t\t\tif (typeof selectedValue === 'object') {\n\t\t\t\tvalue = JSON.stringify(selectedValue, null, 2);\n\t\t\t} else {\n\t\t\t\tvalue = selectedValue.toString();\n\t\t\t}\n\n\t\t\treturn value;\n\t\t},\n\t\tgetJsonItemPath(): JsonPathData {\n\t\t\tconst newPath = convertPath(this.normalisedJsonPath);\n\t\t\tlet startPath = '';\n\t\t\tlet path = '';\n\n\t\t\tconst pathParts = newPath.split(']');\n\t\t\tconst index = pathParts[0].slice(1);\n\t\t\tpath = pathParts.slice(1).join(']');\n\t\t\tstartPath = `$item(${index}).$node[\"${this.node.name}\"].json`;\n\n\t\t\treturn { path, startPath };\n\t\t},\n\t\tgetJsonParameterPath(): JsonPathData {\n\t\t\tconst newPath = convertPath(this.normalisedJsonPath);\n\t\t\tconst path = newPath.split(']').slice(1).join(']');\n\t\t\tlet startPath = `$node[\"${this.node.name}\"].json`;\n\n\t\t\tif (this.distanceFromActive === 1) {\n\t\t\t\tstartPath = '$json';\n\t\t\t}\n\n\t\t\treturn { path, startPath };\n\t\t},\n\t\thandleCopyClick(commandData: { command: string }) {\n\t\t\tlet value: string;\n\t\t\tif (commandData.command === 'value') {\n\t\t\t\tvalue = this.getJsonValue();\n\n\t\t\t\tthis.showToast({\n\t\t\t\t\ttitle: this.i18n.baseText('runData.copyValue.toast'),\n\t\t\t\t\tmessage: '',\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\tduration: 2000,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet startPath = '';\n\t\t\t\tlet path = '';\n\t\t\t\tif (commandData.command === 'itemPath') {\n\t\t\t\t\tconst jsonItemPath = this.getJsonItemPath();\n\t\t\t\t\tstartPath = jsonItemPath.startPath;\n\t\t\t\t\tpath = jsonItemPath.path;\n\n\t\t\t\t\tthis.showToast({\n\t\t\t\t\t\ttitle: this.i18n.baseText('runData.copyItemPath.toast'),\n\t\t\t\t\t\tmessage: '',\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\tduration: 2000,\n\t\t\t\t\t});\n\t\t\t\t} else if (commandData.command === 'parameterPath') {\n\t\t\t\t\tconst jsonParameterPath = this.getJsonParameterPath();\n\t\t\t\t\tstartPath = jsonParameterPath.startPath;\n\t\t\t\t\tpath = jsonParameterPath.path;\n\n\t\t\t\t\tthis.showToast({\n\t\t\t\t\t\ttitle: this.i18n.baseText('runData.copyParameterPath.toast'),\n\t\t\t\t\t\tmessage: '',\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\tduration: 2000,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (!path.startsWith('[') && !path.startsWith('.') && path) {\n\t\t\t\t\tpath += '.';\n\t\t\t\t}\n\t\t\t\tvalue = `{{ ${startPath + path} }}`;\n\t\t\t}\n\n\t\t\tconst copyType = {\n\t\t\t\tvalue: 'selection',\n\t\t\t\titemPath: 'item_path',\n\t\t\t\tparameterPath: 'parameter_path',\n\t\t\t}[commandData.command];\n\n\t\t\tthis.$telemetry.track('User copied ndv data', {\n\t\t\t\tnode_type: this.activeNode?.type,\n\t\t\t\tpush_ref: this.pushRef,\n\t\t\t\trun_index: this.runIndex,\n\t\t\t\tview: 'json',\n\t\t\t\tcopy_type: copyType,\n\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\tpane: this.paneType,\n\t\t\t\tin_execution_log: this.isReadOnlyRoute,\n\t\t\t});\n\n\t\t\tvoid this.clipboard.copy(value);\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.actionsGroup {\n\tposition: sticky;\n\theight: 0;\n\toverflow: visible;\n\tz-index: 10;\n\ttop: 0;\n\tpadding-right: var(--spacing-s);\n\topacity: 0;\n\ttransition: opacity 0.3s ease;\n\ttext-align: right;\n}\n</style>\n"],"names":["_sfc_main","defineComponent","nonExistingJsonPath","ndvStore","useNDVStore","i18n","useI18n","nodeHelpers","useNodeHelpers","clipboard","useClipboard","activeNode","storeToRefs","pinnedData","usePinnedData","useToast","mapStores","useNodeTypesStore","useWorkflowsStore","useSourceControlStore","_b","_a","selectedValue","jp","inExecutionsFrame","clearJsonKey","executionDataToJson","value","newPath","convertPath","startPath","path","pathParts","index","commandData","jsonItemPath","jsonParameterPath","copyType","_resolveComponent","noSelection","_ctx","_openBlock","_createBlock","_component_n8n_icon_button","_cache","$event","_component_el_dropdown","_withCtx","_createVNode","_component_el_dropdown_menu","_component_el_dropdown_item","_createTextVNode","_toDisplayString","_createElementVNode","_hoisted_1"],"mappings":"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"}
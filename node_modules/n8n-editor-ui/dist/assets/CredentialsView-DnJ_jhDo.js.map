{"version":3,"file":"CredentialsView-DnJ_jhDo.js","sources":["../../src/components/CredentialCard.vue","../../src/views/CredentialsView.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { computed } from 'vue';\nimport dateformat from 'dateformat';\nimport type { ICredentialsResponse } from '@/Interface';\nimport { MODAL_CONFIRM, PROJECT_MOVE_RESOURCE_MODAL } from '@/constants';\nimport { useMessage } from '@/composables/useMessage';\nimport CredentialIcon from '@/components/CredentialIcon.vue';\nimport { getCredentialPermissions } from '@/permissions';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useCredentialsStore } from '@/stores/credentials.store';\nimport TimeAgo from '@/components/TimeAgo.vue';\nimport type { ProjectSharingData } from '@/types/projects.types';\nimport { useProjectsStore } from '@/stores/projects.store';\nimport ProjectCardBadge from '@/components/Projects/ProjectCardBadge.vue';\nimport { useI18n } from '@/composables/useI18n';\n\nconst CREDENTIAL_LIST_ITEM_ACTIONS = {\n\tOPEN: 'open',\n\tDELETE: 'delete',\n\tMOVE: 'move',\n};\n\nconst props = withDefaults(\n\tdefineProps<{\n\t\tdata: ICredentialsResponse;\n\t\treadOnly?: boolean;\n\t}>(),\n\t{\n\t\tdata: () => ({\n\t\t\tid: '',\n\t\t\tcreatedAt: '',\n\t\t\tupdatedAt: '',\n\t\t\ttype: '',\n\t\t\tname: '',\n\t\t\tsharedWithProjects: [],\n\t\t\thomeProject: {} as ProjectSharingData,\n\t\t}),\n\t\treadOnly: false,\n\t},\n);\n\nconst locale = useI18n();\nconst message = useMessage();\nconst uiStore = useUIStore();\nconst credentialsStore = useCredentialsStore();\nconst projectsStore = useProjectsStore();\n\nconst credentialType = computed(() => credentialsStore.getCredentialTypeByName(props.data.type));\nconst credentialPermissions = computed(() => getCredentialPermissions(props.data));\nconst actions = computed(() => {\n\tconst items = [\n\t\t{\n\t\t\tlabel: locale.baseText('credentials.item.open'),\n\t\t\tvalue: CREDENTIAL_LIST_ITEM_ACTIONS.OPEN,\n\t\t},\n\t];\n\n\tif (credentialPermissions.value.delete) {\n\t\titems.push({\n\t\t\tlabel: locale.baseText('credentials.item.delete'),\n\t\t\tvalue: CREDENTIAL_LIST_ITEM_ACTIONS.DELETE,\n\t\t});\n\t}\n\n\tif (credentialPermissions.value.move) {\n\t\titems.push({\n\t\t\tlabel: locale.baseText('credentials.item.move'),\n\t\t\tvalue: CREDENTIAL_LIST_ITEM_ACTIONS.MOVE,\n\t\t});\n\t}\n\n\treturn items;\n});\nconst formattedCreatedAtDate = computed(() => {\n\tconst currentYear = new Date().getFullYear().toString();\n\n\treturn dateformat(\n\t\tprops.data.createdAt,\n\t\t`d mmmm${props.data.createdAt.startsWith(currentYear) ? '' : ', yyyy'}`,\n\t);\n});\n\nfunction onClick() {\n\tuiStore.openExistingCredential(props.data.id);\n}\n\nasync function onAction(action: string) {\n\tswitch (action) {\n\t\tcase CREDENTIAL_LIST_ITEM_ACTIONS.OPEN:\n\t\t\tonClick();\n\t\t\tbreak;\n\t\tcase CREDENTIAL_LIST_ITEM_ACTIONS.DELETE:\n\t\t\tawait deleteResource();\n\t\t\tbreak;\n\t\tcase CREDENTIAL_LIST_ITEM_ACTIONS.MOVE:\n\t\t\tmoveResource();\n\t\t\tbreak;\n\t}\n}\n\nasync function deleteResource() {\n\tconst deleteConfirmed = await message.confirm(\n\t\tlocale.baseText('credentialEdit.credentialEdit.confirmMessage.deleteCredential.message', {\n\t\t\tinterpolate: { savedCredentialName: props.data.name },\n\t\t}),\n\t\tlocale.baseText('credentialEdit.credentialEdit.confirmMessage.deleteCredential.headline'),\n\t\t{\n\t\t\tconfirmButtonText: locale.baseText(\n\t\t\t\t'credentialEdit.credentialEdit.confirmMessage.deleteCredential.confirmButtonText',\n\t\t\t),\n\t\t},\n\t);\n\n\tif (deleteConfirmed === MODAL_CONFIRM) {\n\t\tawait credentialsStore.deleteCredential({ id: props.data.id });\n\t}\n}\n\nfunction moveResource() {\n\tuiStore.openModalWithData({\n\t\tname: PROJECT_MOVE_RESOURCE_MODAL,\n\t\tdata: {\n\t\t\tresource: props.data,\n\t\t\tresourceType: locale.baseText('generic.credential').toLocaleLowerCase(),\n\t\t},\n\t});\n}\n</script>\n\n<template>\n\t<n8n-card :class=\"$style.cardLink\" @click=\"onClick\">\n\t\t<template #prepend>\n\t\t\t<CredentialIcon :credential-type-name=\"credentialType?.name ?? ''\" />\n\t\t</template>\n\t\t<template #header>\n\t\t\t<n8n-heading tag=\"h2\" bold :class=\"$style.cardHeading\">\n\t\t\t\t{{ data.name }}\n\t\t\t</n8n-heading>\n\t\t</template>\n\t\t<div :class=\"$style.cardDescription\">\n\t\t\t<n8n-text color=\"text-light\" size=\"small\">\n\t\t\t\t<span v-if=\"credentialType\">{{ credentialType.displayName }} | </span>\n\t\t\t\t<span v-show=\"data\"\n\t\t\t\t\t>{{ $locale.baseText('credentials.item.updated') }} <TimeAgo :date=\"data.updatedAt\" /> |\n\t\t\t\t</span>\n\t\t\t\t<span v-show=\"data\"\n\t\t\t\t\t>{{ $locale.baseText('credentials.item.created') }} {{ formattedCreatedAtDate }}\n\t\t\t\t</span>\n\t\t\t</n8n-text>\n\t\t</div>\n\t\t<template #append>\n\t\t\t<div :class=\"$style.cardActions\" @click.stop>\n\t\t\t\t<ProjectCardBadge :resource=\"data\" :personal-project=\"projectsStore.personalProject\" />\n\t\t\t\t<n8n-action-toggle\n\t\t\t\t\tdata-test-id=\"credential-card-actions\"\n\t\t\t\t\t:actions=\"actions\"\n\t\t\t\t\ttheme=\"dark\"\n\t\t\t\t\t@action=\"onAction\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</template>\n\t</n8n-card>\n</template>\n\n<style lang=\"scss\" module>\n.cardLink {\n\ttransition: box-shadow 0.3s ease;\n\tcursor: pointer;\n\tpadding: 0 0 0 var(--spacing-s);\n\talign-items: stretch;\n\n\t&:hover {\n\t\tbox-shadow: 0 2px 8px rgba(#441c17, 0.1);\n\t}\n}\n\n.cardHeading {\n\tfont-size: var(--font-size-s);\n\tpadding: var(--spacing-s) 0 0;\n\n\tspan {\n\t\tcolor: var(--color-text-light);\n\t}\n}\n\n.cardDescription {\n\tmin-height: 19px;\n\tdisplay: flex;\n\talign-items: center;\n\tpadding: 0 0 var(--spacing-s);\n}\n\n.cardActions {\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\talign-items: center;\n\talign-self: stretch;\n\tpadding: 0 var(--spacing-s) 0 0;\n\tcursor: default;\n}\n</style>\n","<template>\n\t<ResourcesListLayout\n\t\tref=\"layout\"\n\t\tresource-key=\"credentials\"\n\t\t:resources=\"allCredentials\"\n\t\t:initialize=\"initialize\"\n\t\t:filters=\"filters\"\n\t\t:additional-filters-handler=\"onFilter\"\n\t\t:type-props=\"{ itemSize: 77 }\"\n\t\t@click:add=\"addCredential\"\n\t\t@update:filters=\"filters = $event\"\n\t>\n\t\t<template #header>\n\t\t\t<ProjectTabs />\n\t\t</template>\n\t\t<template #add-button=\"{ disabled }\">\n\t\t\t<div>\n\t\t\t\t<n8n-button\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\tblock\n\t\t\t\t\t:disabled=\"disabled\"\n\t\t\t\t\tdata-test-id=\"resources-list-add\"\n\t\t\t\t\t@click=\"addCredential\"\n\t\t\t\t>\n\t\t\t\t\t{{ addCredentialButtonText }}\n\t\t\t\t</n8n-button>\n\t\t\t</div>\n\t\t</template>\n\t\t<template #default=\"{ data }\">\n\t\t\t<CredentialCard data-test-id=\"resources-list-item\" class=\"mb-2xs\" :data=\"data\" />\n\t\t</template>\n\t\t<template #filters=\"{ setKeyValue }\">\n\t\t\t<div class=\"mb-s\">\n\t\t\t\t<n8n-input-label\n\t\t\t\t\t:label=\"$locale.baseText('credentials.filters.type')\"\n\t\t\t\t\t:bold=\"false\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tcolor=\"text-base\"\n\t\t\t\t\tclass=\"mb-3xs\"\n\t\t\t\t/>\n\t\t\t\t<n8n-select\n\t\t\t\t\tref=\"typeInput\"\n\t\t\t\t\t:model-value=\"filters.type\"\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\tmultiple\n\t\t\t\t\tfilterable\n\t\t\t\t\t:class=\"$style['type-input']\"\n\t\t\t\t\t@update:model-value=\"setKeyValue('type', $event)\"\n\t\t\t\t>\n\t\t\t\t\t<n8n-option\n\t\t\t\t\t\tv-for=\"credentialType in allCredentialTypes\"\n\t\t\t\t\t\t:key=\"credentialType.name\"\n\t\t\t\t\t\t:value=\"credentialType.name\"\n\t\t\t\t\t\t:label=\"credentialType.displayName\"\n\t\t\t\t\t/>\n\t\t\t\t</n8n-select>\n\t\t\t</div>\n\t\t</template>\n\t</ResourcesListLayout>\n</template>\n\n<script lang=\"ts\">\nimport type { ICredentialsResponse, ICredentialTypeMap } from '@/Interface';\nimport { defineComponent } from 'vue';\n\nimport type { IResource } from '@/components/layouts/ResourcesListLayout.vue';\nimport ResourcesListLayout from '@/components/layouts/ResourcesListLayout.vue';\nimport CredentialCard from '@/components/CredentialCard.vue';\nimport type { ICredentialType } from 'n8n-workflow';\nimport { CREDENTIAL_SELECT_MODAL_KEY, EnterpriseEditionFeature } from '@/constants';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useNodeTypesStore } from '@/stores/nodeTypes.store';\nimport { useCredentialsStore } from '@/stores/credentials.store';\nimport { useExternalSecretsStore } from '@/stores/externalSecrets.ee.store';\nimport { useSourceControlStore } from '@/stores/sourceControl.store';\nimport { useProjectsStore } from '@/stores/projects.store';\nimport ProjectTabs from '@/components/Projects/ProjectTabs.vue';\nimport useEnvironmentsStore from '@/stores/environments.ee.store';\nimport { useSettingsStore } from '@/stores/settings.store';\n\ntype IResourcesListLayoutInstance = InstanceType<typeof ResourcesListLayout>;\n\nexport default defineComponent({\n\tname: 'CredentialsView',\n\tcomponents: {\n\t\tResourcesListLayout,\n\t\tCredentialCard,\n\t\tProjectTabs,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tfilters: {\n\t\t\t\tsearch: '',\n\t\t\t\thomeProject: '',\n\t\t\t\ttype: '',\n\t\t\t},\n\t\t\tsourceControlStoreUnsubscribe: () => {},\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(\n\t\t\tuseCredentialsStore,\n\t\t\tuseNodeTypesStore,\n\t\t\tuseUIStore,\n\t\t\tuseSourceControlStore,\n\t\t\tuseExternalSecretsStore,\n\t\t\tuseProjectsStore,\n\t\t),\n\t\tallCredentials(): IResource[] {\n\t\t\treturn this.credentialsStore.allCredentials.map((credential) => ({\n\t\t\t\tid: credential.id,\n\t\t\t\tname: credential.name,\n\t\t\t\tvalue: '',\n\t\t\t\tupdatedAt: credential.updatedAt,\n\t\t\t\tcreatedAt: credential.createdAt,\n\t\t\t\thomeProject: credential.homeProject,\n\t\t\t\tscopes: credential.scopes,\n\t\t\t\ttype: credential.type,\n\t\t\t\tsharedWithProjects: credential.sharedWithProjects,\n\t\t\t}));\n\t\t},\n\t\tallCredentialTypes(): ICredentialType[] {\n\t\t\treturn this.credentialsStore.allCredentialTypes;\n\t\t},\n\t\tcredentialTypesById(): ICredentialTypeMap {\n\t\t\treturn this.credentialsStore.credentialTypesById;\n\t\t},\n\t\taddCredentialButtonText() {\n\t\t\treturn this.projectsStore.currentProject\n\t\t\t\t? this.$locale.baseText('credentials.project.add')\n\t\t\t\t: this.$locale.baseText('credentials.add');\n\t\t},\n\t},\n\twatch: {\n\t\t'filters.type'() {\n\t\t\tthis.sendFiltersTelemetry('type');\n\t\t},\n\t\t'$route.params.projectId'() {\n\t\t\tvoid this.initialize();\n\t\t},\n\t},\n\tmounted() {\n\t\tthis.sourceControlStoreUnsubscribe = this.sourceControlStore.$onAction(({ name, after }) => {\n\t\t\tif (name === 'pullWorkfolder' && after) {\n\t\t\t\tafter(() => {\n\t\t\t\t\tvoid this.initialize();\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t},\n\tbeforeUnmount() {\n\t\tthis.sourceControlStoreUnsubscribe();\n\t},\n\tmethods: {\n\t\taddCredential() {\n\t\t\tthis.uiStore.openModal(CREDENTIAL_SELECT_MODAL_KEY);\n\n\t\t\tthis.$telemetry.track('User clicked add cred button', {\n\t\t\t\tsource: 'Creds list',\n\t\t\t});\n\t\t},\n\t\tasync initialize() {\n\t\t\tconst isVarsEnabled = useSettingsStore().isEnterpriseFeatureEnabled(\n\t\t\t\tEnterpriseEditionFeature.Variables,\n\t\t\t);\n\n\t\t\tconst loadPromises = [\n\t\t\t\tthis.credentialsStore.fetchAllCredentials(\n\t\t\t\t\tthis.$route?.params?.projectId as string | undefined,\n\t\t\t\t),\n\t\t\t\tthis.credentialsStore.fetchCredentialTypes(false),\n\t\t\t\tthis.externalSecretsStore.fetchAllSecrets(),\n\t\t\t\tthis.nodeTypesStore.loadNodeTypesIfNotLoaded(),\n\t\t\t\tisVarsEnabled ? useEnvironmentsStore().fetchAllVariables() : Promise.resolve(), // for expression resolution\n\t\t\t];\n\n\t\t\tawait Promise.all(loadPromises);\n\t\t},\n\t\tonFilter(\n\t\t\tresource: ICredentialsResponse,\n\t\t\tfilters: { type: string[]; search: string },\n\t\t\tmatches: boolean,\n\t\t): boolean {\n\t\t\tif (filters.type.length > 0) {\n\t\t\t\tmatches = matches && filters.type.includes(resource.type);\n\t\t\t}\n\n\t\t\tif (filters.search) {\n\t\t\t\tconst searchString = filters.search.toLowerCase();\n\n\t\t\t\tmatches =\n\t\t\t\t\tmatches ||\n\t\t\t\t\t(this.credentialTypesById[resource.type] &&\n\t\t\t\t\t\tthis.credentialTypesById[resource.type].displayName\n\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t.includes(searchString));\n\t\t\t}\n\n\t\t\treturn matches;\n\t\t},\n\t\tsendFiltersTelemetry(source: string) {\n\t\t\t(this.$refs.layout as IResourcesListLayoutInstance).sendFiltersTelemetry(source);\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.type-input {\n\t--max-width: 265px;\n}\n\n.sidebarContainer ul {\n\tpadding: 0 !important;\n}\n</style>\n"],"names":["CREDENTIAL_LIST_ITEM_ACTIONS","props","__props","locale","useI18n","message","useMessage","uiStore","useUIStore","credentialsStore","useCredentialsStore","projectsStore","useProjectsStore","credentialType","computed","credentialPermissions","getCredentialPermissions","actions","items","formattedCreatedAtDate","currentYear","dateformat","onClick","onAction","action","deleteResource","moveResource","MODAL_CONFIRM","PROJECT_MOVE_RESOURCE_MODAL","_sfc_main","defineComponent","ResourcesListLayout","CredentialCard","ProjectTabs","mapStores","useNodeTypesStore","useSourceControlStore","useExternalSecretsStore","credential","name","after","CREDENTIAL_SELECT_MODAL_KEY","isVarsEnabled","useSettingsStore","EnterpriseEditionFeature","loadPromises","_b","_a","useEnvironmentsStore","resource","filters","matches","searchString","source","_component_ResourcesListLayout","_resolveComponent","_openBlock","_createBlock","initialize","_ctx","addCredential","_cache","$event","_createVNode","_component_ProjectTabs","_withCtx","disabled","_createElementVNode","_component_n8n_button","_createTextVNode","_toDisplayString","data","_component_CredentialCard","setKeyValue","$locale","_hoisted_1","_component_n8n_input_label","_component_n8n_select","_normalizeClass","_createElementBlock","_Fragment","_renderList","_component_n8n_option"],"mappings":"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"}
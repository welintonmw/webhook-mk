{"version":3,"file":"useExecutionDebugging-EHinBq_u.js","sources":["../../src/composables/useExecutionDebugging.ts"],"sourcesContent":["import { h, computed } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useI18n } from '@/composables/useI18n';\nimport { useMessage } from '@/composables/useMessage';\nimport { useToast } from '@/composables/useToast';\nimport {\n\tDEBUG_PAYWALL_MODAL_KEY,\n\tEnterpriseEditionFeature,\n\tMODAL_CONFIRM,\n\tVIEWS,\n} from '@/constants';\nimport type { INodeUi } from '@/Interface';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useTelemetry } from './useTelemetry';\nimport { useRootStore } from '@/stores/root.store';\nimport { isFullExecutionResponse } from '@/utils/typeGuards';\n\nexport const useExecutionDebugging = () => {\n\tconst telemetry = useTelemetry();\n\n\tconst router = useRouter();\n\tconst i18n = useI18n();\n\tconst message = useMessage();\n\tconst toast = useToast();\n\tconst workflowsStore = useWorkflowsStore();\n\tconst settingsStore = useSettingsStore();\n\tconst uiStore = useUIStore();\n\n\tconst isDebugEnabled = computed(() =>\n\t\tsettingsStore.isEnterpriseFeatureEnabled(EnterpriseEditionFeature.DebugInEditor),\n\t);\n\n\tconst applyExecutionData = async (executionId: string): Promise<void> => {\n\t\tconst execution = await workflowsStore.getExecution(executionId);\n\t\tconst workflow = workflowsStore.getCurrentWorkflow();\n\t\tconst workflowNodes = workflowsStore.getNodes();\n\n\t\tif (!execution?.data?.resultData) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { runData } = execution.data.resultData;\n\n\t\tconst executionNodeNames = Object.keys(runData);\n\t\tconst missingNodeNames = executionNodeNames.filter(\n\t\t\t(name) => !workflowNodes.some((node) => node.name === name),\n\t\t);\n\n\t\t// Using the pinned data of the workflow to check if the node is pinned\n\t\t// because workflowsStore.getCurrentWorkflow() returns a cached workflow without the updated pinned data\n\t\tconst workflowPinnedNodeNames = Object.keys(workflowsStore.workflow.pinData ?? {});\n\t\tconst matchingPinnedNodeNames = executionNodeNames.filter((name) =>\n\t\t\tworkflowPinnedNodeNames.includes(name),\n\t\t);\n\n\t\tif (matchingPinnedNodeNames.length > 0) {\n\t\t\tconst confirmMessage = h('p', [\n\t\t\t\ti18n.baseText('nodeView.confirmMessage.debug.message'),\n\t\t\t\th(\n\t\t\t\t\t'ul',\n\t\t\t\t\t{ class: 'mt-l ml-l' },\n\t\t\t\t\tmatchingPinnedNodeNames.map((name) => h('li', name)),\n\t\t\t\t),\n\t\t\t]);\n\n\t\t\tconst overWritePinnedDataConfirm = await message.confirm(\n\t\t\t\tconfirmMessage,\n\t\t\t\ti18n.baseText('nodeView.confirmMessage.debug.headline'),\n\t\t\t\t{\n\t\t\t\t\ttype: 'warning',\n\t\t\t\t\tconfirmButtonText: i18n.baseText('nodeView.confirmMessage.debug.confirmButtonText'),\n\t\t\t\t\tcancelButtonText: i18n.baseText('nodeView.confirmMessage.debug.cancelButtonText'),\n\t\t\t\t\tdangerouslyUseHTMLString: true,\n\t\t\t\t\tcustomClass: 'matching-pinned-nodes-confirmation',\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tif (overWritePinnedDataConfirm === MODAL_CONFIRM) {\n\t\t\t\tmatchingPinnedNodeNames.forEach((name) => {\n\t\t\t\t\tconst node = workflowsStore.getNodeByName(name);\n\t\t\t\t\tif (node) {\n\t\t\t\t\t\tworkflowsStore.unpinData({ node });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tawait router.push({\n\t\t\t\t\tname: VIEWS.EXECUTION_PREVIEW,\n\t\t\t\t\tparams: { name: workflow.id, executionId },\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Set execution data\n\t\tworkflowsStore.setWorkflowExecutionData(execution);\n\n\t\t// Pin data of all nodes which do not have a parent node\n\t\tconst pinnableNodes = workflowNodes.filter(\n\t\t\t(node: INodeUi) => !workflow.getParentNodes(node.name).length,\n\t\t);\n\n\t\tlet pinnings = 0;\n\n\t\tpinnableNodes.forEach((node: INodeUi) => {\n\t\t\tconst nodeData = runData[node.name]?.[0].data?.main[0];\n\t\t\tif (nodeData) {\n\t\t\t\tpinnings++;\n\t\t\t\tworkflowsStore.pinData({\n\t\t\t\t\tnode,\n\t\t\t\t\tdata: nodeData,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\ttoast.showToast({\n\t\t\ttitle: i18n.baseText('nodeView.showMessage.debug.title'),\n\t\t\tmessage: i18n.baseText('nodeView.showMessage.debug.content'),\n\t\t\ttype: 'info',\n\t\t});\n\n\t\tif (missingNodeNames.length) {\n\t\t\ttoast.showToast({\n\t\t\t\ttitle: i18n.baseText('nodeView.showMessage.debug.missingNodes.title'),\n\t\t\t\tmessage: i18n.baseText('nodeView.showMessage.debug.missingNodes.content', {\n\t\t\t\t\tinterpolate: { nodeNames: missingNodeNames.join(', ') },\n\t\t\t\t}),\n\t\t\t\ttype: 'warning',\n\t\t\t});\n\t\t}\n\n\t\ttelemetry.track('User clicked debug execution button', {\n\t\t\tinstance_id: useRootStore().instanceId,\n\t\t\texec_status: isFullExecutionResponse(execution) ? execution.status : '',\n\t\t\toverride_pinned_data: pinnableNodes.length === pinnings,\n\t\t\tall_exec_data_imported: missingNodeNames.length === 0,\n\t\t});\n\t};\n\n\tconst handleDebugLinkClick = (event: Event): void => {\n\t\tif (!isDebugEnabled.value) {\n\t\t\tuiStore.openModalWithData({\n\t\t\t\tname: DEBUG_PAYWALL_MODAL_KEY,\n\t\t\t\tdata: {\n\t\t\t\t\ttitle: i18n.baseText(uiStore.contextBasedTranslationKeys.feature.unavailable.title),\n\t\t\t\t\tfooterButtonAction: () => {\n\t\t\t\t\t\tuiStore.closeModal(DEBUG_PAYWALL_MODAL_KEY);\n\t\t\t\t\t\tvoid uiStore.goToUpgrade('debug', 'upgrade-debug');\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\treturn;\n\t\t}\n\t\tworkflowsStore.isInDebugMode = false;\n\t};\n\n\treturn {\n\t\tapplyExecutionData,\n\t\thandleDebugLinkClick,\n\t};\n};\n"],"names":["useExecutionDebugging","telemetry","useTelemetry","router","useRouter","i18n","useI18n","message","useMessage","toast","useToast","workflowsStore","useWorkflowsStore","settingsStore","useSettingsStore","uiStore","useUIStore","isDebugEnabled","computed","EnterpriseEditionFeature","executionId","execution","workflow","workflowNodes","_a","runData","executionNodeNames","missingNodeNames","name","node","workflowPinnedNodeNames","matchingPinnedNodeNames","confirmMessage","h","MODAL_CONFIRM","VIEWS","pinnableNodes","pinnings","nodeData","_b","useRootStore","isFullExecutionResponse","event","DEBUG_PAYWALL_MODAL_KEY"],"mappings":"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"}
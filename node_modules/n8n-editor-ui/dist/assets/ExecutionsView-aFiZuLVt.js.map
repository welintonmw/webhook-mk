{"version":3,"file":"ExecutionsView-aFiZuLVt.js","sources":["../../src/components/executions/global/GlobalExecutionsListItem.vue","../../src/components/executions/global/GlobalExecutionsList.vue","../../src/views/ExecutionsView.vue"],"sourcesContent":["<script lang=\"ts\" setup>\nimport { ref, computed, useCssModule } from 'vue';\nimport type { ExecutionSummary } from 'n8n-workflow';\nimport { useI18n } from '@/composables/useI18n';\nimport { VIEWS, WAIT_TIME_UNLIMITED } from '@/constants';\nimport { useRouter } from 'vue-router';\nimport { convertToDisplayDate } from '@/utils/formatters/dateFormatter';\nimport { i18n as locale } from '@/plugins/i18n';\nimport ExecutionsTime from '@/components/executions/ExecutionsTime.vue';\nimport { useExecutionHelpers } from '@/composables/useExecutionHelpers';\n\nconst emit = defineEmits(['stop', 'select', 'retrySaved', 'retryOriginal', 'delete']);\n\nconst props = withDefaults(\n\tdefineProps<{\n\t\texecution: ExecutionSummary;\n\t\tselected?: boolean;\n\t\tworkflowName?: string;\n\t}>(),\n\t{\n\t\tselected: false,\n\t},\n);\n\nconst style = useCssModule();\nconst i18n = useI18n();\nconst router = useRouter();\nconst executionHelpers = useExecutionHelpers();\n\nconst isStopping = ref(false);\n\nconst isRunning = computed(() => {\n\treturn props.execution.status === 'running';\n});\n\nconst isWaitTillIndefinite = computed(() => {\n\tif (!props.execution.waitTill) {\n\t\treturn false;\n\t}\n\n\treturn new Date(props.execution.waitTill).toISOString() === WAIT_TIME_UNLIMITED;\n});\n\nconst isRetriable = computed(() => executionHelpers.isExecutionRetriable(props.execution));\n\nconst classes = computed(() => {\n\treturn {\n\t\t[style.executionListItem]: true,\n\t\t[style[props.execution.status]]: true,\n\t};\n});\n\nconst formattedStartedAtDate = computed(() => {\n\treturn props.execution.startedAt ? formatDate(props.execution.startedAt) : '';\n});\n\nconst formattedWaitTillDate = computed(() => {\n\treturn props.execution.waitTill ? formatDate(props.execution.waitTill) : '';\n});\n\nconst formattedStoppedAtDate = computed(() => {\n\treturn props.execution.stoppedAt\n\t\t? i18n.displayTimer(\n\t\t\t\tnew Date(props.execution.stoppedAt).getTime() -\n\t\t\t\t\tnew Date(props.execution.startedAt).getTime(),\n\t\t\t\ttrue,\n\t\t\t)\n\t\t: '';\n});\n\nconst statusTooltipText = computed(() => {\n\tif (props.execution.status === 'waiting' && isWaitTillIndefinite.value) {\n\t\treturn i18n.baseText('executionsList.statusTooltipText.theWorkflowIsWaitingIndefinitely');\n\t}\n\treturn '';\n});\n\nconst statusText = computed(() => {\n\tswitch (props.execution.status) {\n\t\tcase 'waiting':\n\t\t\treturn i18n.baseText('executionsList.waiting');\n\t\tcase 'canceled':\n\t\t\treturn i18n.baseText('executionsList.canceled');\n\t\tcase 'crashed':\n\t\t\treturn i18n.baseText('executionsList.error');\n\t\tcase 'new':\n\t\t\treturn i18n.baseText('executionsList.running');\n\t\tcase 'running':\n\t\t\treturn i18n.baseText('executionsList.running');\n\t\tcase 'success':\n\t\t\treturn i18n.baseText('executionsList.succeeded');\n\t\tcase 'error':\n\t\t\treturn i18n.baseText('executionsList.error');\n\t\tdefault:\n\t\t\treturn i18n.baseText('executionsList.unknown');\n\t}\n});\n\nconst statusTextTranslationPath = computed(() => {\n\tswitch (props.execution.status) {\n\t\tcase 'waiting':\n\t\t\treturn 'executionsList.statusWaiting';\n\t\tcase 'canceled':\n\t\t\treturn 'executionsList.statusCanceled';\n\t\tcase 'crashed':\n\t\tcase 'error':\n\t\tcase 'success':\n\t\t\tif (!props.execution.stoppedAt) {\n\t\t\t\treturn 'executionsList.statusTextWithoutTime';\n\t\t\t} else {\n\t\t\t\treturn 'executionsList.statusText';\n\t\t\t}\n\t\tcase 'new':\n\t\t\treturn 'executionsList.statusRunning';\n\t\tcase 'running':\n\t\t\treturn 'executionsList.statusRunning';\n\t\tdefault:\n\t\t\treturn 'executionsList.statusUnknown';\n\t}\n});\n\nfunction formatDate(fullDate: Date | string | number) {\n\tconst { date, time } = convertToDisplayDate(fullDate);\n\treturn locale.baseText('executionsList.started', { interpolate: { time, date } });\n}\n\nfunction displayExecution() {\n\tconst route = router.resolve({\n\t\tname: VIEWS.EXECUTION_PREVIEW,\n\t\tparams: { name: props.execution.workflowId, executionId: props.execution.id },\n\t});\n\twindow.open(route.href, '_blank');\n}\n\nfunction onStopExecution() {\n\tisStopping.value = true;\n\temit('stop', props.execution);\n}\n\nfunction onSelect() {\n\temit('select', props.execution);\n}\n\nasync function handleActionItemClick(commandData: 'retrySaved' | 'retryOriginal' | 'delete') {\n\temit(commandData, props.execution);\n}\n</script>\n<template>\n\t<tr :class=\"classes\">\n\t\t<td>\n\t\t\t<ElCheckbox\n\t\t\t\tv-if=\"!!execution.stoppedAt && execution.id\"\n\t\t\t\t:model-value=\"selected\"\n\t\t\t\tlabel=\"\"\n\t\t\t\tdata-test-id=\"select-execution-checkbox\"\n\t\t\t\t@update:model-value=\"onSelect\"\n\t\t\t/>\n\t\t</td>\n\t\t<td>\n\t\t\t<span :class=\"$style.link\" @click.stop=\"displayExecution\">\n\t\t\t\t{{ execution.workflowName || workflowName }}\n\t\t\t</span>\n\t\t</td>\n\t\t<td>\n\t\t\t<span>{{ formattedStartedAtDate }}</span>\n\t\t</td>\n\t\t<td>\n\t\t\t<div :class=\"$style.statusColumn\">\n\t\t\t\t<span v-if=\"isRunning\" :class=\"$style.spinner\">\n\t\t\t\t\t<FontAwesomeIcon icon=\"spinner\" spin />\n\t\t\t\t</span>\n\t\t\t\t<i18n-t\n\t\t\t\t\tv-if=\"!isWaitTillIndefinite\"\n\t\t\t\t\tdata-test-id=\"execution-status\"\n\t\t\t\t\ttag=\"span\"\n\t\t\t\t\t:keypath=\"statusTextTranslationPath\"\n\t\t\t\t>\n\t\t\t\t\t<template #status>\n\t\t\t\t\t\t<span :class=\"$style.status\">{{ statusText }}</span>\n\t\t\t\t\t</template>\n\t\t\t\t\t<template #time>\n\t\t\t\t\t\t<span v-if=\"execution.waitTill\">{{ formattedWaitTillDate }}</span>\n\t\t\t\t\t\t<span v-else-if=\"!!execution.stoppedAt\">\n\t\t\t\t\t\t\t{{ formattedStoppedAtDate }}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<ExecutionsTime v-else :start-time=\"execution.startedAt\" />\n\t\t\t\t\t</template>\n\t\t\t\t</i18n-t>\n\t\t\t\t<N8nTooltip v-else placement=\"top\">\n\t\t\t\t\t<template #content>\n\t\t\t\t\t\t<span>{{ statusTooltipText }}</span>\n\t\t\t\t\t</template>\n\t\t\t\t\t<span :class=\"$style.status\">{{ statusText }}</span>\n\t\t\t\t</N8nTooltip>\n\t\t\t</div>\n\t\t</td>\n\t\t<td>\n\t\t\t<span v-if=\"execution.id\">#{{ execution.id }}</span>\n\t\t\t<span v-if=\"execution.retryOf\">\n\t\t\t\t<br />\n\t\t\t\t<small> ({{ i18n.baseText('executionsList.retryOf') }} #{{ execution.retryOf }}) </small>\n\t\t\t</span>\n\t\t\t<span v-else-if=\"execution.retrySuccessId\">\n\t\t\t\t<br />\n\t\t\t\t<small>\n\t\t\t\t\t({{ i18n.baseText('executionsList.successRetry') }} #{{ execution.retrySuccessId }})\n\t\t\t\t</small>\n\t\t\t</span>\n\t\t</td>\n\t\t<td>\n\t\t\t<N8nTooltip v-if=\"execution.mode === 'manual'\" placement=\"top\">\n\t\t\t\t<template #content>\n\t\t\t\t\t<span>{{ i18n.baseText('executionsList.test') }}</span>\n\t\t\t\t</template>\n\t\t\t\t<FontAwesomeIcon icon=\"flask\" />\n\t\t\t</N8nTooltip>\n\t\t</td>\n\t\t<td>\n\t\t\t<div :class=\"$style.buttonCell\">\n\t\t\t\t<N8nButton\n\t\t\t\t\tv-if=\"!!execution.stoppedAt && execution.id\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\toutline\n\t\t\t\t\t:label=\"i18n.baseText('executionsList.view')\"\n\t\t\t\t\t@click.stop=\"displayExecution\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</td>\n\t\t<td>\n\t\t\t<div :class=\"$style.buttonCell\">\n\t\t\t\t<N8nButton\n\t\t\t\t\tv-if=\"!execution.stoppedAt || execution.waitTill\"\n\t\t\t\t\tdata-test-id=\"stop-execution-button\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\toutline\n\t\t\t\t\t:label=\"i18n.baseText('executionsList.stop')\"\n\t\t\t\t\t:loading=\"isStopping\"\n\t\t\t\t\t@click.stop=\"onStopExecution\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</td>\n\t\t<td>\n\t\t\t<ElDropdown v-if=\"!isRunning\" trigger=\"click\" @command=\"handleActionItemClick\">\n\t\t\t\t<N8nIconButton text type=\"tertiary\" size=\"mini\" icon=\"ellipsis-v\" />\n\t\t\t\t<template #dropdown>\n\t\t\t\t\t<ElDropdownMenu\n\t\t\t\t\t\t:class=\"{\n\t\t\t\t\t\t\t[$style.actions]: true,\n\t\t\t\t\t\t\t[$style.deleteOnly]: !isRetriable,\n\t\t\t\t\t\t}\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<ElDropdownItem\n\t\t\t\t\t\t\tv-if=\"isRetriable\"\n\t\t\t\t\t\t\tdata-test-id=\"execution-retry-saved-dropdown-item\"\n\t\t\t\t\t\t\t:class=\"$style.retryAction\"\n\t\t\t\t\t\t\tcommand=\"retrySaved\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ i18n.baseText('executionsList.retryWithCurrentlySavedWorkflow') }}\n\t\t\t\t\t\t</ElDropdownItem>\n\t\t\t\t\t\t<ElDropdownItem\n\t\t\t\t\t\t\tv-if=\"isRetriable\"\n\t\t\t\t\t\t\tdata-test-id=\"execution-retry-original-dropdown-item\"\n\t\t\t\t\t\t\t:class=\"$style.retryAction\"\n\t\t\t\t\t\t\tcommand=\"retryOriginal\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ i18n.baseText('executionsList.retryWithOriginalWorkflow') }}\n\t\t\t\t\t\t</ElDropdownItem>\n\t\t\t\t\t\t<ElDropdownItem\n\t\t\t\t\t\t\tdata-test-id=\"execution-delete-dropdown-item\"\n\t\t\t\t\t\t\t:class=\"$style.deleteAction\"\n\t\t\t\t\t\t\tcommand=\"delete\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ i18n.baseText('generic.delete') }}\n\t\t\t\t\t\t</ElDropdownItem>\n\t\t\t\t\t</ElDropdownMenu>\n\t\t\t\t</template>\n\t\t\t</ElDropdown>\n\t\t</td>\n\t</tr>\n</template>\n\n<style lang=\"scss\" module>\n@import '@/styles/variables';\n\n.executionListItem {\n\t--execution-list-item-background: var(--color-table-row-background);\n\t--execution-list-item-highlight-background: var(--color-table-row-highlight-background);\n\tcolor: var(--color-text-base);\n\n\ttd {\n\t\tbackground: var(--execution-list-item-background);\n\t}\n\n\t&:nth-child(even) td {\n\t\t--execution-list-item-background: var(--color-table-row-even-background);\n\t}\n\n\t&:hover td {\n\t\tbackground: var(--color-table-row-hover-background);\n\t}\n\n\ttd:first-child {\n\t\twidth: 30px;\n\t\tpadding: 0 var(--spacing-s) 0 0;\n\n\t\t/*\n\t\t\tThis is needed instead of table cell border because they are overlapping the sticky header\n\t\t*/\n\t\t&::before {\n\t\t\tcontent: '';\n\t\t\tdisplay: inline-block;\n\t\t\twidth: var(--spacing-4xs);\n\t\t\theight: 100%;\n\t\t\tvertical-align: middle;\n\t\t\tmargin-right: var(--spacing-xs);\n\t\t}\n\t}\n\n\t&.crashed td:first-child::before,\n\t&.error td:first-child::before {\n\t\tbackground: var(--execution-card-border-error);\n\t}\n\n\t&.success td:first-child::before {\n\t\tbackground: var(--execution-card-border-success);\n\t}\n\n\t&.new td:first-child::before,\n\t&.running td:first-child::before {\n\t\tbackground: var(--execution-card-border-running);\n\t}\n\n\t&.waiting td:first-child::before {\n\t\tbackground: var(--execution-card-border-waiting);\n\t}\n\n\t&.unknown td:first-child::before {\n\t\tbackground: var(--execution-card-border-unknown);\n\t}\n}\n\n.link {\n\tcolor: var(--color-text-base);\n\ttext-decoration: underline;\n\tcursor: pointer;\n}\n\n.statusColumn {\n\tdisplay: flex;\n\talign-items: center;\n}\n\n.spinner {\n\tmargin-right: var(--spacing-2xs);\n}\n\n.status {\n\tline-height: 22.6px;\n\ttext-align: center;\n\tfont-size: var(--font-size-s);\n\tfont-weight: var(--font-weight-bold);\n\n\t.crashed &,\n\t.error & {\n\t\tcolor: var(--color-danger);\n\t}\n\n\t.waiting & {\n\t\tcolor: var(--color-secondary);\n\t}\n\n\t.success & {\n\t\tfont-weight: var(--font-weight-normal);\n\t}\n\n\t.new &,\n\t.running & {\n\t\tcolor: var(--color-warning);\n\t}\n\n\t.unknown & {\n\t\tcolor: var(--color-background-dark);\n\t}\n}\n\n.buttonCell {\n\toverflow: hidden;\n\n\tbutton {\n\t\ttransform: translateX(1000%);\n\t\ttransition: transform 0s;\n\n\t\t&:focus-visible,\n\t\t.executionListItem:hover & {\n\t\t\ttransform: translateX(0);\n\t\t}\n\t}\n}\n</style>\n","<script lang=\"ts\" setup>\nimport { watch, computed, ref, onMounted } from 'vue';\nimport ExecutionsFilter from '@/components/executions/ExecutionsFilter.vue';\nimport GlobalExecutionsListItem from '@/components/executions/global/GlobalExecutionsListItem.vue';\nimport { MODAL_CONFIRM } from '@/constants';\nimport { useToast } from '@/composables/useToast';\nimport { useMessage } from '@/composables/useMessage';\nimport { useI18n } from '@/composables/useI18n';\nimport { useTelemetry } from '@/composables/useTelemetry';\nimport type { ExecutionFilterType, IWorkflowDb } from '@/Interface';\nimport type { ExecutionSummary } from 'n8n-workflow';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { useExecutionsStore } from '@/stores/executions.store';\n\nconst props = withDefaults(\n\tdefineProps<{\n\t\texecutions: ExecutionSummary[];\n\t\tfilters: ExecutionFilterType;\n\t\ttotal: number;\n\t\testimated: boolean;\n\t}>(),\n\t{\n\t\ttotal: 0,\n\t\testimated: false,\n\t},\n);\n\nconst emit = defineEmits(['closeModal', 'execution:stop', 'update:autoRefresh', 'update:filters']);\n\nconst i18n = useI18n();\nconst telemetry = useTelemetry();\nconst workflowsStore = useWorkflowsStore();\nconst executionsStore = useExecutionsStore();\n\nconst isMounted = ref(false);\nconst allVisibleSelected = ref(false);\nconst allExistingSelected = ref(false);\nconst selectedItems = ref<Record<string, boolean>>({});\n\nconst message = useMessage();\nconst toast = useToast();\n\nconst selectedCount = computed(() => {\n\tif (allExistingSelected.value) {\n\t\treturn props.total;\n\t}\n\n\treturn Object.keys(selectedItems.value).length;\n});\n\nconst workflows = computed<IWorkflowDb[]>(() => {\n\treturn [\n\t\t{\n\t\t\tid: 'all',\n\t\t\tname: i18n.baseText('executionsList.allWorkflows'),\n\t\t} as IWorkflowDb,\n\t\t...workflowsStore.allWorkflows,\n\t];\n});\n\nwatch(\n\t() => props.executions,\n\t() => {\n\t\tif (props.executions.length === 0) {\n\t\t\thandleClearSelection();\n\t\t}\n\t\tadjustSelectionAfterMoreItemsLoaded();\n\t},\n);\n\nonMounted(() => {\n\tisMounted.value = true;\n});\n\nfunction handleCheckAllExistingChange() {\n\tallExistingSelected.value = !allExistingSelected.value;\n\tallVisibleSelected.value = !allExistingSelected.value;\n\thandleCheckAllVisibleChange();\n}\n\nfunction handleCheckAllVisibleChange() {\n\tallVisibleSelected.value = !allVisibleSelected.value;\n\tif (!allVisibleSelected.value) {\n\t\tallExistingSelected.value = false;\n\t\tselectedItems.value = {};\n\t} else {\n\t\tselectAllVisibleExecutions();\n\t}\n}\n\nfunction toggleSelectExecution(execution: ExecutionSummary) {\n\tconst executionId = execution.id;\n\tif (selectedItems.value[executionId]) {\n\t\tconst { [executionId]: removedSelectedItem, ...rest } = selectedItems.value;\n\t\tselectedItems.value = rest;\n\t} else {\n\t\tselectedItems.value = {\n\t\t\t...selectedItems.value,\n\t\t\t[executionId]: true,\n\t\t};\n\t}\n\tallVisibleSelected.value = Object.keys(selectedItems.value).length === props.executions.length;\n\tallExistingSelected.value = Object.keys(selectedItems.value).length === props.total;\n}\n\nasync function handleDeleteSelected() {\n\tconst deleteExecutions = await message.confirm(\n\t\ti18n.baseText('executionsList.confirmMessage.message', {\n\t\t\tinterpolate: { count: selectedCount.value.toString() },\n\t\t}),\n\t\ti18n.baseText('executionsList.confirmMessage.headline'),\n\t\t{\n\t\t\ttype: 'warning',\n\t\t\tconfirmButtonText: i18n.baseText('executionsList.confirmMessage.confirmButtonText'),\n\t\t\tcancelButtonText: i18n.baseText('executionsList.confirmMessage.cancelButtonText'),\n\t\t},\n\t);\n\n\tif (deleteExecutions !== MODAL_CONFIRM) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tawait executionsStore.deleteExecutions({\n\t\t\tfilters: executionsStore.executionsFilters,\n\t\t\t...(allExistingSelected.value\n\t\t\t\t? { deleteBefore: props.executions[0].startedAt }\n\t\t\t\t: {\n\t\t\t\t\t\tids: Object.keys(selectedItems.value),\n\t\t\t\t\t}),\n\t\t});\n\t} catch (error) {\n\t\ttoast.showError(error, i18n.baseText('executionsList.showError.handleDeleteSelected.title'));\n\t\treturn;\n\t}\n\n\ttoast.showMessage({\n\t\ttitle: i18n.baseText('executionsList.showMessage.handleDeleteSelected.title'),\n\t\ttype: 'success',\n\t});\n\n\thandleClearSelection();\n}\n\nfunction handleClearSelection() {\n\tallVisibleSelected.value = false;\n\tallExistingSelected.value = false;\n\tselectedItems.value = {};\n}\n\nasync function onFilterChanged(filters: ExecutionFilterType) {\n\temit('update:filters', filters);\n\thandleClearSelection();\n}\n\nfunction getExecutionWorkflowName(execution: ExecutionSummary): string {\n\treturn (\n\t\tgetWorkflowName(execution.workflowId ?? '') ?? i18n.baseText('executionsList.unsavedWorkflow')\n\t);\n}\n\nfunction getWorkflowName(workflowId: string): string | undefined {\n\treturn workflows.value.find((data: IWorkflowDb) => data.id === workflowId)?.name;\n}\n\nasync function loadMore() {\n\tif (executionsStore.filters.status === 'running') {\n\t\treturn;\n\t}\n\n\tlet lastId: string | undefined;\n\tif (props.executions.length !== 0) {\n\t\tconst lastItem = props.executions.slice(-1)[0];\n\t\tlastId = lastItem.id;\n\t}\n\n\ttry {\n\t\tawait executionsStore.fetchExecutions(executionsStore.executionsFilters, lastId);\n\t} catch (error) {\n\t\ttoast.showError(error, i18n.baseText('executionsList.showError.loadMore.title'));\n\t}\n}\n\nfunction selectAllVisibleExecutions() {\n\tprops.executions.forEach((execution: ExecutionSummary) => {\n\t\tselectedItems.value[execution.id] = true;\n\t});\n}\n\nfunction adjustSelectionAfterMoreItemsLoaded() {\n\tif (allExistingSelected.value) {\n\t\tallVisibleSelected.value = true;\n\t\tselectAllVisibleExecutions();\n\t}\n}\n\nasync function retrySavedExecution(execution: ExecutionSummary) {\n\tawait retryExecution(execution, true);\n}\n\nasync function retryOriginalExecution(execution: ExecutionSummary) {\n\tawait retryExecution(execution, false);\n}\n\nasync function retryExecution(execution: ExecutionSummary, loadWorkflow?: boolean) {\n\ttry {\n\t\tconst retrySuccessful = await executionsStore.retryExecution(execution.id, loadWorkflow);\n\n\t\tif (retrySuccessful) {\n\t\t\ttoast.showMessage({\n\t\t\t\ttitle: i18n.baseText('executionsList.showMessage.retrySuccessfulTrue.title'),\n\t\t\t\ttype: 'success',\n\t\t\t});\n\t\t} else {\n\t\t\ttoast.showMessage({\n\t\t\t\ttitle: i18n.baseText('executionsList.showMessage.retrySuccessfulFalse.title'),\n\t\t\t\ttype: 'error',\n\t\t\t});\n\t\t}\n\t} catch (error) {\n\t\ttoast.showError(error, i18n.baseText('executionsList.showError.retryExecution.title'));\n\t}\n\n\ttelemetry.track('User clicked retry execution button', {\n\t\tworkflow_id: workflowsStore.workflowId,\n\t\texecution_id: execution.id,\n\t\tretry_type: loadWorkflow ? 'current' : 'original',\n\t});\n}\n\nasync function stopExecution(execution: ExecutionSummary) {\n\ttry {\n\t\tawait executionsStore.stopCurrentExecution(execution.id);\n\n\t\ttoast.showMessage({\n\t\t\ttitle: i18n.baseText('executionsList.showMessage.stopExecution.title'),\n\t\t\tmessage: i18n.baseText('executionsList.showMessage.stopExecution.message', {\n\t\t\t\tinterpolate: { activeExecutionId: execution.id },\n\t\t\t}),\n\t\t\ttype: 'success',\n\t\t});\n\n\t\temit('execution:stop');\n\t} catch (error) {\n\t\ttoast.showError(error, i18n.baseText('executionsList.showError.stopExecution.title'));\n\t}\n}\n\nasync function deleteExecution(execution: ExecutionSummary) {\n\ttry {\n\t\tawait executionsStore.deleteExecutions({ ids: [execution.id] });\n\n\t\tif (allVisibleSelected.value) {\n\t\t\tconst { [execution.id]: _, ...rest } = selectedItems.value;\n\t\t\tselectedItems.value = rest;\n\t\t}\n\t} catch (error) {\n\t\ttoast.showError(error, i18n.baseText('executionsList.showError.handleDeleteSelected.title'));\n\t}\n}\n\nasync function onAutoRefreshToggle(value: boolean) {\n\tif (value) {\n\t\tawait executionsStore.startAutoRefreshInterval();\n\t} else {\n\t\texecutionsStore.stopAutoRefreshInterval();\n\t}\n}\n</script>\n\n<template>\n\t<div :class=\"$style.execListWrapper\">\n\t\t<div :class=\"$style.execList\">\n\t\t\t<div :class=\"$style.execListHeader\">\n\t\t\t\t<N8nHeading tag=\"h1\" size=\"2xlarge\">\n\t\t\t\t\t{{ i18n.baseText('executionsList.workflowExecutions') }}\n\t\t\t\t</N8nHeading>\n\t\t\t\t<div :class=\"$style.execListHeaderControls\">\n\t\t\t\t\t<N8nLoading v-if=\"!isMounted\" :class=\"$style.filterLoader\" variant=\"custom\" />\n\t\t\t\t\t<ElCheckbox\n\t\t\t\t\t\tv-else\n\t\t\t\t\t\tv-model=\"executionsStore.autoRefresh\"\n\t\t\t\t\t\tclass=\"mr-xl\"\n\t\t\t\t\t\tdata-test-id=\"execution-auto-refresh-checkbox\"\n\t\t\t\t\t\t@update:model-value=\"onAutoRefreshToggle($event)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ i18n.baseText('executionsList.autoRefresh') }}\n\t\t\t\t\t</ElCheckbox>\n\t\t\t\t\t<ExecutionsFilter\n\t\t\t\t\t\tv-show=\"isMounted\"\n\t\t\t\t\t\t:workflows=\"workflows\"\n\t\t\t\t\t\t@filter-changed=\"onFilterChanged\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<ElCheckbox\n\t\t\t\tv-if=\"allVisibleSelected && total > 0\"\n\t\t\t\t:class=\"$style.selectAll\"\n\t\t\t\t:label=\"\n\t\t\t\t\ti18n.baseText('executionsList.selectAll', {\n\t\t\t\t\t\tadjustToNumber: total,\n\t\t\t\t\t\tinterpolate: { executionNum: `${total}` },\n\t\t\t\t\t})\n\t\t\t\t\"\n\t\t\t\t:model-value=\"allExistingSelected\"\n\t\t\t\tdata-test-id=\"select-all-executions-checkbox\"\n\t\t\t\t@update:model-value=\"handleCheckAllExistingChange\"\n\t\t\t/>\n\n\t\t\t<div v-if=\"!isMounted\">\n\t\t\t\t<N8nLoading :class=\"$style.tableLoader\" variant=\"custom\" />\n\t\t\t\t<N8nLoading :class=\"$style.tableLoader\" variant=\"custom\" />\n\t\t\t\t<N8nLoading :class=\"$style.tableLoader\" variant=\"custom\" />\n\t\t\t</div>\n\t\t\t<table v-else :class=\"$style.execTable\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t<el-checkbox\n\t\t\t\t\t\t\t\t:model-value=\"allVisibleSelected\"\n\t\t\t\t\t\t\t\t:disabled=\"total < 1\"\n\t\t\t\t\t\t\t\tlabel=\"\"\n\t\t\t\t\t\t\t\tdata-test-id=\"select-visible-executions-checkbox\"\n\t\t\t\t\t\t\t\t@update:model-value=\"handleCheckAllVisibleChange\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th>{{ i18n.baseText('executionsList.name') }}</th>\n\t\t\t\t\t\t<th>{{ i18n.baseText('executionsList.startedAt') }}</th>\n\t\t\t\t\t\t<th>{{ i18n.baseText('executionsList.status') }}</th>\n\t\t\t\t\t\t<th>{{ i18n.baseText('executionsList.id') }}</th>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<TransitionGroup tag=\"tbody\" name=\"executions-list\">\n\t\t\t\t\t<GlobalExecutionsListItem\n\t\t\t\t\t\tv-for=\"execution in executions\"\n\t\t\t\t\t\t:key=\"execution.id\"\n\t\t\t\t\t\t:execution=\"execution\"\n\t\t\t\t\t\t:workflow-name=\"getExecutionWorkflowName(execution)\"\n\t\t\t\t\t\t:selected=\"selectedItems[execution.id] || allExistingSelected\"\n\t\t\t\t\t\t@stop=\"stopExecution\"\n\t\t\t\t\t\t@delete=\"deleteExecution\"\n\t\t\t\t\t\t@select=\"toggleSelectExecution\"\n\t\t\t\t\t\t@retry-saved=\"retrySavedExecution\"\n\t\t\t\t\t\t@retry-original=\"retryOriginalExecution\"\n\t\t\t\t\t/>\n\t\t\t\t</TransitionGroup>\n\t\t\t</table>\n\n\t\t\t<div\n\t\t\t\tv-if=\"!executions.length && isMounted && !executionsStore.loading\"\n\t\t\t\t:class=\"$style.loadedAll\"\n\t\t\t\tdata-test-id=\"execution-list-empty\"\n\t\t\t>\n\t\t\t\t{{ i18n.baseText('executionsList.empty') }}\n\t\t\t</div>\n\t\t\t<div v-else-if=\"total > executions.length || estimated\" :class=\"$style.loadMore\">\n\t\t\t\t<N8nButton\n\t\t\t\t\ticon=\"sync\"\n\t\t\t\t\t:title=\"i18n.baseText('executionsList.loadMore')\"\n\t\t\t\t\t:label=\"i18n.baseText('executionsList.loadMore')\"\n\t\t\t\t\t:loading=\"executionsStore.loading\"\n\t\t\t\t\tdata-test-id=\"load-more-button\"\n\t\t\t\t\t@click=\"loadMore()\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tv-else-if=\"isMounted && !executionsStore.loading\"\n\t\t\t\t:class=\"$style.loadedAll\"\n\t\t\t\tdata-test-id=\"execution-all-loaded\"\n\t\t\t>\n\t\t\t\t{{ i18n.baseText('executionsList.loadedAll') }}\n\t\t\t</div>\n\t\t</div>\n\t\t<div\n\t\t\tv-if=\"selectedCount > 0\"\n\t\t\t:class=\"$style.selectionOptions\"\n\t\t\tdata-test-id=\"selected-executions-info\"\n\t\t>\n\t\t\t<span>\n\t\t\t\t{{\n\t\t\t\t\ti18n.baseText('executionsList.selected', {\n\t\t\t\t\t\tadjustToNumber: selectedCount,\n\t\t\t\t\t\tinterpolate: { count: `${selectedCount}` },\n\t\t\t\t\t})\n\t\t\t\t}}\n\t\t\t</span>\n\t\t\t<N8nButton\n\t\t\t\t:label=\"i18n.baseText('generic.delete')\"\n\t\t\t\ttype=\"tertiary\"\n\t\t\t\tdata-test-id=\"delete-selected-button\"\n\t\t\t\t@click=\"handleDeleteSelected\"\n\t\t\t/>\n\t\t\t<N8nButton\n\t\t\t\t:label=\"i18n.baseText('executionsList.clearSelection')\"\n\t\t\t\ttype=\"tertiary\"\n\t\t\t\tdata-test-id=\"clear-selection-button\"\n\t\t\t\t@click=\"handleClearSelection\"\n\t\t\t/>\n\t\t</div>\n\t</div>\n</template>\n\n<style module lang=\"scss\">\n.execListWrapper {\n\tdisplay: grid;\n\tgrid-template-rows: 1fr 0;\n\tposition: relative;\n\theight: 100%;\n\twidth: 100%;\n\tmax-width: 1280px;\n}\n\n.execList {\n\tposition: relative;\n\theight: 100%;\n\toverflow: auto;\n\tpadding: var(--spacing-l) var(--spacing-l) 0;\n\t@media (min-width: 1200px) {\n\t\tpadding: var(--spacing-2xl) var(--spacing-2xl) 0;\n\t}\n}\n\n.execListHeader {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tmargin-bottom: var(--spacing-s);\n}\n\n.execListHeaderControls {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: flex-end;\n}\n\n.selectionOptions {\n\tdisplay: flex;\n\talign-items: center;\n\tposition: absolute;\n\tpadding: var(--spacing-2xs);\n\tz-index: 2;\n\tleft: 50%;\n\ttransform: translateX(-50%);\n\tbottom: var(--spacing-3xl);\n\tbackground: var(--execution-selector-background);\n\tborder-radius: var(--border-radius-base);\n\tcolor: var(--execution-selector-text);\n\tfont-size: var(--font-size-2xs);\n\n\tbutton {\n\t\tmargin-left: var(--spacing-2xs);\n\t}\n}\n\n.execTable {\n\t/*\n\t  Table height needs to be set to 0 in order to use height 100% for elements in table cells\n\t*/\n\theight: 0;\n\twidth: 100%;\n\ttext-align: left;\n\tfont-size: var(--font-size-s);\n\n\tthead th {\n\t\tposition: sticky;\n\t\ttop: calc(var(--spacing-3xl) * -1);\n\t\tz-index: 2;\n\t\tpadding: var(--spacing-s) var(--spacing-s) var(--spacing-s) 0;\n\t\tbackground: var(--color-table-header-background);\n\n\t\t&:first-child {\n\t\t\tpadding-left: var(--spacing-s);\n\t\t}\n\t}\n\n\tth,\n\ttd {\n\t\theight: 100%;\n\t\tpadding: var(--spacing-s) var(--spacing-s) var(--spacing-s) 0;\n\n\t\t&:not(:first-child, :nth-last-child(-n + 3)) {\n\t\t\twidth: 100%;\n\t\t}\n\n\t\t&:nth-last-child(-n + 2) {\n\t\t\tpadding-left: 0;\n\t\t}\n\n\t\t@media (min-width: $breakpoint-sm) {\n\t\t\t&:not(:nth-child(2)) {\n\t\t\t\t&,\n\t\t\t\tdiv,\n\t\t\t\tspan {\n\t\t\t\t\twhite-space: nowrap;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n.loadMore {\n\tmargin: var(--spacing-m) 0;\n\twidth: 100%;\n\ttext-align: center;\n}\n\n.loadedAll {\n\ttext-align: center;\n\tfont-size: var(--font-size-s);\n\tcolor: var(--color-text-light);\n\tmargin: var(--spacing-l) 0;\n}\n\n.actions.deleteOnly {\n\tpadding: 0;\n}\n\n.retryAction + .deleteAction {\n\tborder-top: 1px solid var(--color-foreground-light);\n}\n\n.selectAll {\n\tdisplay: inline-block;\n\tmargin: 0 0 var(--spacing-s) var(--spacing-s);\n\tcolor: var(--execution-select-all-text);\n}\n\n.filterLoader {\n\twidth: 220px;\n\theight: 32px;\n}\n\n.tableLoader {\n\twidth: 100%;\n\theight: 48px;\n\tmargin-bottom: var(--spacing-2xs);\n}\n</style>\n","<script lang=\"ts\" setup>\nimport { onBeforeMount, onBeforeUnmount, onMounted, ref } from 'vue';\nimport GlobalExecutionsList from '@/components/executions/global/GlobalExecutionsList.vue';\nimport { setPageTitle } from '@/utils/htmlUtils';\nimport { useI18n } from '@/composables/useI18n';\nimport { useTelemetry } from '@/composables/useTelemetry';\nimport { useExternalHooks } from '@/composables/useExternalHooks';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { useExecutionsStore } from '@/stores/executions.store';\nimport { useToast } from '@/composables/useToast';\nimport { storeToRefs } from 'pinia';\nimport type { ExecutionFilterType } from '@/Interface';\n\nconst i18n = useI18n();\nconst telemetry = useTelemetry();\nconst externalHooks = useExternalHooks();\nconst workflowsStore = useWorkflowsStore();\nconst executionsStore = useExecutionsStore();\n\nconst toast = useToast();\n\nconst animationsEnabled = ref(false);\n\nconst { executionsCount, executionsCountEstimated, filters, allExecutions } =\n\tstoreToRefs(executionsStore);\n\nonBeforeMount(async () => {\n\tawait loadWorkflows();\n\n\tvoid externalHooks.run('executionsList.openDialog');\n\ttelemetry.track('User opened Executions log', {\n\t\tworkflow_id: workflowsStore.workflowId,\n\t});\n});\n\nonMounted(async () => {\n\tsetPageTitle(`n8n - ${i18n.baseText('executionsList.workflowExecutions')}`);\n\tdocument.addEventListener('visibilitychange', onDocumentVisibilityChange);\n\n\tawait executionsStore.initialize();\n});\n\nonBeforeUnmount(() => {\n\texecutionsStore.reset();\n\tdocument.removeEventListener('visibilitychange', onDocumentVisibilityChange);\n});\n\nasync function loadWorkflows() {\n\ttry {\n\t\tawait workflowsStore.fetchAllWorkflows();\n\t} catch (error) {\n\t\ttoast.showError(error, i18n.baseText('executionsList.showError.loadWorkflows.title'));\n\t}\n}\n\nfunction onDocumentVisibilityChange() {\n\tif (document.visibilityState === 'hidden') {\n\t\texecutionsStore.stopAutoRefreshInterval();\n\t} else {\n\t\tvoid executionsStore.startAutoRefreshInterval();\n\t}\n}\n\nasync function onRefreshData() {\n\ttry {\n\t\tawait executionsStore.fetchExecutions();\n\t} catch (error) {\n\t\ttoast.showError(error, i18n.baseText('executionsList.showError.refreshData.title'));\n\t}\n}\n\nasync function onUpdateFilters(newFilters: ExecutionFilterType) {\n\texecutionsStore.reset();\n\texecutionsStore.setFilters(newFilters);\n\tawait executionsStore.initialize();\n}\n\nasync function onExecutionStop() {\n\tawait onRefreshData();\n}\n</script>\n<template>\n\t<GlobalExecutionsList\n\t\t:executions=\"allExecutions\"\n\t\t:filters=\"filters\"\n\t\t:total=\"executionsCount\"\n\t\t:estimated-total=\"executionsCountEstimated\"\n\t\t@execution:stop=\"onExecutionStop\"\n\t\t@update:filters=\"onUpdateFilters\"\n\t/>\n</template>\n"],"names":["emit","__emit","props","__props","style","useCssModule","i18n","useI18n","router","useRouter","executionHelpers","useExecutionHelpers","isStopping","ref","isRunning","computed","isWaitTillIndefinite","WAIT_TIME_UNLIMITED","isRetriable","classes","formattedStartedAtDate","formatDate","formattedWaitTillDate","formattedStoppedAtDate","statusTooltipText","statusText","statusTextTranslationPath","fullDate","date","time","convertToDisplayDate","locale","displayExecution","route","VIEWS","onStopExecution","onSelect","handleActionItemClick","commandData","telemetry","useTelemetry","workflowsStore","useWorkflowsStore","executionsStore","useExecutionsStore","isMounted","allVisibleSelected","allExistingSelected","selectedItems","message","useMessage","toast","useToast","selectedCount","workflows","watch","handleClearSelection","adjustSelectionAfterMoreItemsLoaded","onMounted","handleCheckAllExistingChange","handleCheckAllVisibleChange","selectAllVisibleExecutions","toggleSelectExecution","execution","executionId","removedSelectedItem","rest","handleDeleteSelected","MODAL_CONFIRM","error","onFilterChanged","filters","getExecutionWorkflowName","getWorkflowName","workflowId","_a","data","loadMore","lastId","retrySavedExecution","retryExecution","retryOriginalExecution","loadWorkflow","stopExecution","deleteExecution","_","onAutoRefreshToggle","value","externalHooks","useExternalHooks","executionsCount","executionsCountEstimated","allExecutions","storeToRefs","onBeforeMount","loadWorkflows","setPageTitle","onDocumentVisibilityChange","onBeforeUnmount","onRefreshData","onUpdateFilters","newFilters","onExecutionStop"],"mappings":"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"}
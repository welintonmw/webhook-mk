{"version":3,"file":"TextWithHighlights-kUoC0rXY.js","sources":["../../src/components/TextWithHighlights.vue"],"sourcesContent":["<script lang=\"ts\" setup>\nimport type { GenericValue } from 'n8n-workflow';\nimport { computed } from 'vue';\n\nconst props = defineProps<{\n\tcontent: GenericValue;\n\tsearch?: string;\n}>();\n\nconst splitTextBySearch = (\n\ttext = '',\n\tsearch = '',\n): Array<{ tag: 'span' | 'mark'; content: string }> => {\n\tif (!search) {\n\t\treturn [\n\t\t\t{\n\t\t\t\ttag: 'span',\n\t\t\t\tcontent: text,\n\t\t\t},\n\t\t];\n\t}\n\n\tconst escapeRegExp = (s: string) => s.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n\tconst pattern = new RegExp(`(${escapeRegExp(search)})`, 'i');\n\tconst splitText = text.split(pattern);\n\n\treturn splitText.map((t) => ({ tag: pattern.test(t) ? 'mark' : 'span', content: t }));\n};\n\nconst parts = computed(() => {\n\treturn props.search && typeof props.content === 'string'\n\t\t? splitTextBySearch(props.content, props.search)\n\t\t: [];\n});\n</script>\n\n<template>\n\t<span v-if=\"parts.length && typeof props.content === 'string'\">\n\t\t<template v-for=\"(part, index) in parts\">\n\t\t\t<mark v-if=\"part.tag === 'mark' && part.content\" :key=\"`mark-${index}`\">{{\n\t\t\t\tpart.content\n\t\t\t}}</mark>\n\t\t\t<span v-else-if=\"part.content\" :key=\"`span-${index}`\">{{ part.content }}</span>\n\t\t</template>\n\t</span>\n\t<span v-else :class=\"$style.content\">\n\t\t<template v-if=\"typeof props.content === 'string'\">\n\t\t\t<span v-for=\"(line, index) in props.content.split('\\n')\" :key=\"`line-${index}`\">\n\t\t\t\t<span v-if=\"index > 0\" :class=\"$style.newLine\">\\n</span>{{ line }}\n\t\t\t</span>\n\t\t</template>\n\t\t<span v-else v-text=\"props.content\" />\n\t</span>\n</template>\n\n<style lang=\"scss\" module>\n:root .content .newLine {\n\tfont-family: var(--font-family-monospace);\n\tcolor: var(--color-line-break);\n\tpadding-right: 2px;\n}\n</style>\n"],"names":["props","__props","splitTextBySearch","text","search","escapeRegExp","s","pattern","t","parts","computed"],"mappings":"srBAIA,MAAMA,EAAQC,EAKRC,EAAoB,CACzBC,EAAO,GACPC,EAAS,KAC6C,CACtD,GAAI,CAACA,EACG,MAAA,CACN,CACC,IAAK,OACL,QAASD,CACV,CAAA,EAIF,MAAME,EAAgBC,GAAcA,EAAE,QAAQ,sBAAuB,MAAM,EACrEC,EAAU,IAAI,OAAO,IAAIF,EAAaD,CAAM,CAAC,IAAK,GAAG,EAG3D,OAFkBD,EAAK,MAAMI,CAAO,EAEnB,IAAKC,IAAO,CAAE,IAAKD,EAAQ,KAAKC,CAAC,EAAI,OAAS,OAAQ,QAASA,GAAI,CAAA,EAG/EC,EAAQC,EAAS,IACfV,EAAM,QAAU,OAAOA,EAAM,SAAY,SAC7CE,EAAkBF,EAAM,QAASA,EAAM,MAAM,EAC7C,CAAA,CACH;"}